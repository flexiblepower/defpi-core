{"version":3,"sources":["../../../../src/javascripts/test/e2e/ShowViewSpec.js"],"names":["describe","hasToLoad","beforeEach","browser","get","baseUrl","it","$$","then","fields","expect","getText","toBe","inputs","length","getAttribute","lines"],"mappings":";;AAAA;AACAA,SAAS,UAAT,EAAqB,YAAY;AAC7B;;AAEA,QAAIC,YAAY,IAAhB;AACAC,eAAW,YAAW;AAClB,YAAID,SAAJ,EAAe;AACXE,oBAAQC,GAAR,CAAYD,QAAQE,OAAR,GAAkB,gBAA9B;AACAJ,wBAAY,KAAZ;AACH;AACJ,KALD;;AAOAD,aAAS,aAAT,EAAwB,YAAW;AAC/BM,WAAG,mDAAH,EAAwD,YAAY;AAChEC,eAAG,0BAAH,EAA+BC,IAA/B,CAAoC,UAAUC,MAAV,EAAkB;AAClDC,uBAAOD,OAAO,CAAP,EAAUE,OAAV,EAAP,EAA4BC,IAA5B,CAAiC,MAAjC;AACH,aAFD;AAGH,SAJD;AAKAN,WAAG,qDAAH,EAA0D,YAAY;AAClEC,eAAG,6BAAH,EAAkCC,IAAlC,CAAuC,UAAUC,MAAV,EAAkB;AACrDC,uBAAOD,OAAO,CAAP,EAAUE,OAAV,EAAP,EAA4BC,IAA5B,CAAiC,WAAjC;AACH,aAFD;AAGH,SAJD;AAKH,KAXD;;AAaAZ,aAAS,qBAAT,EAAgC,YAAW;AACvCM,WAAG,6BAAH,EAAkC,YAAY;AAC1CC,eAAG,6BAAH,EACCC,IADD,CACM,UAAUK,MAAV,EAAkB;AACpBH,uBAAOG,OAAOC,MAAd,EAAsBF,IAAtB,CAA2B,CAA3B;AACAF,uBAAOG,OAAO,CAAP,EAAUE,YAAV,CAAuB,OAAvB,CAAP,EAAwCH,IAAxC,CAA6C,yCAA7C;AACAF,uBAAOG,OAAO,CAAP,EAAUE,YAAV,CAAuB,OAAvB,CAAP,EAAwCH,IAAxC,CAA6C,iDAA7C;AACAF,uBAAOG,OAAO,CAAP,EAAUE,YAAV,CAAuB,OAAvB,CAAP,EAAwCH,IAAxC,CAA6C,2CAA7C;AACH,aAND,EAOCJ,IAPD,CAOM,YAAW;AACb,uBAAOD,GAAG,mCAAH,CAAP;AACH,aATD,EAUCC,IAVD,CAUM,UAAUQ,KAAV,EAAiB;AACnBN,uBAAOM,MAAMF,MAAb,EAAqBF,IAArB,CAA0B,CAA1B;AACH,aAZD;AAaH,SAdD;AAeH,KAhBD;;AAkBAZ,aAAS,mBAAT,EAA8B,YAAW;AACrCM,WAAG,6BAAH,EAAkC,YAAY;AAC1CC,eAAG,8BAAH,EAAmCC,IAAnC,CAAwC,UAAUK,MAAV,EAAkB;AACtDH,uBAAOG,OAAOC,MAAd,EAAsBF,IAAtB,CAA2B,CAA3B;AACAF,uBAAOG,OAAO,CAAP,EAAUE,YAAV,CAAuB,OAAvB,CAAP,EAAwCH,IAAxC,CAA6C,6CAA7C;AACAF,uBAAOG,OAAO,CAAP,EAAUE,YAAV,CAAuB,OAAvB,CAAP,EAAwCH,IAAxC,CAA6C,0CAA7C;AACH,aAJD,EAKCJ,IALD,CAKM,YAAW;AACb,uBAAOD,GAAG,oCAAH,CAAP;AACH,aAPD,EAQCC,IARD,CAQM,UAAUQ,KAAV,EAAiB;AACnBN,uBAAOM,MAAMF,MAAb,EAAqBF,IAArB,CAA0B,CAA1B;AACH,aAVD;AAWH,SAZD;AAaH,KAdD;AAgBH,CA1DD","file":"ShowViewSpec.js","sourcesContent":["/*global describe,it,expect,$$,element,browser,by*/\ndescribe('ShowView', function () {\n    'use strict';\n\n    var hasToLoad = true;\n    beforeEach(function() {\n        if (hasToLoad) {\n            browser.get(browser.baseUrl + '#/posts/show/1');\n            hasToLoad = false;\n        }\n    });\n\n    describe('ChoiceField', function() {\n        it('should render as a label when choices is an array', function () {\n            $$('.ng-admin-field-category').then(function (fields) {\n                expect(fields[0].getText()).toBe('Tech');\n            });\n        });\n        it('should render as a label when choices is a function', function () {\n            $$('.ng-admin-field-subcategory').then(function (fields) {\n                expect(fields[0].getText()).toBe('Computers');\n            });\n        });\n    });\n\n    describe('ReferencedListField', function() {\n        it('should render as a datagrid', function () {\n            $$('.ng-admin-field-comments th')\n            .then(function (inputs) {\n                expect(inputs.length).toBe(4);\n                expect(inputs[0].getAttribute('class')).toBe('ng-admin-column-id ng-admin-type-string');\n                expect(inputs[1].getAttribute('class')).toBe('ng-admin-column-created_at ng-admin-type-string');\n                expect(inputs[2].getAttribute('class')).toBe('ng-admin-column-body ng-admin-type-string');\n            })\n            .then(function() {\n                return $$('.ng-admin-field-comments tbody tr');\n            })\n            .then(function (lines) {\n                expect(lines.length).toBe(2);\n            });\n        });\n    });\n\n    describe('EmbeddedListField', function() {\n        it('should render as a datagrid', function () {\n            $$('.ng-admin-field-backlinks th').then(function (inputs) {\n                expect(inputs.length).toBe(2);\n                expect(inputs[0].getAttribute('class')).toBe('ng-admin-column-date ng-admin-type-datetime');\n                expect(inputs[1].getAttribute('class')).toBe('ng-admin-column-url ng-admin-type-string');\n            })\n            .then(function() {\n                return $$('.ng-admin-field-backlinks tbody tr');\n            })\n            .then(function (lines) {\n                expect(lines.length).toBe(1);\n            });\n        });\n    });\n\n});\n"]}