{"version":3,"sources":["../../../../../../src/javascripts/test/fixtures/examples/blog/config.js"],"names":["app","angular","module","config","RestangularProvider","addFullRequestInterceptor","element","operation","what","url","headers","params","_page","start","_perPage","end","range","_sortField","sort","_sortDir","_filters","filter","addResponseInterceptor","data","response","totalCount","split","pop","NgAdminConfigurationProvider","nga","truncate","value","length","substr","admin","application","debug","baseApiUrl","post","entity","comment","identifier","field","tag","readOnly","subCategories","category","label","addEntity","listView","title","description","perPage","fields","cssClasses","map","links","template","targetEntity","targetField","singleApiCall","ids","filters","choices","listActions","entryCssClasses","entry","views","exportFields","c","values","exportOptions","quotes","delimiter","creationView","attributes","placeholder","validation","required","minlength","maxlength","editionView","actions","remoteComplete","refreshDelay","searchQuery","search","q","targetFields","sortField","sortDir","targetReferenceField","isDetailLink","showView","stripTags","pinned","transform","v","toUpperCase","toLowerCase","defaultValue","Date","deletionView","infinitePagination","published","batchActions","prepare","Restangular","entries","allUrl","getList","then","nbPostsByTag","forEach","tags","tagId","nb_posts","identifierValue","customHeaderTemplate","header","menu","addChild","icon","link","customDashboardTemplate","dashboard","addCollection","collection","name","format","order","configure","directive","$location","restrict","scope","displayPost","path","post_id","send","id","sendPostController","$stateParams","notification","postId","prototype","sendEmail","email","log","addnCls","$inject","sendPostControllerTemplate","$stateProvider","state","parent","controller","controllerAs","customPageTemplate"],"mappings":";;AAAA;;AAEA;;;;;;;;;;;;;;;;AAgBC,aAAY;AACT;;AAEA,QAAIA,MAAMC,QAAQC,MAAR,CAAe,OAAf,EAAwB,CAAC,UAAD,CAAxB,CAAV;;AAEA;AACAF,QAAIG,MAAJ,CAAW,CAAC,qBAAD,EAAwB,UAAUC,mBAAV,EAA+B;;AAE9D;AACAA,4BAAoBC,yBAApB,CAA8C,UAASC,OAAT,EAAkBC,SAAlB,EAA6BC,IAA7B,EAAmCC,GAAnC,EAAwCC,OAAxC,EAAiDC,MAAjD,EAAyD;AACnG,gBAAIJ,cAAc,SAAlB,EAA6B;AACzB;AACA,oBAAII,OAAOC,KAAX,EAAkB;AACd,wBAAIC,QAAQ,CAACF,OAAOC,KAAP,GAAe,CAAhB,IAAqBD,OAAOG,QAAxC;AACA,wBAAIC,MAAMJ,OAAOC,KAAP,GAAeD,OAAOG,QAAtB,GAAiC,CAA3C;AACAH,2BAAOK,KAAP,GAAe,MAAMH,KAAN,GAAc,GAAd,GAAoBE,GAApB,GAA0B,GAAzC;AACA,2BAAOJ,OAAOC,KAAd;AACA,2BAAOD,OAAOG,QAAd;AACH;AACD;AACA,oBAAIH,OAAOM,UAAX,EAAuB;AACnBN,2BAAOO,IAAP,GAAc,OAAOP,OAAOM,UAAd,GAA2B,KAA3B,GAAmCN,OAAOQ,QAA1C,GAAqD,IAAnE;AACA,2BAAOR,OAAOM,UAAd;AACA,2BAAON,OAAOQ,QAAd;AACH;AACD;AACA,oBAAIR,OAAOS,QAAX,EAAqB;AACjBT,2BAAOU,MAAP,GAAgBV,OAAOS,QAAvB;AACA,2BAAOT,OAAOS,QAAd;AACH;AACJ;AACD,mBAAO,EAAET,QAAQA,MAAV,EAAP;AACH,SAvBD;;AAyBAP,4BAAoBkB,sBAApB,CAA2C,UAASC,IAAT,EAAehB,SAAf,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCe,QAArC,EAA+C;AACtF,gBAAIjB,cAAc,SAAlB,EAA6B;AACzB,oBAAIG,UAAUc,SAASd,OAAT,EAAd;AACA,oBAAIA,QAAQ,eAAR,CAAJ,EAA8B;AAC1Bc,6BAASC,UAAT,GAAsBf,QAAQ,eAAR,EAAyBgB,KAAzB,CAA+B,GAA/B,EAAoCC,GAApC,EAAtB;AACH;AACJ;;AAED,mBAAOJ,IAAP;AACH,SATD;AAUH,KAtCU,CAAX;;AAwCA;AACAvB,QAAIG,MAAJ,CAAW,CAAC,8BAAD,EAAiC,UAAUyB,4BAAV,EAAwC;AAChF,YAAIC,MAAMD,4BAAV;;AAEA,iBAASE,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,gBAAI,CAACA,KAAL,EAAY;AACR,uBAAO,EAAP;AACH;;AAED,mBAAOA,MAAMC,MAAN,GAAe,EAAf,GAAoBD,MAAME,MAAN,CAAa,CAAb,EAAgB,EAAhB,IAAsB,KAA1C,GAAkDF,KAAzD;AACH;;AAED,YAAIG,QAAQL,IAAIM,WAAJ,CAAgB,uBAAhB,EAAyC;AAAzC,SACPC,KADO,CACD,KADC,EACM;AADN,SAEPC,UAFO,CAEI,wBAFJ,CAAZ,CAXgF,CAarC;;AAE3C;AACA,YAAIC,OAAOT,IAAIU,MAAJ,CAAW,OAAX,CAAX,CAhBgF,CAgBhD;;AAEhC,YAAIC,UAAUX,IAAIU,MAAJ,CAAW,UAAX,EACTF,UADS,CACE,wBADF,EAC4B;AAD5B,SAETI,UAFS,CAEEZ,IAAIa,KAAJ,CAAU,IAAV,CAFF,CAAd,CAlBgF,CAoB9C;;AAElC,YAAIC,MAAMd,IAAIU,MAAJ,CAAW,MAAX,EACLK,QADK,EAAV,CAtBgF,CAuB/D;;AAEjB,YAAIC,gBAAgB,CAChB,EAAEC,UAAU,MAAZ,EAAoBC,OAAO,WAA3B,EAAwChB,OAAO,WAA/C,EADgB,EAEhB,EAAEe,UAAU,MAAZ,EAAoBC,OAAO,SAA3B,EAAsChB,OAAO,SAA7C,EAFgB,EAGhB,EAAEe,UAAU,WAAZ,EAAyBC,OAAO,QAAhC,EAA0ChB,OAAO,QAAjD,EAHgB,EAIhB,EAAEe,UAAU,WAAZ,EAAyBC,OAAO,SAAhC,EAA2ChB,OAAO,SAAlD,EAJgB,CAApB;;AAOA;AACAG,cACKc,SADL,CACeV,IADf,EAEKU,SAFL,CAEeL,GAFf,EAGKK,SAHL,CAGeR,OAHf;;AAKA;;AAEA;;;AAGAF,aAAKW,QAAL,GACKC,KADL,CACW,WADX,EACwB;AADxB,SAEKC,WAFL,CAEiB,wCAFjB,EAE2D;AAF3D,SAGKC,OAHL,CAGa,CAHb,EAIKC,MAJL,CAIY,CACJxB,IAAIa,KAAJ,CAAU,IAAV,EAAgBK,KAAhB,CAAsB,IAAtB,CADI,EACyB;AAC7BlB,YAAIa,KAAJ,CAAU,OAAV,CAFI,EAEgB;AACpBb,YAAIa,KAAJ,CAAU,cAAV,EAA0B,MAA1B,CAHI,EAGgC;AACpCb,YAAIa,KAAJ,CAAU,cAAV,EAA0B,OAA1B,EAAmC;AAAnC,SACKY,UADL,CACgB,WADhB,CAJI,EAMJzB,IAAIa,KAAJ,CAAU,OAAV,EAAmB,QAAnB,EACKY,UADL,CACgB,WADhB,CANI,EAQJzB,IAAIa,KAAJ,CAAU,WAAV,EAAuB,eAAvB,EAAwC;AAAxC,SACKK,KADL,CACW,OADX,EAEKQ,GAFL,CAES;AAAA,mBAASC,QAAQA,MAAMxB,MAAd,GAAuB,EAAhC;AAAA,SAFT,EAGKyB,QAHL,CAGc,aAHd,CARI,EAYJ5B,IAAIa,KAAJ,CAAU,MAAV,EAAkB,gBAAlB,EAAoC;AAApC,SACKgB,YADL,CACkBf,GADlB,EACuB;AADvB,SAEKgB,WAFL,CAEiB9B,IAAIa,KAAJ,CAAU,MAAV,CAFjB,EAEoC;AAFpC,SAGKY,UAHL,CAGgB,WAHhB,EAIKM,aAJL,CAImB,eAAO;AAAE,mBAAO,EAAC,MAAMC,GAAP,EAAP;AAAsB,SAJlD,CAZI,CAJZ,EAsBKC,OAtBL,CAsBa,CACLjC,IAAIa,KAAJ,CAAU,UAAV,EAAsB,QAAtB,EAAgCqB,OAAhC,CAAwC,CACpC,EAAEhB,OAAO,MAAT,EAAiBhB,OAAO,MAAxB,EADoC,EAEpC,EAAEgB,OAAO,WAAT,EAAsBhB,OAAO,WAA7B,EAFoC,CAAxC,EAGGgB,KAHH,CAGS,UAHT,CADK,EAKLlB,IAAIa,KAAJ,CAAU,aAAV,EAAyB,QAAzB,EAAmCqB,OAAnC,CAA2ClB,aAA3C,EAA0DE,KAA1D,CAAgE,aAAhE,CALK,CAtBb,EA6BKiB,WA7BL,CA6BiB,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CA7BjB,EA8BKC,eA9BL,CA8BqB,UAASC,KAAT,EAAgB;AAAE;AAC/B,mBAAQA,MAAMC,KAAN,GAAc,GAAf,GAAsB,YAAtB,GAAqC,EAA5C;AACH,SAhCL,EAiCKC,YAjCL,CAiCkB,CACV9B,KAAKW,QAAL,GAAgBI,MAAhB,EADU,EACgB;AAC1BxB,YAAIa,KAAJ,CAAU,UAAV,EAAsB,QAAtB,EAAgC;AAAhC,SACKqB,OADL,CACa,CAAE;AACP,UAAEhB,OAAO,MAAT,EAAiBhB,OAAO,MAAxB,EADK,EAEL,EAAEgB,OAAO,WAAT,EAAsBhB,OAAO,WAA7B,EAFK,CADb,CAFU,EAOVF,IAAIa,KAAJ,CAAU,aAAV,EAAyB,QAAzB,EACKqB,OADL,CACa,UAASG,KAAT,EAAgB;AAAE;AACvB,mBAAOrB,cAAcxB,MAAd,CAAqB,UAAUgD,CAAV,EAAa;AACrC,uBAAOA,EAAEvB,QAAF,KAAeoB,MAAMI,MAAN,CAAaxB,QAAnC;AACH,aAFM,CAAP;AAGH,SALL,CAPU,CAjClB,EA+CKyB,aA/CL,CA+CmB;AACXC,oBAAQ,IADG;AAEXC,uBAAW;AAFA,SA/CnB;;AAoDAnC,aAAKoC,YAAL,GACKrB,MADL,CACY,CACJxB,IAAIa,KAAJ,CAAU,OAAV,EAAmB;AAAnB,SACKiC,UADL,CACgB,EAAEC,aAAa,gBAAf,EADhB,EACmD;AADnD,SAEKC,UAFL,CAEgB,EAAEC,UAAU,IAAZ,EAAkBC,WAAW,CAA7B,EAAgCC,WAAW,GAA3C,EAFhB,CADI,EAG+D;AACnEnD,YAAIa,KAAJ,CAAU,QAAV,EAAoB,MAApB,CAJI,EAIyB;AAC7Bb,YAAIa,KAAJ,CAAU,MAAV,EAAkB,SAAlB,CALI,EAK0B;AAC9Bb,YAAIa,KAAJ,CAAU,cAAV,EAA0B,MAA1B,CANI,CAM8B;AAN9B,SADZ;;AAUAJ,aAAK2C,WAAL,GACK/B,KADL,CACW,sCADX,EACmD;AADnD,SAEKgC,OAFL,CAEa,CAAC,MAAD,EAAS,MAAT,EAAiB,QAAjB,CAFb,EAEyC;AAFzC,SAGK7B,MAHL,CAGY,CACJf,KAAKoC,YAAL,GAAoBrB,MAApB,EADI,EAC0B;AAC9BxB,YAAIa,KAAJ,CAAU,UAAV,EAAsB,QAAtB,EAAgC;AAAhC,SACKqB,OADL,CACa,CAAE;AACP,UAAEhB,OAAO,MAAT,EAAiBhB,OAAO,MAAxB,EADK,EAEL,EAAEgB,OAAO,WAAT,EAAsBhB,OAAO,WAA7B,EAFK,CADb,CAFI,EAOJF,IAAIa,KAAJ,CAAU,aAAV,EAAyB,QAAzB,EACKqB,OADL,CACa,UAASG,KAAT,EAAgB;AAAE;AACvB,mBAAOrB,cAAcxB,MAAd,CAAqB,UAAUgD,CAAV,EAAa;AACrC,uBAAOA,EAAEvB,QAAF,KAAeoB,MAAMI,MAAN,CAAaxB,QAAnC;AACH,aAFM,CAAP;AAGH,SALL,EAMKW,QANL,CAMc,0MANd,EAM0N,IAN1N,CAPI,EAcJ5B,IAAIa,KAAJ,CAAU,MAAV,EAAkB,gBAAlB,EAAoC;AAApC,SACKgB,YADL,CACkBf,GADlB,EAEKgB,WAFL,CAEiB9B,IAAIa,KAAJ,CAAU,MAAV,CAFjB,EAGKiC,UAHL,CAGgB,EAAEC,aAAa,qBAAf,EAHhB,EAIKO,cAJL,CAIoB,IAJpB,EAI0B;AAClBC,0BAAc,GADI;AAElBC,yBAAa,qBAASC,MAAT,EAAiB;AAAE,uBAAO,EAAEC,GAAGD,MAAL,EAAP;AAAuB;AAFrC,SAJ1B,EAQK1B,aARL,CAQmB,eAAO;AAAE,mBAAO,EAAC,MAAMC,GAAP,EAAP;AAAsB,SARlD,EASKP,UATL,CASgB,UAThB,CAdI,EAuByB;AAC7BzB,YAAIa,KAAJ,CAAU,UAAV,EAAsB,MAAtB,CAxBI,EAyBJb,IAAIa,KAAJ,CAAU,OAAV,EAAmB,QAAnB,EACKY,UADL,CACgB,UADhB,CAzBI,EA2BJzB,IAAIa,KAAJ,CAAU,cAAV,EAA0B,OAA1B,EACKY,UADL,CACgB,UADhB,CA3BI,EA6BJzB,IAAIa,KAAJ,CAAU,WAAV,EAAuB,eAAvB,EAAwC;AAAxC,SACK8C,YADL,CACkB,CACV3D,IAAIa,KAAJ,CAAU,MAAV,EAAkB,UAAlB,CADU,EAEVb,IAAIa,KAAJ,CAAU,KAAV,EACKY,UADL,CACgB,WADhB,CAFU,CADlB,EAMKmC,SANL,CAMe,MANf,EAOKC,OAPL,CAOa,MAPb,CA7BI,EAqCJ7D,IAAIa,KAAJ,CAAU,UAAV,EAAsB,iBAAtB,EAAyC;AAAzC,SACKgB,YADL,CACkB7B,IAAIU,MAAJ,CAAW,UAAX,CADlB,EAEKoD,oBAFL,CAE0B,SAF1B,EAGKH,YAHL,CAGkB,CACV3D,IAAIa,KAAJ,CAAU,IAAV,EAAgBkD,YAAhB,CAA6B,IAA7B,CADU,EAEV/D,IAAIa,KAAJ,CAAU,YAAV,EAAwBK,KAAxB,CAA8B,QAA9B,CAFU,EAGVlB,IAAIa,KAAJ,CAAU,MAAV,EAAkBK,KAAlB,CAAwB,SAAxB,CAHU,CAHlB,EAQK0C,SARL,CAQe,YARf,EASKC,OATL,CASa,MATb,EAUK1B,WAVL,CAUiB,CAAC,MAAD,CAVjB,CArCI,EAgDJnC,IAAIa,KAAJ,CAAU,EAAV,EAAcK,KAAd,CAAoB,EAApB,EACKU,QADL,CACc,+SADd,CAhDI,CAHZ;;AAuDAnB,aAAKuD,QAAL,GAAgB;AAAhB,SACKxC,MADL,CACY,CACJxB,IAAIa,KAAJ,CAAU,IAAV,CADI,EAEJb,IAAIa,KAAJ,CAAU,OAAV,CAFI,EAGJb,IAAIa,KAAJ,CAAU,QAAV,CAHI,EAIJb,IAAIa,KAAJ,CAAU,MAAV,EAAkB,SAAlB,CAJI,EAKJb,IAAIa,KAAJ,CAAU,cAAV,EAA0B,MAA1B,CALI,EAMJb,IAAIa,KAAJ,CAAU,UAAV,EAAsB,QAAtB,EAAgC;AAAhC,SACKqB,OADL,CACa,CAAE;AACP,UAAEhB,OAAO,MAAT,EAAiBhB,OAAO,MAAxB,EADK,EAEL,EAAEgB,OAAO,WAAT,EAAsBhB,OAAO,WAA7B,EAFK,CADb,CANI,EAWJF,IAAIa,KAAJ,CAAU,aAAV,EAAyB,QAAzB,EACKqB,OADL,CACalB,aADb,CAXI,EAaJhB,IAAIa,KAAJ,CAAU,MAAV,EAAkB,gBAAlB,EAAoC;AAApC,SACKgB,YADL,CACkBf,GADlB,EAEKgB,WAFL,CAEiB9B,IAAIa,KAAJ,CAAU,MAAV,CAFjB,CAbI,EAgBJb,IAAIa,KAAJ,CAAU,UAAV,EAAsB,MAAtB,CAhBI,EAiBJb,IAAIa,KAAJ,CAAU,OAAV,EAAmB,QAAnB,CAjBI,EAkBJb,IAAIa,KAAJ,CAAU,cAAV,EAA0B,OAA1B,CAlBI,EAmBJb,IAAIa,KAAJ,CAAU,WAAV,EAAuB,eAAvB,EAAwC;AAAxC,SACK8C,YADL,CACkB,CACV3D,IAAIa,KAAJ,CAAU,MAAV,EAAkB,UAAlB,CADU,EAEVb,IAAIa,KAAJ,CAAU,KAAV,CAFU,CADlB,EAKK+C,SALL,CAKe,MALf,EAMKC,OANL,CAMa,MANb,CAnBI,EA0BJ7D,IAAIa,KAAJ,CAAU,UAAV,EAAsB,iBAAtB,EAAyC;AAAzC,SACKgB,YADL,CACkB7B,IAAIU,MAAJ,CAAW,UAAX,CADlB,EAEKoD,oBAFL,CAE0B,SAF1B,EAGKH,YAHL,CAGkB,CACV3D,IAAIa,KAAJ,CAAU,IAAV,EAAgBkD,YAAhB,CAA6B,IAA7B,CADU,EAEV/D,IAAIa,KAAJ,CAAU,YAAV,EAAwBK,KAAxB,CAA8B,QAA9B,CAFU,EAGVlB,IAAIa,KAAJ,CAAU,MAAV,EAAkBK,KAAlB,CAAwB,SAAxB,CAHU,CAHlB,EAQK0C,SARL,CAQe,YARf,EASKC,OATL,CASa,MATb,EAUK1B,WAVL,CAUiB,CAAC,MAAD,CAVjB,CA1BI,EAqCJnC,IAAIa,KAAJ,CAAU,EAAV,EAAcK,KAAd,CAAoB,EAApB,EACKU,QADL,CACc,+SADd,CArCI,EAuCJ5B,IAAIa,KAAJ,CAAU,eAAV,EAA2BK,KAA3B,CAAiC,EAAjC,EACKU,QADL,CACc,wCADd,CAvCI,CADZ;;AA4CA;;;AAGAjB,gBAAQS,QAAR,GACKC,KADL,CACW,UADX,EAEKE,OAFL,CAEa,CAFb,EAEgB;AAFhB,SAGKC,MAHL,CAGY,CACJxB,IAAIa,KAAJ,CAAU,YAAV,EAAwB,MAAxB,EACKK,KADL,CACW,QADX,CADI,EAGJlB,IAAIa,KAAJ,CAAU,aAAV,EACKK,KADL,CACW,QADX,EAEKO,UAFL,CAEgB,WAFhB,CAHI,EAMJzB,IAAIa,KAAJ,CAAU,MAAV,EAAkB,SAAlB,EACKoD,SADL,CACe,IADf,EAEKvC,GAFL,CAESzB,QAFT,CANI,EASJD,IAAIa,KAAJ,CAAU,SAAV,EAAqB,WAArB,EACKK,KADL,CACW,MADX,EAEKW,YAFL,CAEkBpB,IAFlB,EAGKqB,WAHL,CAGiB9B,IAAIa,KAAJ,CAAU,OAAV,EAAmBa,GAAnB,CAAuBzB,QAAvB,CAHjB,EAIKwB,UAJL,CAIgB,WAJhB,EAKKM,aALL,CAKmB,eAAO;AAAE,mBAAO,EAAC,MAAMC,GAAP,EAAP;AAAsB,SALlD,CATI,CAHZ,EAmBKC,OAnBL,CAmBa,CACLjC,IAAIa,KAAJ,CAAU,GAAV,EACKK,KADL,CACW,EADX,EAEKgD,MAFL,CAEY,IAFZ,EAGKtC,QAHL,CAGc,wMAHd,EAIKuC,SAJL,CAIe;AAAA,mBAAKC,KAAKA,EAAEC,WAAF,EAAV;AAAA,SAJf,EAI0C;AAJ1C,SAKK3C,GALL,CAKS;AAAA,mBAAK0C,KAAKA,EAAEE,WAAF,EAAV;AAAA,SALT,CADK,EAMgC;AACrCtE,YAAIa,KAAJ,CAAU,YAAV,EAAwB,MAAxB,EACKK,KADL,CACW,QADX,EAEK4B,UAFL,CAEgB,EAAC,eAAe,gBAAhB,EAFhB,CAPK,EAUL9C,IAAIa,KAAJ,CAAU,SAAV,EAAqB,WAArB,EACKK,KADL,CACW,MADX,EAEKW,YAFL,CAEkBpB,IAFlB,EAGKqB,WAHL,CAGiB9B,IAAIa,KAAJ,CAAU,OAAV,CAHjB,EAIKyC,cAJL,CAIoB,IAJpB,EAI0B;AAClBC,0BAAc,GADI;AAElBC,yBAAa,qBAASC,MAAT,EAAiB;AAAE,uBAAO,EAAEC,GAAGD,MAAL,EAAP;AAAuB;AAFrC,SAJ1B,CAVK,CAnBb,EAsCKtB,WAtCL,CAsCiB,CAAC,MAAD,EAAS,QAAT,CAtCjB;;AAwCAxB,gBAAQkC,YAAR,GACKrB,MADL,CACY,CACJxB,IAAIa,KAAJ,CAAU,YAAV,EAAwB,MAAxB,EACKK,KADL,CACW,QADX,EAEKqD,YAFL,CAEkB,IAAIC,IAAJ,EAFlB,CADI,EAG2B;AAC/BxE,YAAIa,KAAJ,CAAU,aAAV,EACKK,KADL,CACW,QADX,CAJI,EAMJlB,IAAIa,KAAJ,CAAU,MAAV,EAAkB,SAAlB,CANI,EAOJb,IAAIa,KAAJ,CAAU,SAAV,EAAqB,WAArB,EACKK,KADL,CACW,MADX,EAEKW,YAFL,CAEkBpB,IAFlB,EAGKqB,WAHL,CAGiB9B,IAAIa,KAAJ,CAAU,OAAV,EAAmBa,GAAnB,CAAuBzB,QAAvB,CAHjB,EAIK2D,SAJL,CAIe,OAJf,EAKKC,OALL,CAKa,KALb,EAMKb,UANL,CAMgB,EAAEC,UAAU,IAAZ,EANhB,EAOKK,cAPL,CAOoB,IAPpB,EAO0B;AAClBC,0BAAc,GADI;AAElBC,yBAAa,qBAASC,MAAT,EAAiB;AAAE,uBAAO,EAAEC,GAAGD,MAAL,EAAP;AAAuB;AAFrC,SAP1B,CAPI,CADZ;;AAqBA9C,gBAAQyC,WAAR,GACK5B,MADL,CACYb,QAAQkC,YAAR,GAAuBrB,MAAvB,EADZ,EAEKA,MAFL,CAEY,CACJxB,IAAIa,KAAJ,CAAU,EAAV,EAAcK,KAAd,CAAoB,EAApB,EACKU,QADL,CACc,uCADd,CADI,CAEmD;AAFnD,SAFZ;;AAOAjB,gBAAQ8D,YAAR,GACKpD,KADL,CACW,uBADX,EAnRgF,CAoR3C;;AAErC;;;AAGAP,YAAIM,QAAJ,GACKsD,kBADL,CACwB,KADxB,EAC+B;AAD/B,SAEKlD,MAFL,CAEY,CACJxB,IAAIa,KAAJ,CAAU,IAAV,EAAgBK,KAAhB,CAAsB,IAAtB,CADI,EAEJlB,IAAIa,KAAJ,CAAU,MAAV,CAFI,EAGJb,IAAIa,KAAJ,CAAU,WAAV,EAAuB,SAAvB,EAAkCY,UAAlC,CAA6C,UAASY,KAAT,EAAgB;AAAE;AAC3D,gBAAIA,SAASA,MAAMI,MAAnB,EAA0B;AACtB,oBAAIJ,MAAMI,MAAN,CAAakC,SAAjB,EAA4B;AACxB,2BAAO,wBAAP;AACH;AACD,uBAAO,wBAAP;AACH;AACJ,SAPD,CAHI,EAWJ3E,IAAIa,KAAJ,CAAU,QAAV,EACKK,KADL,CACW,YADX,EAEKU,QAFL,CAEc,uCAFd,EAGKH,UAHL,CAGgB,WAHhB,CAXI,EAeJzB,IAAIa,KAAJ,CAAU,UAAV,CAfI,CAFZ,EAmBKoB,OAnBL,CAmBa,CACLjC,IAAIa,KAAJ,CAAU,WAAV,EACKK,KADL,CACW,mBADX,EAEKU,QAFL,CAEc,GAFd,EAGK2C,YAHL,CAGkB,KAHlB,CADK,CAnBb,EAyBKK,YAzBL,CAyBkB,EAzBlB,EAyBsB;AAzBtB,SA0BKzC,WA1BL,CA0BiB,CAAC,MAAD,EAAS,MAAT,CA1BjB;;AA4BA;AACArB,YAAIM,QAAJ,GAAeyD,OAAf,CAAuB,CAAC,aAAD,EAAgB,SAAhB,EAA2B,UAASC,WAAT,EAAsBC,OAAtB,EAA+B;AAC7E;AACA,mBAAOD,YAAYE,MAAZ,CAAmB,OAAnB,EAA4BC,OAA5B,GACFC,IADE,CACG,UAASvF,QAAT,EAAmB;AACrB,oBAAMwF,eAAe,EAArB;AACAxF,yBAASD,IAAT,CAAc0F,OAAd,CAAsB,UAAS3E,IAAT,EAAe;AACjCA,yBAAK4E,IAAL,CAAUD,OAAV,CAAkB,UAASE,KAAT,EAAgB;AAC9B,4BAAI,CAACH,aAAaG,KAAb,CAAL,EAA0B;AACtBH,yCAAaG,KAAb,IAAsB,CAAtB;AACH;AACDH,qCAAaG,KAAb;AACH,qBALD;AAMH,iBAPD;AAQAP,wBAAQrD,GAAR,CAAY,UAASZ,GAAT,EAAc;AACtBA,wBAAI2B,MAAJ,CAAW8C,QAAX,GAAsBJ,aAAarE,IAAI0E,eAAjB,CAAtB;AACH,iBAFD;AAGH,aAdE,CAAP;AAeH,SAjBsB,CAAvB;;AAmBA1E,YAAIsC,WAAJ,GACK5B,MADL,CACY,CACJxB,IAAIa,KAAJ,CAAU,MAAV,CADI,EAEJb,IAAIa,KAAJ,CAAU,WAAV,EAAuB,SAAvB,EAAkCmC,UAAlC,CAA6C;AACzCC,sBAAU,IAD+B,CAC1B;AAD0B,SAA7C,CAFI,CADZ;;AAQAnC,YAAIkD,QAAJ,GACKxC,MADL,CACY,CACJxB,IAAIa,KAAJ,CAAU,MAAV,CADI,EAEJb,IAAIa,KAAJ,CAAU,WAAV,EAAuB,SAAvB,CAFI,CADZ;;AAMA;AACA,YAAI4E,uBACJ,gCACI,oFADJ,GAEM,gCAFN,GAGM,gCAHN,GAIM,gCAJN,GAKI,WALJ,GAMI,mGANJ,GAOA,QAPA,GAQA,gDARA,GASI,8JATJ,GAUA,MAXA;AAYApF,cAAMqF,MAAN,CAAaD,oBAAb;;AAEA;AACApF,cAAMsF,IAAN,CAAW3F,IAAI2F,IAAJ,GACNC,QADM,CACG5F,IAAI2F,IAAJ,CAASlF,IAAT,EAAeoF,IAAf,CAAoB,gDAApB,CADH,EAC0E;AAD1E,SAEND,QAFM,CAEG5F,IAAI2F,IAAJ,CAAShF,OAAT,EAAkBkF,IAAlB,CAAuB,4DAAvB,CAFH,EAEyF;AAFzF,SAGND,QAHM,CAGG5F,IAAI2F,IAAJ,CAAS7E,GAAT,EAAc+E,IAAd,CAAmB,gDAAnB,CAHH,EAIND,QAJM,CAIG5F,IAAI2F,IAAJ,GAAWtE,KAAX,CAAiB,OAAjB,EACLuE,QADK,CACI5F,IAAI2F,IAAJ,GAAWtE,KAAX,CAAiB,OAAjB,EAA0BwE,IAA1B,CAA+B,EAA/B,EAAmCC,IAAnC,CAAwC,QAAxC,CADJ,CAJH,CAAX;;AASA;AACA,YAAIC,0BACJ,8CACA,0FADA,GAEI,+FAFJ,GAGA,oBAHA,GAIA,qCAJA,GAKI,yBALJ,GAMQ,mCANR,GAOY,0LAPZ,GAQQ,QARR,GASI,QATJ,GAUA,QAVA,GAWA,qCAXA,GAYI,wBAZJ,GAaQ,iCAbR,GAcY,kMAdZ,GAeQ,QAfR,GAgBQ,iCAhBR,GAiBY,oMAjBZ,GAkBQ,QAlBR,GAmBI,QAnBJ,GAoBI,wBApBJ,GAqBQ,kCArBR,GAsBY,kLAtBZ,GAuBQ,QAvBR,GAwBI,QAxBJ,GAyBA,QA1BA;AA2BA1F,cAAM2F,SAAN,CAAgBhG,IAAIgG,SAAJ,GACXC,aADW,CACGjG,IAAIkG,UAAJ,CAAezF,IAAf,EACV0F,IADU,CACL,cADK,EAEV9E,KAFU,CAEJ,cAFI,EAGVE,OAHU,CAGF,CAHE,EAGC;AAHD,SAIVC,MAJU,CAIH,CACJxB,IAAIa,KAAJ,CAAU,cAAV,EAA0B,MAA1B,EAAkCK,KAAlC,CAAwC,WAAxC,EAAqDkF,MAArD,CAA4D,OAA5D,CADI,EAEJpG,IAAIa,KAAJ,CAAU,OAAV,EAAmBkD,YAAnB,CAAgC,IAAhC,EAAsCrC,GAAtC,CAA0CzB,QAA1C,CAFI,EAGJD,IAAIa,KAAJ,CAAU,OAAV,EAAmB,QAAnB,CAHI,CAJG,EASV+C,SATU,CASA,cATA,EAUVC,OAVU,CAUF,MAVE,EAWVwC,KAXU,CAWJ,CAXI,CADH,EAcXJ,aAdW,CAcGjG,IAAIkG,UAAJ,CAAezF,IAAf,EACV0F,IADU,CACL,eADK,EAEV9E,KAFU,CAEJ,eAFI,EAGVE,OAHU,CAGF,CAHE,EAGC;AAHD,SAIVC,MAJU,CAIH,CACJxB,IAAIa,KAAJ,CAAU,cAAV,EAA0B,MAA1B,EAAkCK,KAAlC,CAAwC,WAAxC,EAAqDkF,MAArD,CAA4D,OAA5D,CADI,EAEJpG,IAAIa,KAAJ,CAAU,OAAV,EAAmBkD,YAAnB,CAAgC,IAAhC,EAAsCrC,GAAtC,CAA0CzB,QAA1C,CAFI,EAGJD,IAAIa,KAAJ,CAAU,OAAV,EAAmB,QAAnB,CAHI,CAJG,EASV+C,SATU,CASA,OATA,EAUVC,OAVU,CAUF,MAVE,EAWVwC,KAXU,CAWJ,CAXI,CAdH,EA2BXJ,aA3BW,CA2BGjG,IAAIkG,UAAJ,CAAevF,OAAf,EACVU,KADU,CACJ,eADI,EAEVE,OAFU,CAEF,EAFE,EAGVC,MAHU,CAGH,CACJxB,IAAIa,KAAJ,CAAU,YAAV,EAAwB,MAAxB,EACKK,KADL,CACW,QADX,CADI,EAGJlB,IAAIa,KAAJ,CAAU,MAAV,EAAkB,SAAlB,EACKK,KADL,CACW,SADX,EAEK+C,SAFL,CAEe,IAFf,EAGKvC,GAHL,CAGSzB,QAHT,EAIK8D,YAJL,CAIkB,IAJlB,CAHI,EAQJ/D,IAAIa,KAAJ,CAAU,SAAV,EAAqB,WAArB,EACKK,KADL,CACW,MADX,EAEKW,YAFL,CAEkBpB,IAFlB,EAGKqB,WAHL,CAGiB9B,IAAIa,KAAJ,CAAU,OAAV,EAAmBa,GAAnB,CAAuBzB,QAAvB,CAHjB,CARI,CAHG,EAgBV2D,SAhBU,CAgBA,YAhBA,EAiBVC,OAjBU,CAiBF,MAjBE,EAkBVwC,KAlBU,CAkBJ,CAlBI,CA3BH,EA+CXJ,aA/CW,CA+CGjG,IAAIkG,UAAJ,CAAepF,GAAf,EACVO,KADU,CACJ,yBADI,EAEVE,OAFU,CAEF,EAFE,EAGVC,MAHU,CAGH,CACJxB,IAAIa,KAAJ,CAAU,MAAV,CADI,EAEJb,IAAIa,KAAJ,CAAU,WAAV,EAAuB,SAAvB,EAAkCK,KAAlC,CAAwC,gBAAxC,CAFI,CAHG,EAOViB,WAPU,CAOE,CAAC,MAAD,CAPF,EAQVkE,KARU,CAQJ,CARI,CA/CH,EAyDXzE,QAzDW,CAyDFmE,uBAzDE,CAAhB;;AA4DA/F,YAAIsG,SAAJ,CAAcjG,KAAd;AACH,KAzcU,CAAX;;AA2cAlC,QAAIoI,SAAJ,CAAc,UAAd,EAA0B,CAAC,WAAD,EAAc,UAAUC,SAAV,EAAqB;AACzD,eAAO;AACHC,sBAAU,GADP;AAEHC,mBAAO,EAAErE,OAAO,GAAT,EAFJ;AAGHT,sBAAU,mFAHP;AAIHkE,kBAAM,cAAUY,KAAV,EAAiB;AACnBA,sBAAMC,WAAN,GAAoB,YAAY;AAC5BH,8BAAUI,IAAV,CAAe,iBAAiBF,MAAMrE,KAAN,GAAcI,MAAd,CAAqBoE,OAArD,EAD4B,CACmC;AAClE,iBAFD;AAGH;AARE,SAAP;AAUH,KAXyB,CAA1B;;AAaA1I,QAAIoI,SAAJ,CAAc,WAAd,EAA2B,CAAC,WAAD,EAAc,UAAUC,SAAV,EAAqB;AAC1D,eAAO;AACHC,sBAAU,GADP;AAEHC,mBAAO,EAAEjG,MAAM,GAAR,EAFJ;AAGHmB,sBAAU,qEAHP;AAIHkE,kBAAM,cAAUY,KAAV,EAAiB;AACnBA,sBAAMI,IAAN,GAAa,YAAY;AACrBN,8BAAUI,IAAV,CAAe,eAAeF,MAAMjG,IAAN,GAAagC,MAAb,CAAoBsE,EAAlD;AACH,iBAFD;AAGH;AARE,SAAP;AAUH,KAX0B,CAA3B;;AAaA;;AAEA,aAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,YAA1C,EAAwD;AACpD,aAAKC,MAAL,GAAcF,aAAaF,EAA3B;AACA;AACA,aAAKG,YAAL,GAAoBA,YAApB;AACH;AACDF,uBAAmBI,SAAnB,CAA6BC,SAA7B,GAAyC,YAAW;AAChD,YAAI,KAAKC,KAAT,EAAgB;AACZ,iBAAKJ,YAAL,CAAkBK,GAAlB,CAAsB,gCAAgC,KAAKD,KAA3D,EAAkE,EAACE,SAAS,uBAAV,EAAlE;AACH,SAFD,MAEO;AACH,iBAAKN,YAAL,CAAkBK,GAAlB,CAAsB,oBAAtB,EAA4C,EAACC,SAAS,qBAAV,EAA5C;AACH;AACJ,KAND;AAOAR,uBAAmBS,OAAnB,GAA6B,CAAC,cAAD,EAAiB,cAAjB,CAA7B;;AAEA,QAAIC,6BACA,6CACI,sEADJ,GAEI,2BAFJ,GAGQ,sDAHR,GAIQ,mDAJR,GAKI,QALJ,GAMA,cANA,GAOA,mBAPA,GAQI,4IARJ,GASI,mGATJ,GAUA,QAXJ;;AAaAvJ,QAAIG,MAAJ,CAAW,CAAC,gBAAD,EAAmB,UAAUqJ,cAAV,EAA0B;AACpDA,uBAAeC,KAAf,CAAqB,WAArB,EAAkC;AAC9BC,oBAAQ,MADsB;AAE9BjJ,iBAAK,eAFyB;AAG9BE,oBAAQ,EAAEiI,IAAI,IAAN,EAHsB;AAI9Be,wBAAYd,kBAJkB;AAK9Be,0BAAc,YALgB;AAM9BnG,sBAAU8F;AANoB,SAAlC;AAQH,KATU,CAAX;;AAWA;AACA,QAAIM,qBAAqB,6CACjB,sEADiB,GAEjB,2BAFiB,GAGb,gBAHa,GAIb,mDAJa,GAKjB,QALiB,GAMrB,cANJ;AAOA7J,QAAIG,MAAJ,CAAW,CAAC,gBAAD,EAAmB,UAAUqJ,cAAV,EAA0B;AACpDA,uBAAeC,KAAf,CAAqB,OAArB,EAA8B;AAC1BC,oBAAQ,MADkB;AAE1BjJ,iBAAK,QAFqB;AAG1BgD,sBAAUoG;AAHgB,SAA9B;AAKH,KANU,CAAX;AAQH,CA5kBA,GAAD","file":"config.js","sourcesContent":["/*global angular*/\n\n/*\n * This is an example ng-admin configuration for a blog administration composed\n * of three entities: post, comment, and tag. Reading the code and the comments\n * will help you understand how a typical ng-admin application works. You can\n * browse the result online at http://ng-admin.marmelab.com.\n *\n * The remote REST API is simulated in the browser, using FakeRest\n * (https://github.com/marmelab/FakeRest). Look at the JSON responses in the\n * browser console to see the data used by ng-admin.\n *\n * For simplicity's sake, the entire configuration is written in a single file,\n * but in a real world situation, you would probably split that configuration\n * into one file per entity. For another example configuration on a larger set\n * of entities, and using the best development practices, check out the\n * Posters Galore demo (http://marmelab.com/ng-admin-demo/).\n */\n(function () {\n    \"use strict\";\n\n    var app = angular.module('myApp', ['ng-admin']);\n\n    // API Mapping\n    app.config(['RestangularProvider', function (RestangularProvider) {\n\n        // use the custom query parameters function to format the API request correctly\n        RestangularProvider.addFullRequestInterceptor(function(element, operation, what, url, headers, params) {\n            if (operation === 'getList') {\n                // custom pagination params\n                if (params._page) {\n                    var start = (params._page - 1) * params._perPage;\n                    var end = params._page * params._perPage - 1;\n                    params.range = \"[\" + start + \",\" + end + \"]\";\n                    delete params._page;\n                    delete params._perPage;\n                }\n                // custom sort params\n                if (params._sortField) {\n                    params.sort = '[\"' + params._sortField + '\",\"' + params._sortDir + '\"]';\n                    delete params._sortField;\n                    delete params._sortDir;\n                }\n                // custom filters\n                if (params._filters) {\n                    params.filter = params._filters;\n                    delete params._filters;\n                }\n            }\n            return { params: params };\n        });\n\n        RestangularProvider.addResponseInterceptor(function(data, operation, what, url, response) {\n            if (operation === \"getList\") {\n                var headers = response.headers();\n                if (headers['content-range']) {\n                    response.totalCount = headers['content-range'].split('/').pop();\n                }\n            }\n\n            return data;\n        });\n    }]);\n\n    // Admin definition\n    app.config(['NgAdminConfigurationProvider', function (NgAdminConfigurationProvider) {\n        var nga = NgAdminConfigurationProvider;\n\n        function truncate(value) {\n            if (!value) {\n                return '';\n            }\n\n            return value.length > 50 ? value.substr(0, 50) + '...' : value;\n        }\n\n        var admin = nga.application('ng-admin backend demo') // application main title\n            .debug(false) // debug disabled\n            .baseApiUrl('http://localhost:3000/'); // main API endpoint\n\n        // define all entities at the top to allow references between them\n        var post = nga.entity('posts'); // the API endpoint for posts will be http://localhost:3000/posts/:id\n\n        var comment = nga.entity('comments')\n            .baseApiUrl('http://localhost:3000/') // The base API endpoint can be customized by entity\n            .identifier(nga.field('id')); // you can optionally customize the identifier used in the api ('id' by default)\n\n        var tag = nga.entity('tags')\n            .readOnly(); // a readOnly entity has disabled creation, edition, and deletion views\n\n        var subCategories = [\n            { category: 'tech', label: 'Computers', value: 'computers' },\n            { category: 'tech', label: 'Gadgets', value: 'gadgets' },\n            { category: 'lifestyle', label: 'Travel', value: 'travel' },\n            { category: 'lifestyle', label: 'Fitness', value: 'fitness' }\n        ];\n\n        // set the application entities\n        admin\n            .addEntity(post)\n            .addEntity(tag)\n            .addEntity(comment);\n\n        // customize entities and views\n\n        /*****************************\n         * post entity customization *\n         *****************************/\n        post.listView()\n            .title('All posts') // default title is \"[Entity_name] list\"\n            .description('List of posts with infinite pagination') // description appears under the title\n            .perPage(5)\n            .fields([\n                nga.field('id').label('id'), // The default displayed name is the camelCase field name. label() overrides id\n                nga.field('title'), // the default list field type is \"string\", and displays as a string\n                nga.field('published_at', 'date'),  // Date field type allows date formatting\n                nga.field('average_note', 'float') // Float type also displays decimal digits\n                    .cssClasses('hidden-xs'),\n                nga.field('views', 'number')\n                    .cssClasses('hidden-xs'),\n                nga.field('backlinks', 'embedded_list') // display list of related comments\n                    .label('Links')\n                    .map(links => links ? links.length : '')\n                    .template('{{ value }}'),\n                nga.field('tags', 'reference_many') // a Reference is a particular type of field that references another entity\n                    .targetEntity(tag) // the tag entity is defined later in this file\n                    .targetField(nga.field('name')) // the field to be displayed in this list\n                    .cssClasses('hidden-xs')\n                    .singleApiCall(ids => { return {'id': ids }; })\n            ])\n            .filters([\n                nga.field('category', 'choice').choices([\n                    { label: 'Tech', value: 'tech' },\n                    { label: 'Lifestyle', value: 'lifestyle' }\n                ]).label('Category'),\n                nga.field('subcategory', 'choice').choices(subCategories).label('Subcategory')\n            ])\n            .listActions(['show', 'edit', 'delete'])\n            .entryCssClasses(function(entry) { // set row class according to entry\n                return (entry.views > 300) ? 'is-popular' : '';\n            })\n            .exportFields([\n                post.listView().fields(), // fields() without arguments returns the list of fields. That way you can reuse fields from another view to avoid repetition\n                nga.field('category', 'choice') // a choice field is rendered as a dropdown in the edition view\n                    .choices([ // List the choice as object literals\n                        { label: 'Tech', value: 'tech' },\n                        { label: 'Lifestyle', value: 'lifestyle' }\n                    ]),\n                nga.field('subcategory', 'choice')\n                    .choices(function(entry) { // choices also accepts a function to return a list of choices based on the current entry\n                        return subCategories.filter(function (c) {\n                            return c.category === entry.values.category;\n                        });\n                    }),\n            ])\n            .exportOptions({\n                quotes: true,\n                delimiter: ';'\n            });\n\n        post.creationView()\n            .fields([\n                nga.field('title') // the default edit field type is \"string\", and displays as a text input\n                    .attributes({ placeholder: 'the post title' }) // you can add custom attributes, too\n                    .validation({ required: true, minlength: 3, maxlength: 100 }), // add validation rules for fields\n                nga.field('teaser', 'text'), // text field type translates to a textarea\n                nga.field('body', 'wysiwyg'), // overriding the type allows rich text editing for the body\n                nga.field('published_at', 'date') // Date field type translates to a datepicker\n            ]);\n\n        post.editionView()\n            .title('Edit post \"{{ entry.values.title }}\"') // title() accepts a template string, which has access to the entry\n            .actions(['list', 'show', 'delete']) // choose which buttons appear in the top action bar. Show is disabled by default\n            .fields([\n                post.creationView().fields(), // fields() without arguments returns the list of fields. That way you can reuse fields from another view to avoid repetition\n                nga.field('category', 'choice') // a choice field is rendered as a dropdown in the edition view\n                    .choices([ // List the choice as object literals\n                        { label: 'Tech', value: 'tech' },\n                        { label: 'Lifestyle', value: 'lifestyle' }\n                    ]),\n                nga.field('subcategory', 'choice')\n                    .choices(function(entry) { // choices also accepts a function to return a list of choices based on the current entry\n                        return subCategories.filter(function (c) {\n                            return c.category === entry.values.category;\n                        });\n                    })\n                    .template('<ma-field ng-if=\"entry.values.category\" field=\"::field\" value=\"entry.values[field.name()]\" entry=\"entry\" entity=\"::entity\" form=\"formController.form\" datastore=\"::formController.dataStore\"></ma-field>', true),\n                nga.field('tags', 'reference_many') // ReferenceMany translates to a select multiple\n                    .targetEntity(tag)\n                    .targetField(nga.field('name'))\n                    .attributes({ placeholder: 'Select some tags...' })\n                    .remoteComplete(true, {\n                        refreshDelay: 300 ,\n                        searchQuery: function(search) { return { q: search }; }\n                    })\n                    .singleApiCall(ids => { return {'id': ids }; })\n                    .cssClasses('col-sm-4'), // customize look and feel through CSS classes\n                nga.field('pictures', 'json'),\n                nga.field('views', 'number')\n                    .cssClasses('col-sm-4'),\n                nga.field('average_note', 'float')\n                    .cssClasses('col-sm-4'),\n                nga.field('backlinks', 'embedded_list') // display embedded list\n                    .targetFields([\n                        nga.field('date', 'datetime'),\n                        nga.field('url')\n                            .cssClasses('col-lg-10')\n                    ])\n                    .sortField('date')\n                    .sortDir('DESC'),\n                nga.field('comments', 'referenced_list') // display list of related comments\n                    .targetEntity(nga.entity('comments'))\n                    .targetReferenceField('post_id')\n                    .targetFields([\n                        nga.field('id').isDetailLink(true),\n                        nga.field('created_at').label('Posted'),\n                        nga.field('body').label('Comment')\n                    ])\n                    .sortField('created_at')\n                    .sortDir('DESC')\n                    .listActions(['edit']),\n                nga.field('').label('')\n                    .template('<span class=\"pull-right\"><ma-filtered-list-button entity-name=\"comments\" filter=\"{ post_id: entry.values.id }\" size=\"sm\"></ma-filtered-list-button><ma-create-button entity-name=\"comments\" size=\"sm\" label=\"Create related comment\" default-values=\"{ post_id: entry.values.id }\"></ma-create-button></span>')\n            ]);\n\n        post.showView() // a showView displays one entry in full page - allows to display more data than in a a list\n            .fields([\n                nga.field('id'),\n                nga.field('title'),\n                nga.field('teaser'),\n                nga.field('body', 'wysiwyg'),\n                nga.field('published_at', 'date'),\n                nga.field('category', 'choice') // a choice field is rendered as a dropdown in the edition view\n                    .choices([ // List the choice as object literals\n                        { label: 'Tech', value: 'tech' },\n                        { label: 'Lifestyle', value: 'lifestyle' }\n                    ]),\n                nga.field('subcategory', 'choice')\n                    .choices(subCategories),\n                nga.field('tags', 'reference_many') // ReferenceMany translates to a select multiple\n                    .targetEntity(tag)\n                    .targetField(nga.field('name')),\n                nga.field('pictures', 'json'),\n                nga.field('views', 'number'),\n                nga.field('average_note', 'float'),\n                nga.field('backlinks', 'embedded_list') // display embedded list\n                    .targetFields([\n                        nga.field('date', 'datetime'),\n                        nga.field('url')\n                    ])\n                    .sortField('date')\n                    .sortDir('DESC'),\n                nga.field('comments', 'referenced_list') // display list of related comments\n                    .targetEntity(nga.entity('comments'))\n                    .targetReferenceField('post_id')\n                    .targetFields([\n                        nga.field('id').isDetailLink(true),\n                        nga.field('created_at').label('Posted'),\n                        nga.field('body').label('Comment')\n                    ])\n                    .sortField('created_at')\n                    .sortDir('DESC')\n                    .listActions(['edit']),\n                nga.field('').label('')\n                    .template('<span class=\"pull-right\"><ma-filtered-list-button entity-name=\"comments\" filter=\"{ post_id: entry.values.id }\" size=\"sm\"></ma-filtered-list-button><ma-create-button entity-name=\"comments\" size=\"sm\" label=\"Create related comment\" default-values=\"{ post_id: entry.values.id }\"></ma-create-button></span>'),\n                nga.field('custom_action').label('')\n                    .template('<send-email post=\"entry\"></send-email>')\n            ]);\n\n        /********************************\n         * comment entity customization *\n         ********************************/\n        comment.listView()\n            .title('Comments')\n            .perPage(5) // limit the number of elements displayed per page. Default is 30.\n            .fields([\n                nga.field('created_at', 'date')\n                    .label('Posted'),\n                nga.field('author.name')\n                    .label('Author')\n                    .cssClasses('hidden-xs'),\n                nga.field('body', 'wysiwyg')\n                    .stripTags(true)\n                    .map(truncate),\n                nga.field('post_id', 'reference')\n                    .label('Post')\n                    .targetEntity(post)\n                    .targetField(nga.field('title').map(truncate))\n                    .cssClasses('hidden-xs')\n                    .singleApiCall(ids => { return {'id': ids }; })\n            ])\n            .filters([\n                nga.field('q')\n                    .label('')\n                    .pinned(true)\n                    .template('<div class=\"input-group\"><input type=\"text\" ng-model=\"value\" placeholder=\"Search\" class=\"form-control\"></input><span class=\"input-group-addon\"><i class=\"glyphicon glyphicon-search\"></i></span></div>')\n                    .transform(v => v && v.toUpperCase()) // transform the entered value before sending it as a query parameter\n                    .map(v => v && v.toLowerCase()), // map the query parameter to a displayed value in the filter form\n                nga.field('created_at', 'date')\n                    .label('Posted')\n                    .attributes({'placeholder': 'Filter by date'}),\n                nga.field('post_id', 'reference')\n                    .label('Post')\n                    .targetEntity(post)\n                    .targetField(nga.field('title'))\n                    .remoteComplete(true, {\n                        refreshDelay: 200,\n                        searchQuery: function(search) { return { q: search }; }\n                    })\n            ])\n            .listActions(['edit', 'delete']);\n\n        comment.creationView()\n            .fields([\n                nga.field('created_at', 'date')\n                    .label('Posted')\n                    .defaultValue(new Date()), // preset fields in creation view with defaultValue\n                nga.field('author.name')\n                    .label('Author'),\n                nga.field('body', 'wysiwyg'),\n                nga.field('post_id', 'reference')\n                    .label('Post')\n                    .targetEntity(post)\n                    .targetField(nga.field('title').map(truncate))\n                    .sortField('title')\n                    .sortDir('ASC')\n                    .validation({ required: true })\n                    .remoteComplete(true, {\n                        refreshDelay: 200,\n                        searchQuery: function(search) { return { q: search }; }\n                    })\n            ]);\n\n        comment.editionView()\n            .fields(comment.creationView().fields())\n            .fields([\n                nga.field('').label('')\n                    .template('<post-link entry=\"entry\"></post-link>') // template() can take a function or a string\n            ]);\n\n        comment.deletionView()\n            .title('Deletion confirmation'); // customize the deletion confirmation message\n\n        /****************************\n         * tag entity customization *\n         ****************************/\n        tag.listView()\n            .infinitePagination(false) // by default, the list view uses infinite pagination. Set to false to use regulat pagination\n            .fields([\n                nga.field('id').label('ID'),\n                nga.field('name'),\n                nga.field('published', 'boolean').cssClasses(function(entry) { // add custom CSS classes to inputs and columns\n                    if (entry && entry.values){\n                        if (entry.values.published) {\n                            return 'bg-success text-center';\n                        }\n                        return 'bg-warning text-center';\n                    }\n                }),\n                nga.field('custom')\n                    .label('Upper name')\n                    .template('{{ entry.values.name.toUpperCase() }}')\n                    .cssClasses('hidden-xs'),\n                nga.field('nb_posts')\n            ])\n            .filters([\n                nga.field('published')\n                    .label('Not yet published')\n                    .template(' ')\n                    .defaultValue(false)\n            ])\n            .batchActions([]) // disable checkbox column and batch delete\n            .listActions(['show', 'edit']);\n\n        // define custom controller logic for the tag listView\n        tag.listView().prepare(['Restangular', 'entries', function(Restangular, entries) {\n            // fetch the number of posts for each tag\n            return Restangular.allUrl('posts').getList()\n                .then(function(response) {\n                    const nbPostsByTag = {};\n                    response.data.forEach(function(post) {\n                        post.tags.forEach(function(tagId) {\n                            if (!nbPostsByTag[tagId]) {\n                                nbPostsByTag[tagId] = 0;\n                            }\n                            nbPostsByTag[tagId]++;\n                        });\n                    });\n                    entries.map(function(tag) {\n                        tag.values.nb_posts = nbPostsByTag[tag.identifierValue];\n                    });\n                });\n        }]);\n\n        tag.editionView()\n            .fields([\n                nga.field('name'),\n                nga.field('published', 'boolean').validation({\n                    required: true // as this boolean is required, ng-admin will use a checkbox instead of a dropdown\n                })\n            ]);\n\n        tag.showView()\n            .fields([\n                nga.field('name'),\n                nga.field('published', 'boolean')\n            ]);\n\n        // customize header\n        var customHeaderTemplate =\n        '<div class=\"navbar-header\">' +\n            '<button type=\"button\" class=\"navbar-toggle\" ng-click=\"isCollapsed = !isCollapsed\">' +\n              '<span class=\"icon-bar\"></span>' +\n              '<span class=\"icon-bar\"></span>' +\n              '<span class=\"icon-bar\"></span>' +\n            '</button>' +\n            '<a class=\"navbar-brand\" href=\"#\" ng-click=\"appController.displayHome()\">ng-admin backend demo</a>' +\n        '</div>' +\n        '<p class=\"navbar-text navbar-right hidden-xs\">' +\n            '<a href=\"https://github.com/marmelab/ng-admin/blob/master/examples/blog/config.js\"><span class=\"glyphicon glyphicon-sunglasses\"></span>&nbsp;View Source</a>' +\n        '</p>';\n        admin.header(customHeaderTemplate);\n\n        // customize menu\n        admin.menu(nga.menu()\n            .addChild(nga.menu(post).icon('<span class=\"glyphicon glyphicon-file\"></span>')) // customize the entity menu icon\n            .addChild(nga.menu(comment).icon('<strong style=\"font-size:1.3em;line-height:1em\">✉</strong>')) // you can even use utf-8 symbols!\n            .addChild(nga.menu(tag).icon('<span class=\"glyphicon glyphicon-tags\"></span>'))\n            .addChild(nga.menu().title('Other')\n                .addChild(nga.menu().title('Stats').icon('').link('/stats'))\n            )\n        );\n\n        // customize dashboard\n        var customDashboardTemplate =\n        '<div class=\"row dashboard-starter\"></div>' +\n        '<div class=\"row dashboard-content\"><div class=\"col-lg-12\"><div class=\"alert alert-info\">' +\n            'Welcome to the demo! Fell free to explore and modify the data. We reset it every few minutes.' +\n        '</div></div></div>' +\n        '<div class=\"row dashboard-content\">' +\n            '<div class=\"col-lg-12\">' +\n                '<div class=\"panel panel-default\">' +\n                    '<ma-dashboard-panel collection=\"dashboardController.collections.comments\" entries=\"dashboardController.entries.comments\" datastore=\"dashboardController.datastore\"></ma-dashboard-panel>' +\n                '</div>' +\n            '</div>' +\n        '</div>' +\n        '<div class=\"row dashboard-content\">' +\n            '<div class=\"col-lg-6\">' +\n                '<div class=\"panel panel-green\">' +\n                    '<ma-dashboard-panel collection=\"dashboardController.collections.recent_posts\" entries=\"dashboardController.entries.recent_posts\" datastore=\"dashboardController.datastore\"></ma-dashboard-panel>' +\n                '</div>' +\n                '<div class=\"panel panel-green\">' +\n                    '<ma-dashboard-panel collection=\"dashboardController.collections.popular_posts\" entries=\"dashboardController.entries.popular_posts\" datastore=\"dashboardController.datastore\"></ma-dashboard-panel>' +\n                '</div>' +\n            '</div>' +\n            '<div class=\"col-lg-6\">' +\n                '<div class=\"panel panel-yellow\">' +\n                    '<ma-dashboard-panel collection=\"dashboardController.collections.tags\" entries=\"dashboardController.entries.tags\" datastore=\"dashboardController.datastore\"></ma-dashboard-panel>' +\n                '</div>' +\n            '</div>' +\n        '</div>';\n        admin.dashboard(nga.dashboard()\n            .addCollection(nga.collection(post)\n                .name('recent_posts')\n                .title('Recent posts')\n                .perPage(5) // limit the panel to the 5 latest posts\n                .fields([\n                    nga.field('published_at', 'date').label('Published').format('MMM d'),\n                    nga.field('title').isDetailLink(true).map(truncate),\n                    nga.field('views', 'number')\n                ])\n                .sortField('published_at')\n                .sortDir('DESC')\n                .order(1)\n            )\n            .addCollection(nga.collection(post)\n                .name('popular_posts')\n                .title('Popular posts')\n                .perPage(5) // limit the panel to the 5 latest posts\n                .fields([\n                    nga.field('published_at', 'date').label('Published').format('MMM d'),\n                    nga.field('title').isDetailLink(true).map(truncate),\n                    nga.field('views', 'number')\n                ])\n                .sortField('views')\n                .sortDir('DESC')\n                .order(3)\n            )\n            .addCollection(nga.collection(comment)\n                .title('Last comments')\n                .perPage(10)\n                .fields([\n                    nga.field('created_at', 'date')\n                        .label('Posted'),\n                    nga.field('body', 'wysiwyg')\n                        .label('Comment')\n                        .stripTags(true)\n                        .map(truncate)\n                        .isDetailLink(true),\n                    nga.field('post_id', 'reference')\n                        .label('Post')\n                        .targetEntity(post)\n                        .targetField(nga.field('title').map(truncate))\n                ])\n                .sortField('created_at')\n                .sortDir('DESC')\n                .order(2)\n            )\n            .addCollection(nga.collection(tag)\n                .title('Tags publication status')\n                .perPage(10)\n                .fields([\n                    nga.field('name'),\n                    nga.field('published', 'boolean').label('Is published ?')\n                ])\n                .listActions(['show'])\n                .order(4)\n            )\n            .template(customDashboardTemplate)\n        );\n\n        nga.configure(admin);\n    }]);\n\n    app.directive('postLink', ['$location', function ($location) {\n        return {\n            restrict: 'E',\n            scope: { entry: '&' },\n            template: '<p class=\"form-control-static\"><a ng-click=\"displayPost()\">View&nbsp;post</a></p>',\n            link: function (scope) {\n                scope.displayPost = function () {\n                    $location.path('/posts/show/' + scope.entry().values.post_id); // jshint ignore:line\n                };\n            }\n        };\n    }]);\n\n    app.directive('sendEmail', ['$location', function ($location) {\n        return {\n            restrict: 'E',\n            scope: { post: '&' },\n            template: '<a class=\"btn btn-default\" ng-click=\"send()\">Send post by email</a>',\n            link: function (scope) {\n                scope.send = function () {\n                    $location.path('/sendPost/' + scope.post().values.id);\n                };\n            }\n        };\n    }]);\n\n    // custom 'send post by email' page\n\n    function sendPostController($stateParams, notification) {\n        this.postId = $stateParams.id;\n        // notification is the service used to display notifications on the top of the screen\n        this.notification = notification;\n    }\n    sendPostController.prototype.sendEmail = function() {\n        if (this.email) {\n            this.notification.log('Email successfully sent to ' + this.email, {addnCls: 'humane-flatty-success'});\n        } else {\n            this.notification.log('Email is undefined', {addnCls: 'humane-flatty-error'});\n        }\n    };\n    sendPostController.$inject = ['$stateParams', 'notification'];\n\n    var sendPostControllerTemplate =\n        '<div class=\"row\"><div class=\"col-lg-12\">' +\n            '<ma-view-actions><ma-back-button></ma-back-button></ma-view-actions>' +\n            '<div class=\"page-header\">' +\n                '<h1>Send post #{{ controller.postId }} by email</h1>' +\n                '<p class=\"lead\">You can add custom pages, too</p>' +\n            '</div>' +\n        '</div></div>' +\n        '<div class=\"row\">' +\n            '<div class=\"col-lg-5\"><input type=\"text\" size=\"10\" ng-model=\"controller.email\" class=\"form-control\" placeholder=\"name@example.com\"/></div>' +\n            '<div class=\"col-lg-5\"><a class=\"btn btn-default\" ng-click=\"controller.sendEmail()\">Send</a></div>' +\n        '</div>';\n\n    app.config(['$stateProvider', function ($stateProvider) {\n        $stateProvider.state('send-post', {\n            parent: 'main',\n            url: '/sendPost/:id',\n            params: { id: null },\n            controller: sendPostController,\n            controllerAs: 'controller',\n            template: sendPostControllerTemplate\n        });\n    }]);\n\n    // custom page with menu item\n    var customPageTemplate = '<div class=\"row\"><div class=\"col-lg-12\">' +\n            '<ma-view-actions><ma-back-button></ma-back-button></ma-view-actions>' +\n            '<div class=\"page-header\">' +\n                '<h1>Stats</h1>' +\n                '<p class=\"lead\">You can add custom pages, too</p>' +\n            '</div>' +\n        '</div></div>';\n    app.config(['$stateProvider', function ($stateProvider) {\n        $stateProvider.state('stats', {\n            parent: 'main',\n            url: '/stats',\n            template: customPageTemplate\n        });\n    }]);\n\n}());\n"]}