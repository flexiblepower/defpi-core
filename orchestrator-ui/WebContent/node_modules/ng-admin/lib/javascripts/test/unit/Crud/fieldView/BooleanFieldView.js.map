{"version":3,"sources":["../../../../../../src/javascripts/test/unit/Crud/fieldView/BooleanFieldView.js"],"names":["assert","require","BooleanFieldView","describe","it","widget","getReadWidget","include","getLinkWidget","getFilterWidget","match","getWriteWidget"],"mappings":";;AAAA,IAAIA,SAASC,QAAQ,MAAR,EAAgBD,MAA7B;AACA,IAAIE,mBAAmBD,QAAQ,sDAAR,CAAvB;;AAEAE,SAAS,kBAAT,EAA6B,YAAW;AACpCA,aAAS,eAAT,EAA0B,YAAW;AACjCC,WAAG,wCAAH,EAA6C,YAAW;AACpD,gBAAIC,SAASH,iBAAiBI,aAAjB,EAAb;AACAN,mBAAOO,OAAP,CAAeF,MAAf,EAAuB,oBAAvB;AACH,SAHD;AAIH,KALD;;AAOAF,aAAS,eAAT,EAA0B,YAAW;AACjCC,WAAG,wCAAH,EAA6C,YAAW;AACpD,gBAAIC,SAASH,iBAAiBM,aAAjB,EAAb;AACAR,mBAAOO,OAAP,CAAeF,MAAf,EAAuB,oBAAvB;AACH,SAHD;AAIH,KALD;;AAOAF,aAAS,iBAAT,EAA4B,YAAW;AACnCC,WAAG,kEAAH,EAAuE,YAAW;AAC9E,gBAAIC,SAASH,iBAAiBO,eAAjB,EAAb;AACAT,mBAAOU,KAAP,CAAaL,MAAb,EAAqB,0DAArB;AACH,SAHD;AAIH,KALD;;AAOAF,aAAS,gBAAT,EAA2B,YAAW;AAClCC,WAAG,wEAAH,EAA6E,YAAW;AACpF,gBAAIC,SAASH,iBAAiBS,cAAjB,EAAb;AACAX,mBAAOU,KAAP,CAAaL,MAAb,EAAqB,qFAArB;AACH,SAHD;;AAKAD,WAAG,sEAAH,EAA2E,YAAW;AAClF,gBAAIC,SAASH,iBAAiBS,cAAjB,EAAb;AACAX,mBAAOU,KAAP,CAAaL,MAAb,EAAqB,0FAArB;AACH,SAHD;AAIH,KAVD;AAWH,CAjCD","file":"BooleanFieldView.js","sourcesContent":["var assert = require('chai').assert;\nvar BooleanFieldView = require('../../../../ng-admin/Crud/fieldView/BooleanFieldView');\n\ndescribe('BooleanFieldView', function() {\n    describe('getReadWidget', function() {\n        it('should return boolean column directive', function() {\n            var widget = BooleanFieldView.getReadWidget();\n            assert.include(widget, '<ma-boolean-column');\n        });\n    });\n\n    describe('getLinkWidget', function() {\n        it('should return boolean column directive', function() {\n            var widget = BooleanFieldView.getLinkWidget();\n            assert.include(widget, '<ma-boolean-column');\n        });\n    });\n\n    describe('getFilterWidget', function() {\n        it('should return choice field directive with true and false choices', function() {\n            var widget = BooleanFieldView.getFilterWidget();\n            assert.match(widget, /<ma-choice-field .* choices=\"::field\\.filterChoices\\(\\)\"/);\n        });\n    });\n\n    describe('getWriteWidget', function() {\n        it('should return choice field directive with check for non required field', function() {\n            var widget = BooleanFieldView.getWriteWidget();\n            assert.match(widget, /<ma-choice-field .* ng-if=\"!field\\.validation\\(\\)\\.required\" .*><\\/ma-choice-field>/);\n        });\n\n        it('should return checkbox field directive with check for required field', function() {\n            var widget = BooleanFieldView.getWriteWidget();\n            assert.match(widget, /<ma-checkbox-field .* ng-if=\"!!field\\.validation\\(\\)\\.required\" .*><\\/ma-checkbox-field>/);\n        });\n    });\n});\n"]}