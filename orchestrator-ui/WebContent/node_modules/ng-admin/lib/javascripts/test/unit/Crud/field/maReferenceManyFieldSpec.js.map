{"version":3,"sources":["../../../../../../src/javascripts/test/unit/Crud/field/maReferenceManyFieldSpec.js"],"names":["describe","referenceManyFieldDirective","require","choicesFieldDirective","ReferenceManyField","mixins","DataStore","Entry","$compile","$timeout","scope","directiveUsage","beforeEach","angular","mock","module","$provide","service","refresh","jasmine","createSpy","and","callFake","buildPromise","value","label","filter","text","directive","MockedReferenceRefresher","inject","_$compile_","_$rootScope_","_$timeout_","ReferenceRefresher","datastore","getEntries","name","id","field","targetField","targetEntity","uniqueId","identifier","it","element","$digest","uiSelect","querySelector","expect","toBeTruthy","remoteComplete","controller","choices","attr","flush","toHaveBeenCalled","toJson","items","toEqual","not","JSON","stringify"],"mappings":"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","file":"maReferenceManyFieldSpec.js","sourcesContent":["describe('ReferenceManyField', function() {\n    var referenceManyFieldDirective = require('../../../../ng-admin/Crud/field/maReferenceManyField');\n    var choicesFieldDirective = require('../../../../ng-admin/Crud/field/maChoicesField');\n    var ReferenceManyField = require('admin-config/lib/Field/ReferenceManyField');\n    var mixins = require('../../../mock/mixins');\n    var DataStore = require('admin-config/lib/DataStore/DataStore');\n    var Entry = require('admin-config/lib/Entry');\n\n    var $compile, $timeout, scope;\n    const directiveUsage = '<ma-reference-many-field entry=\"entry\" field=\"field\" value=\"value\" datastore=\"datastore\"></ma-reference-many-field>';\n\n    beforeEach(function() {\n        angular.mock.module(function($provide) {\n            $provide.service('ReferenceRefresher', function() {\n                this.refresh = jasmine.createSpy('refresh').and.callFake(function() {\n                    return mixins.buildPromise([\n                        { value: 1, label: 'foo' },\n                        { value: 2, label: 'bar' },\n                        { value: 3, label: 'qux' }\n                    ]);\n                });\n            });\n        });\n    });\n\n    angular.module('myApp', ['ui.select'])\n        .filter('translate', () => text => text)\n        .directive('maChoicesField', choicesFieldDirective)\n        .directive('maReferenceManyField', referenceManyFieldDirective);\n\n    beforeEach(angular.mock.module('myApp'));\n\n    var MockedReferenceRefresher;\n    beforeEach(inject(function (_$compile_, _$rootScope_, _$timeout_, ReferenceRefresher) {\n        $compile = _$compile_;\n        $timeout = _$timeout_;\n        scope = _$rootScope_;\n        MockedReferenceRefresher = ReferenceRefresher;\n    }));\n\n    beforeEach(function() {\n        scope.datastore = {\n            getEntries: (name) => {\n                if (name === 'tag_1_choices') {\n                    return [\n                        new Entry('tag', { id: 1,  name: 'foo' }, 1),\n                        new Entry('tag', { id: 2,  name: 'bar' }, 2),\n                        new Entry('tag', { id: 3,  name: 'qux' }, 3),\n                    ];\n                }\n            }\n        };\n        scope.field = new ReferenceManyField('tags')\n            .targetField({\n                name: () => 'name'\n            })\n            .targetEntity({\n                uniqueId: 'tag_1',\n                identifier: () => {\n                    return {\n                        name: () => 'id'\n                    };\n                }\n            });\n    });\n\n    it('should be an ui-select field', function() {\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        var uiSelect = element[0].querySelector('.ui-select-container');\n        expect(uiSelect).toBeTruthy();\n    });\n\n    it('should call remote API when inputting first characters', function () {\n        scope.field.remoteComplete(true);\n\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        var uiSelect = angular.element(element[0].querySelector('.ui-select-container')).controller('uiSelect');\n        var choices = angular.element(element[0].querySelector('.ui-select-choices'));\n\n        uiSelect.refresh(choices.attr('refresh'));\n        $timeout.flush();\n\n        expect(MockedReferenceRefresher.refresh).toHaveBeenCalled();\n        expect(angular.toJson(uiSelect.items)).toEqual(angular.toJson([\n            { value: 1, label: 'foo' },\n            { value: 2, label: 'bar' },\n            { value: 3, label: 'qux' }\n        ]));\n    });\n\n    it('should refresh not called if remote complete is null', function() {\n        scope.field.remoteComplete(false);\n\n        var element = $compile(directiveUsage)(scope);\n        $timeout.flush();\n        scope.$digest();\n\n        expect(MockedReferenceRefresher.refresh).not.toHaveBeenCalled();\n    });\n\n    it('should get all choices loaded at initialization if remote complete is null', function() {\n        scope.field.remoteComplete(false);\n\n        var element = $compile(directiveUsage)(scope);\n        $timeout.flush();\n        scope.$digest();\n\n        var uiSelect = angular.element(element[0].querySelector('.ui-select-container')).controller('uiSelect');\n        expect(angular.toJson(uiSelect.items)).toEqual(JSON.stringify([\n            { value: 1, label: 'foo' },\n            { value: 2, label: 'bar' },\n            { value: 3, label: 'qux' }\n        ]));\n    });\n});\n"]}