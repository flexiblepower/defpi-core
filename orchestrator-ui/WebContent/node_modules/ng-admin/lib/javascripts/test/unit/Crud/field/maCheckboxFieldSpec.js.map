{"version":3,"sources":["../../../../../../src/javascripts/test/unit/Crud/field/maCheckboxFieldSpec.js"],"names":["describe","directive","require","Field","angular","module","$compile","scope","directiveUsage","beforeEach","mock","inject","_$compile_","_$rootScope_","it","field","element","$digest","expect","children","nodeName","toBe","type","value","querySelector","toBeTruthy","toBeFalsy"],"mappings":";;AAAA;AACAA,SAAS,2BAAT,EAAsC,YAAY;AAC9C;;AAEA,QAAIC,YAAYC,QAAQ,iDAAR,CAAhB;AACA,QAAIC,QAAQD,QAAQ,8BAAR,CAAZ;AACAE,YAAQC,MAAR,CAAe,uBAAf,EAAwC,EAAxC,EAA4CJ,SAA5C,CAAsD,iBAAtD,EAAyEA,SAAzE;;AAEA,QAAIK,QAAJ;AAAA,QACIC,KADJ;AAAA,QAEIC,iBAAiB,qEAFrB;;AAIAC,eAAWL,QAAQM,IAAR,CAAaL,MAAb,CAAoB,uBAApB,CAAX;;AAEAI,eAAWE,OAAO,UAAUC,UAAV,EAAsBC,YAAtB,EAAoC;AAClDP,mBAAWM,UAAX;AACAL,gBAAQM,YAAR;AACH,KAHU,CAAX;;AAKAC,OAAG,6BAAH,EAAkC,YAAY;AAC1CP,cAAMQ,KAAN,GAAc,IAAIZ,KAAJ,EAAd;AACA,YAAIa,UAAUV,SAASE,cAAT,EAAyBD,KAAzB,CAAd;AACAA,cAAMU,OAAN;AACAC,eAAOF,QAAQG,QAAR,GAAmB,CAAnB,EAAsBC,QAA7B,EAAuCC,IAAvC,CAA4C,OAA5C;AACH,KALD;;AAOAP,OAAG,8BAAH,EAAmC,YAAY;AAC3CP,cAAMQ,KAAN,GAAc,IAAIZ,KAAJ,EAAd;AACA,YAAIa,UAAUV,SAASE,cAAT,EAAyBD,KAAzB,CAAd;AACAA,cAAMU,OAAN;AACAC,eAAOF,QAAQG,QAAR,GAAmB,CAAnB,EAAsBG,IAA7B,EAAmCD,IAAnC,CAAwC,UAAxC;AACH,KALD;;AAOAP,OAAG,kDAAH,EAAuD,YAAY;AAC/DP,cAAMQ,KAAN,GAAc,IAAIZ,KAAJ,EAAd;AACAI,cAAMgB,KAAN,GAAc,IAAd;AACA,YAAIP,UAAUV,SAASE,cAAT,EAAyBD,KAAzB,CAAd;AACAA,cAAMU,OAAN;AACAC,eAAOF,QAAQ,CAAR,EAAWQ,aAAX,CAAyB,UAAzB,CAAP,EAA6CC,UAA7C;AACAlB,cAAMgB,KAAN,GAAc,KAAd;AACAhB,cAAMU,OAAN;AACAC,eAAOF,QAAQ,CAAR,EAAWQ,aAAX,CAAyB,UAAzB,CAAP,EAA6CE,SAA7C;AACH,KATD;AAUH,CA1CD","file":"maCheckboxFieldSpec.js","sourcesContent":["/*global angular,inject,describe,it,expect,beforeEach*/\ndescribe('directive: checkbox-field', function () {\n    'use strict';\n\n    var directive = require('../../../../ng-admin/Crud/field/maCheckboxField');\n    var Field = require('admin-config/lib/Field/Field');\n    angular.module('testapp_CheckboxField', []).directive('maCheckboxField', directive);\n\n    var $compile,\n        scope,\n        directiveUsage = '<ma-checkbox-field field=\"field\" value=\"value\"></ma-checkbox-field>';\n\n    beforeEach(angular.mock.module('testapp_CheckboxField'));\n\n    beforeEach(inject(function (_$compile_, _$rootScope_) {\n        $compile = _$compile_;\n        scope = _$rootScope_;\n    }));\n\n    it(\"should contain an input tag\", function () {\n        scope.field = new Field();\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n        expect(element.children()[0].nodeName).toBe('INPUT');\n    });\n\n    it(\"should use the checkbox type\", function () {\n        scope.field = new Field();\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n        expect(element.children()[0].type).toBe('checkbox');\n    });\n\n    it(\"should be checked according to the bounded value\", function () {\n        scope.field = new Field();\n        scope.value = true;\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n        expect(element[0].querySelector(':checked')).toBeTruthy();\n        scope.value = false;\n        scope.$digest();\n        expect(element[0].querySelector(':checked')).toBeFalsy();\n    });\n});\n"]}