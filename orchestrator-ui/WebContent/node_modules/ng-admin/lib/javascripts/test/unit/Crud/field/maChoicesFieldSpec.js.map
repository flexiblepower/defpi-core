{"version":3,"sources":["../../../../../../src/javascripts/test/unit/Crud/field/maChoicesFieldSpec.js"],"names":["describe","directive","require","ChoicesField","DataStore","dataStoreModule","angular","module","constant","filter","text","$compile","scope","directiveUsage","beforeEach","mock","inject","_$compile_","_$rootScope_","it","field","element","$digest","uiSelect","children","expect","classList","contains","toBeTruthy","attributes","disabled","getAttribute","choices","choicesFuncWasCalled","entry","moo","toEqual","label","value","controller","toJson","items","JSON","stringify","selected"],"mappings":"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","file":"maChoicesFieldSpec.js","sourcesContent":["/*global angular,inject,describe,it,expect,beforeEach*/\ndescribe('directive: choices-field', function() {\n    'use strict';\n\n    var directive = require('../../../../ng-admin/Crud/field/maChoicesField');\n    var ChoicesField = require('admin-config/lib/Field/ChoicesField');\n    var DataStore = require('admin-config/lib/DataStore/DataStore');\n\n    var dataStoreModule = angular.module('testapp_DataStore', []);\n    dataStoreModule.constant('DataStore', new DataStore());\n\n    angular.module('testapp_ChoicesField', ['ui.select', 'testapp_DataStore'])\n        .filter('translate', () => text => text)\n        .directive('maChoicesField', directive);\n\n    var $compile,\n        scope,\n        directiveUsage = '<ma-choices-field entry=\"entry\" field=\"field\" value=\"value\"></ma-choices-field>';\n\n    beforeEach(angular.mock.module('testapp_ChoicesField'));\n\n    beforeEach(inject(function (_$compile_, _$rootScope_) {\n        $compile = _$compile_;\n        scope = _$rootScope_;\n    }));\n\n    it(\"should contain a select multiple tag\", function () {\n        scope.field = new ChoicesField();\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        var uiSelect = element.children()[0];\n        expect(uiSelect.classList.contains('ui-select-container')).toBeTruthy();\n    });\n\n    it(\"should add any supplied attribute\", function () {\n        scope.field = new ChoicesField().attributes({ disabled: true });\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n        expect(element.children()[0].getAttribute('disabled')).toBeTruthy();\n    });\n\n    it(\"should pass entry to choicesFunc\", function () {\n        var choices = [];\n        var choicesFuncWasCalled = false;\n\n        scope.entry = {moo: 'boo'};\n        scope.field = new ChoicesField().choices(function(entry){\n            expect(entry.moo).toEqual('boo');\n            choicesFuncWasCalled = true;\n            return choices;\n        });\n\n        $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        expect(choicesFuncWasCalled).toBeTruthy();\n    });\n\n    it(\"should contain the choices from choicesFunc as options\", function () {\n        var choices = [\n            {label: 'foo', value: 'bar'},\n            {label: 'baz', value: 'bazValue'}\n        ];\n\n        scope.field = new ChoicesField().choices(function(entry){\n            return choices;\n        });\n\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        var uiSelect = angular.element(element.children()[0]).controller('uiSelect');\n        expect(angular.toJson(uiSelect.items)).toEqual(JSON.stringify([\n            {label: 'foo', value: 'bar'},\n            {label: 'baz', value: 'bazValue'}\n        ]));\n    });\n\n    it(\"should contain the choices as options\", function () {\n        scope.field = new ChoicesField().choices([\n            {label: 'foo', value: 'bar'},\n            {label: 'baz', value: 'bazValue'}\n        ]);\n\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        var uiSelect = angular.element(element.children()[0]).controller('uiSelect');\n        expect(angular.toJson(uiSelect.items)).toEqual(JSON.stringify([\n            {label: 'foo', value: 'bar'},\n            {label: 'baz', value: 'bazValue'}\n        ]));\n    });\n\n    it(\"should have the option with the bounded value selected\", function () {\n        scope.field = new ChoicesField().choices([\n            {label: 'foo', value: 'fooValue'},\n            {label: 'bar', value: 'barValue'},\n            {label: 'baz', value: 'bazValue'}\n        ]);\n\n        scope.value = ['fooValue', 'bazValue'];\n\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        var uiSelect = angular.element(element.children()[0]).controller('uiSelect');\n        expect(angular.toJson(uiSelect.selected)).toEqual(JSON.stringify([\n            { label: 'foo', value: 'fooValue' },\n            { label: 'baz', value: 'bazValue' }\n        ]));\n    });\n});\n"]}