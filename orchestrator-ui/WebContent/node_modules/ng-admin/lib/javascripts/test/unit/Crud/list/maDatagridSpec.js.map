{"version":3,"sources":["../../../../../../src/javascripts/test/unit/Crud/list/maDatagridSpec.js"],"names":["describe","directive","require","Entity","Entry","Field","TextField","$compile","scope","directiveUsage","angular","module","filter","text","service","$q","restrict","translate","template","beforeEach","mock","inject","_$compile_","_$rootScope_","name","entries","fields","listActions","entity","nextPage","noop","itemsPerPage","totalItems","infinitePagination","it","element","$digest","expect","children","nodeName","toBe","querySelector","innerHTML","toContain","entry1","values","title"],"mappings":"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","file":"maDatagridSpec.js","sourcesContent":["/*global angular,inject,describe,it,expect,beforeEach,module*/\ndescribe('directive: ma-datagrid', function () {\n    var directive = require('../../../../ng-admin/Crud/list/maDatagrid'),\n        Entity = require('admin-config/lib/Entity/Entity'),\n        Entry = require('admin-config/lib/Entry'),\n        Field = require('admin-config/lib/Field/Field'),\n        TextField = require('admin-config/lib/Field/TextField'),\n        $compile,\n        scope,\n        directiveUsage = '<ma-datagrid name=\"{{ name }}\" entries=\"entries\" fields=\"fields\" list-actions=\"listActions\"' +\n            'entity=\"entity\" next-page=\"nextPage\" per-page=\"itemsPerPage\" total-items=\"{{ totalItems }}\" infinite-pagination=\"infinitePagination\">' +\n            '</ma-datagrid>';\n\n    angular.module('testapp_stateParams', [])\n        .filter('translate', () => text => text)    \n        .service('$stateParams', function($q){ return {}; });\n\n    angular.module('testapp_Datagrid', ['testapp_stateParams'])\n        .directive('translate', () => ({\n            restrict: 'A',\n            scope: { translate: '@' },\n            template: '{{ translate }}'\n        }))\n        .directive('maDatagrid', directive);\n\n    beforeEach(angular.mock.module('testapp_Datagrid'));\n\n    beforeEach(inject(function (_$compile_, _$rootScope_) {\n        $compile = _$compile_;\n        scope = _$rootScope_;\n        scope.name = 'my-view';\n        scope.entries = [];\n        scope.fields = [];\n        scope.listActions = [];\n        scope.entity = new Entity();\n        scope.nextPage = angular.noop;\n        scope.itemsPerPage = 10;\n        scope.totalItems = 30;\n        scope.infinitePagination = false;\n    }));\n\n    it(\"should contain a table tag\", function () {\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        expect(element.children()[0].nodeName).toBe('TABLE');\n    });\n\n    it(\"should add list actions\", function () {\n        scope.fields = [new Field('title')];\n        scope.listActions = ['edit'];\n        scope.entries = [new Entry()];\n\n        var element = $compile(directiveUsage)(scope);\n\n        scope.$digest();\n\n        expect(element[0].querySelector('thead th:nth-child(2)').innerHTML).toContain('ACTIONS');\n        expect(element[0].querySelector('tbody tr td:nth-child(2) ma-list-actions').nodeName).toContain('MA-LIST-ACTIONS');\n    });\n\n\n    it(\"should add columns\", function () {\n        var entry1 = new Entry('cat'),\n            element;\n\n        entry1.values.title = 'Small cat';\n        scope.fields = [new TextField('title')];\n        scope.entries = [entry1];\n\n        element  = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        expect(element[0].querySelector('tbody tr td:nth-child(1) ma-column').nodeName).toContain('MA-COLUMN');\n    });\n});\n"]}