{"version":3,"sources":["../../../../../../../src/javascripts/test/unit/Main/component/directive/maDashboardPanelSpec.js"],"names":["describe","directive","require","Entity","$compile","scope","directiveUsage","angular","module","filter","text","service","$q","expectedTransitions","transitionTo","stateName","length","expectedState","shift","Error","when","go","expectTransitionTo","push","ensureAllTransitionsHappened","beforeEach","mock","inject","_$compile_","_$rootScope_","it","collection","title","name","fields","entity","listActions","entries","element","$digest","expect","querySelector","innerHTML","toContain","getAttribute","toBe"],"mappings":";;AAAA;AACAA,SAAS,+BAAT,EAA0C,YAAY;AAClD;;AAEA,QAAIC,YAAYC,QAAQ,mEAAR,CAAhB;AAAA,QACIC,SAASD,QAAQ,gCAAR,CADb;AAAA,QAEIE,QAFJ;AAAA,QAGIC,KAHJ;AAAA,QAIIC,iBAAiB,qFAJrB;;AAMAC,YAAQC,MAAR,CAAe,eAAf,EAAgC,EAAhC,EACKC,MADL,CACY,WADZ,EACyB;AAAA,eAAM;AAAA,mBAAQC,IAAR;AAAA,SAAN;AAAA,KADzB,EAEKC,OAFL,CAEa,QAFb,EAEuB,UAASC,EAAT,EAAa;AAC5B,aAAKC,mBAAL,GAA2B,EAA3B;AACA,aAAKC,YAAL,GAAoB,UAASC,SAAT,EAAmB;AACnC,gBAAI,KAAKF,mBAAL,CAAyBG,MAAzB,GAAkC,CAAtC,EAAwC;AACpC,oBAAIC,gBAAgB,KAAKJ,mBAAL,CAAyBK,KAAzB,EAApB;AACA,oBAAID,kBAAkBF,SAAtB,EAAgC;AAC5B,0BAAMI,MAAM,mCAAmCF,aAAnC,GAAmD,uBAAnD,GAA6EF,SAAnF,CAAN;AACH;AACJ,aALD,MAKO;AACH,sBAAMI,MAAM,+DAA+DJ,SAArE,CAAN;AACH;AACD,mBAAOH,GAAGQ,IAAH,EAAP;AACH,SAVD;AAWA,aAAKC,EAAL,GAAU,KAAKP,YAAf;AACA,aAAKQ,kBAAL,GAA0B,UAASP,SAAT,EAAmB;AACzC,iBAAKF,mBAAL,CAAyBU,IAAzB,CAA8BR,SAA9B;AACH,SAFD;;AAIA,aAAKS,4BAAL,GAAoC,YAAU;AAC1C,gBAAI,KAAKX,mBAAL,CAAyBG,MAAzB,GAAkC,CAAtC,EAAwC;AACpC,sBAAMG,MAAM,+BAAN,CAAN;AACH;AACJ,SAJD;AAKH,KAzBL;;AA2BAZ,YAAQC,MAAR,CAAe,wBAAf,EAAyC,CAAC,eAAD,CAAzC,EACKP,SADL,CACe,kBADf,EACmCA,SADnC;;AAGAwB,eAAWlB,QAAQmB,IAAR,CAAalB,MAAb,CAAoB,wBAApB,CAAX;;AAEAiB,eAAWE,OAAO,UAAUC,UAAV,EAAsBC,YAAtB,EAAoC;AAClDzB,mBAAWwB,UAAX;AACAvB,gBAAQwB,YAAR;AACH,KAHU,CAAX;;AAKAC,OAAG,wCAAH,EAA6C,YAAY;AACrDzB,cAAM0B,UAAN,GAAmB;AACfC,mBAAO;AAAA,uBAAM,UAAN;AAAA,aADQ;AAEfC,kBAAM;AAAA,uBAAM,QAAN;AAAA,aAFS;AAGfC,oBAAQ;AAAA,uBAAM,EAAN;AAAA,aAHO;AAIfC,oBAAQ,IAAIhC,MAAJ,EAJO;AAKfiC,yBAAa,uBAAM,CAAE;AALN,SAAnB;AAOA/B,cAAMgC,OAAN,GAAgB,EAAhB;AACA,YAAIC,UAAUlC,SAASE,cAAT,EAAyBD,KAAzB,CAAd;AACAA,cAAMkC,OAAN;;AAEAC,eAAOF,QAAQ,CAAR,EAAWG,aAAX,CAAyB,gBAAzB,EAA2CC,SAAlD,EAA6DC,SAA7D,CAAuE,UAAvE;AACAH,eAAOF,QAAQ,CAAR,EAAWG,aAAX,CAAyB,aAAzB,EAAwCG,YAAxC,CAAqD,MAArD,CAAP,EAAqEC,IAArE,CAA0E,QAA1E;AACH,KAdD;AAeH,CA7DD","file":"maDashboardPanelSpec.js","sourcesContent":["/*global angular,inject,describe,it,expect,beforeEach,module*/\ndescribe('directive: ma-dashboard-panel', function () {\n    'use strict';\n\n    var directive = require('../../../../../ng-admin/Main/component/directive/maDashboardPanel'),\n        Entity = require('admin-config/lib/Entity/Entity'),\n        $compile,\n        scope,\n        directiveUsage = '<ma-dashboard-panel collection=\"collection\" entries=\"entries\"></ma-dashboard-panel>';\n\n    angular.module('testapp_state', [])\n        .filter('translate', () => text => text)\n        .service('$state', function($q) {\n            this.expectedTransitions = [];\n            this.transitionTo = function(stateName){\n                if (this.expectedTransitions.length > 0){\n                    var expectedState = this.expectedTransitions.shift();\n                    if (expectedState !== stateName){\n                        throw Error('Expected transition to state: ' + expectedState + ' but transitioned to ' + stateName );\n                    }\n                } else {\n                    throw Error('No more transitions were expected! Tried to transition to ' + stateName );\n                }\n                return $q.when();\n            };\n            this.go = this.transitionTo;\n            this.expectTransitionTo = function(stateName){\n                this.expectedTransitions.push(stateName);\n            };\n\n            this.ensureAllTransitionsHappened = function(){\n                if (this.expectedTransitions.length > 0){\n                    throw Error('Not all transitions happened!');\n                }\n            };\n        });\n\n    angular.module('testapp_DashboardPanel', ['testapp_state'])\n        .directive('maDashboardPanel', directive);\n\n    beforeEach(angular.mock.module('testapp_DashboardPanel'));\n\n    beforeEach(inject(function (_$compile_, _$rootScope_) {\n        $compile = _$compile_;\n        scope = _$rootScope_;\n    }));\n\n    it(\"should display a title with a datagrid\", function () {\n        scope.collection = {\n            title: () => 'Comments',\n            name: () => 'myView',\n            fields: () => [],\n            entity: new Entity(),\n            listActions: () => {}\n        };\n        scope.entries = [];\n        var element = $compile(directiveUsage)(scope);\n        scope.$digest();\n\n        expect(element[0].querySelector('.panel-heading').innerHTML).toContain('Comments');\n        expect(element[0].querySelector('ma-datagrid').getAttribute('name')).toBe('myView');\n    });\n});\n"]}