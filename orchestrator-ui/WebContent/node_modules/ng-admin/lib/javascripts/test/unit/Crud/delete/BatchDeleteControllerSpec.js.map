{"version":3,"sources":["../../../../../../src/javascripts/test/unit/Crud/delete/BatchDeleteControllerSpec.js"],"names":["describe","BatchDeleteController","require","Entity","humane","$scope","beforeEach","inject","$controller","$rootScope","$new","$translate","text","$state","current","name","params","go","jasmine","createSpy","get","and","callFake","state","progression","start","done","notification","id","entity","HttpErrorService","handleError","writeQueries","batchDelete","Promise","reject","it","deletedId","view","title","description","actions","getEntity","fields","batchDeleteController","then","assert","fail","catch","expect","calls","argsFor","toBe","fromStateParams","$emit","$digest"],"mappings":";;AAAAA,SAAS,uBAAT,EAAkC,YAAY;AAC1C;;AAEA,QAAMC,wBAAwBC,QAAQ,wDAAR,CAA9B;AAAA,QACIC,SAASD,QAAQ,gCAAR,CADb;AAAA,QAEIE,SAASF,QAAQ,WAAR,CAFb;;AAIA,QAAIG,eAAJ;AACAC,eAAWC,OAAO,UAAUC,WAAV,EAAuBC,UAAvB,EAAmC;AACjDJ,iBAASI,WAAWC,IAAX,EAAT;AACH,KAFU,CAAX;;AAIAV,aAAS,aAAT,EAAwB,YAAW;AAC/B,YAAMW,aAAa,SAAbA,UAAa;AAAA,mBAAQC,IAAR;AAAA,SAAnB;AACA,YAAMC,SAAS;AACXC,qBAAQ;AACJC,sBAAM,MADF;AAEJC,wBAAQ;AAFJ,aADG;AAKXC,gBAAIC,QAAQC,SAAR,CAAkB,WAAlB,CALO;AAMXC,iBAAKF,QAAQC,SAAR,CAAkB,YAAlB,EAAgCE,GAAhC,CAAoCC,QAApC,CAA6C;AAAA,uBAASC,KAAT;AAAA,aAA7C,CANM;AAOXP,oBAAQ;AAPG,SAAf;AASA,YAAMQ,cAAc;AAChBC,mBAAO;AAAA,uBAAM,IAAN;AAAA,aADS;AAEhBC,kBAAM;AAAA,uBAAM,IAAN;AAAA;AAFU,SAApB;AAIA,YAAMC,eAAevB,MAArB;AACA,YAAMY,SAAS;AACXY,gBAAI,CADO;AAEXC,oBAAQ,IAAI1B,MAAJ,CAAW,MAAX;AAFG,SAAf;AAIA,YAAM2B,mBAAmB;AACrBC,yBAAab,QAAQC,SAAR,CAAkB,8BAAlB;AADQ,SAAzB;AAGA,YAAIa,qBAAJ;AACAhC,iBAAS,UAAT,EAAqB,YAAW;AAC5BgC,2BAAe;AACXC,6BAAaf,QAAQC,SAAR,CAAkB,wBAAlB,EACRE,GADQ,CACJC,QADI,CACK;AAAA,2BAAMY,QAAQC,MAAR,CAAe,4BAAf,CAAN;AAAA,iBADL;AADF,aAAf;;AAKAC,eAAG,sCAAH,EAA2C,UAACV,IAAD,EAAU;AACjD;AACA,oBAAMG,SAAS,IAAI1B,MAAJ,CAAW,MAAX,CAAf;AACA,oBAAMkC,YAAY,CAAlB;AACA,oBAAMC,OAAO;AACTC,2BAAO;AAAA,+BAAM,iBAAN;AAAA,qBADE;AAETC,iCAAa;AAAA,+BAAM,eAAN;AAAA,qBAFJ;AAGTC,6BAAS;AAAA,+BAAM,EAAN;AAAA,qBAHA;AAITC,+BAAW;AAAA,+BAAMb,MAAN;AAAA,qBAJF;AAKTc,4BAAQ;AAAA,+BAAM,EAAN;AAAA;AALC,iBAAb;;AAQA,oBAAIC,wBAAwB,IAAI3C,qBAAJ,CAA0BI,MAA1B,EAAkCQ,MAAlC,EAA0CF,UAA1C,EAAsDqB,YAAtD,EAAoER,WAApE,EAAiFG,YAAjF,EAA+FW,IAA/F,EAAqGR,gBAArG,CAA5B;;AAEAc,sCAAsBX,WAAtB,CAAkCK,IAAlC,EAAwC,CAAxC,EACKO,IADL,CACU,YAAM;AACRC,2BAAOC,IAAP;AACArB;AACH,iBAJL,EAKKsB,KALL,CAKW,YAAM;AACTC,2BAAOnB,iBAAiBC,WAAjB,CAA6BmB,KAA7B,CAAmCC,OAAnC,CAA2C,CAA3C,EAA8C,CAA9C,CAAP,EAAyDC,IAAzD,CAA8D,4BAA9D;AACA1B;AACH,iBARL;;AAUA,oBAAM2B,kBAAkB,EAAExB,QAAQ,MAAV,EAAkBD,IAAI,CAAtB,EAAxB;AACAvB,uBAAOiD,KAAP,CAAa,qBAAb,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgDD,eAAhD;;AAEAhD,uBAAOkD,OAAP;AACH,aA5BD;AA6BH,SAnCD;AAoCH,KA5DD;AA6DH,CAzED","file":"BatchDeleteControllerSpec.js","sourcesContent":["describe('BatchDeleteController', function () {\n    'use strict';\n\n    const BatchDeleteController = require('../../../../ng-admin/Crud/delete/BatchDeleteController'),\n        Entity = require('admin-config/lib/Entity/Entity'),\n        humane = require('humane-js');\n\n    let $scope;\n    beforeEach(inject(function ($controller, $rootScope) {\n        $scope = $rootScope.$new();\n    }));\n\n    describe('batchDelete', function() {\n        const $translate = text => text;\n        const $state = {\n            current:{\n                name: 'list',\n                params: {},\n            },\n            go: jasmine.createSpy('$state.go'),\n            get: jasmine.createSpy('$state.get').and.callFake(state => state),\n            params: {}\n        };\n        const progression = {\n            start: () => true,\n            done: () => true,\n        };\n        const notification = humane;\n        const params = {\n            id: 3,\n            entity: new Entity('post')\n        };\n        const HttpErrorService = {\n            handleError: jasmine.createSpy('HttpErrorService.handleError')\n        };\n        let writeQueries;\n        describe('on error', function() {\n            writeQueries = {\n                batchDelete: jasmine.createSpy('writeQueries.deleteOne')\n                    .and.callFake(() => Promise.reject(\"Here's a bad bad bad error\"))\n            };\n\n            it('should call HttpErrorService handler', (done) => {\n                // assume we are on post #3 deletion page\n                const entity = new Entity('post');\n                const deletedId = 3;\n                const view = {\n                    title: () => 'Deleting a post',\n                    description: () => 'Remove a post',\n                    actions: () => [],\n                    getEntity: () => entity,\n                    fields: () => [],\n                };\n\n                let batchDeleteController = new BatchDeleteController($scope, $state, $translate, writeQueries, progression, notification, view, HttpErrorService);\n\n                batchDeleteController.batchDelete(view, 3)\n                    .then(() => {\n                        assert.fail();\n                        done();\n                    })\n                    .catch(() => {\n                        expect(HttpErrorService.handleError.calls.argsFor(0)[5]).toBe(\"Here's a bad bad bad error\")\n                        done();\n                    });\n\n                const fromStateParams = { entity: 'post', id: 3 };\n                $scope.$emit('$stateChangeSuccess', {}, {}, {}, fromStateParams);\n\n                $scope.$digest();\n            });\n        });\n    });\n});\n"]}