{"version":3,"sources":["../../../../../../src/javascripts/ng-admin/Main/component/directive/maMenuBar.js"],"names":["maMenuBar","$location","$rootScope","$compile","restrict","scope","link","element","menu","path","openMenus","children","filter","isChildActive","listener","$on","render","toggleMenu","indexOf","splice","closeMenu","push","openMenu","activateLink","autoClose","isOpen","html","contents","elements","getElementsForMenu","ul","addClass","arrow","removeClass","parentLi","forEach","find","li","liElement","attr","uuid","getElementsByClassName","eq","$inject"],"mappings":"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","file":"maMenuBar.js","sourcesContent":["import menuBarView from '../../view/menuBar.html';\nimport angular from 'angular';\n\nexport default function maMenuBar($location, $rootScope, $compile) {\n    return {\n        restrict: 'E',\n        scope: {\n            'menu': '&'\n        },\n        link: function(scope, element) {\n            scope.menu = scope.menu();\n            scope.path = $location.path();\n            // initialize openMenus\n            var openMenus = scope.menu.children().filter(function (menu) {\n                return menu.isChildActive(scope.path);\n            });\n            // manually render on change to avoid checking menu.isActive at each dirty check\n            var listener = $rootScope.$on('$locationChangeSuccess', function() {\n                scope.path = $location.path();\n                render();\n            });\n            $rootScope.$on('$destroy', listener);\n            scope.toggleMenu = function(menu) {\n                // handle click on parent menu manually\n                // because we chose bindOnce in the template for performance reasons\n                if (openMenus.indexOf(menu) !== -1) {\n                    // menu is already open, the click closes it\n                    // except if a submenu is open\n                    if (menu.isChildActive(scope.path)) {\n                        return;\n                    }\n                    openMenus.splice(openMenus.indexOf(menu), 1);\n                    closeMenu(menu);\n                } else {\n                    // menu is closed, the click opens it\n                    openMenus.push(menu);\n                    openMenu(menu);\n                }\n                // we don't render() in that case because it would cut the animation\n                return;\n            };\n            scope.activateLink = function (menu) {\n                if (!menu.link()) {\n                    return;\n                }\n                // close all open menus\n                // no need to close the menus with animation using closeMenu(),\n                // the menu will rerender anyway because of the listener on $locationChangeSuccess\n                // so the animation don't work in that case\n                if (menu.autoClose()) {\n                    openMenus = [];\n                }\n            };\n            scope.isOpen = function(menu) {\n                return menu.isChildActive(scope.path) || openMenus.indexOf(menu) !== -1;\n            };\n            render();\n\n            function render() {\n                element.html(menuBarView);\n                $compile(element.contents())(scope);\n            }\n            function closeMenu(menu) {\n                var elements = getElementsForMenu(menu);\n                elements.ul.addClass('collapsed');\n                elements.arrow.removeClass('glyphicon-menu-down');\n                elements.arrow.addClass('glyphicon-menu-right');\n            }\n            function openMenu(menu) {\n                var elements = getElementsForMenu(menu);\n                elements.ul.removeClass('collapsed');\n                elements.arrow.removeClass('glyphicon-menu-right');\n                elements.arrow.addClass('glyphicon-menu-down');\n            }\n            function getElementsForMenu(menu) {\n                var parentLi;\n                angular.forEach(element.find('li'), function(li) {\n                    var liElement = angular.element(li);\n                    if (liElement.attr('data-menu-id') == menu.uuid) {\n                        parentLi = liElement;\n                    }\n                });\n                return {\n                    arrow: angular.element(parentLi.find('a')[0].getElementsByClassName('arrow')[0]),\n                    ul: parentLi.find('ul').eq(0)\n                };\n            }\n        }\n    };\n}\n\nmaMenuBar.$inject = ['$location', '$rootScope', '$compile'];\n"]}