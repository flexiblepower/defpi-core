{"version":3,"sources":["../../../../../../src/javascripts/ng-admin/Main/component/provider/HttpErrorService.js"],"names":["HttpErrorService","$state","$translate","notification","handleError","event","toState","toParams","fromState","fromParams","error","status","handle404Error","handle403Error","handleDefaultError","preventDefault","go","message","data","then","displayError","log","text","addnCls","$inject","$get"],"mappings":";;;;;AAAA,IAAMA,mBAAmB,SAAnBA,gBAAmB,CAACC,MAAD,EAASC,UAAT,EAAqBC,YAArB;AAAA,WAAuC;AAC5DC,qBAAa,qBAASC,KAAT,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,SAAnC,EAA8CC,UAA9C,EAA0DC,KAA1D,EAAiE;AAC1E,oBAAQA,MAAMC,MAAd;AACI,qBAAK,GAAL;AACG,yBAAKC,cAAL,CAAoBP,KAApB,EAA2BK,KAA3B;AACA;AACH,qBAAK,GAAL;AACG,yBAAKG,cAAL,CAAoBH,KAApB;AACA;AACH;AACG,yBAAKI,kBAAL,CAAwBJ,KAAxB;AACA;AATP;AAWH,SAb2D;;AAe5DE,wBAAgB,wBAASP,KAAT,EAAgB;AAC5BA,kBAAMU,cAAN;AACAd,mBAAOe,EAAP,CAAU,QAAV;AACH,SAlB2D;;AAoB5DH,wBAAgB,wBAASH,KAAT,EAAgB;AAC5BR,uBAAW,uBAAX,EAAoC,EAAEe,SAASP,MAAMQ,IAAN,CAAWD,OAAtB,EAApC,EAAqEE,IAArE,CAA0E,KAAKC,YAA/E;AACA,kBAAMV,KAAN;AACH,SAvB2D;;AAyB5DI,4BAAoB,4BAASJ,KAAT,EAAgB;AAChCR,uBAAW,oBAAX,EAAiC,EAAEe,SAASP,MAAMQ,IAAN,CAAWD,OAAtB,EAAjC,EAAkEE,IAAlE,CAAuE,KAAKC,YAA5E;AACC,kBAAMV,KAAN;AACH,SA5B0D;;AA8B5DU,sBAAc;AAAA,mBAAQjB,aAAakB,GAAb,CAAiBC,IAAjB,EAAuB,EAAEC,SAAS,qBAAX,EAAvB,CAAR;AAAA;AA9B8C,KAAvC;AAAA,CAAzB;;AAiCAvB,iBAAiBwB,OAAjB,GAA2B,CAAC,QAAD,EAAW,YAAX,EAAyB,cAAzB,CAA3B;;kBAEe,EAAEC,MAAMzB,gBAAR,E","file":"HttpErrorService.js","sourcesContent":["const HttpErrorService = ($state, $translate, notification) => ({\n    handleError: function(event, toState, toParams, fromState, fromParams, error) {\n        switch (error.status) {\n            case 404:\n               this.handle404Error(event, error);\n               break;\n            case 403:\n               this.handle403Error(error);\n               break;\n            default:\n               this.handleDefaultError(error);\n               break;\n        }\n    },\n\n    handle404Error: function(event) {\n        event.preventDefault();\n        $state.go('ma-404');\n    },\n\n    handle403Error: function(error) {\n        $translate('STATE_FORBIDDEN_ERROR', { message: error.data.message }).then(this.displayError);\n        throw error;\n    },\n\n    handleDefaultError: function(error) {\n        $translate('STATE_CHANGE_ERROR', { message: error.data.message }).then(this.displayError);\n         throw error;\n     },\n\n    displayError: text => notification.log(text, { addnCls: 'humane-flatty-error' }),\n});\n\nHttpErrorService.$inject = ['$state', '$translate', 'notification'];\n\nexport default { $get: HttpErrorService };\n"]}