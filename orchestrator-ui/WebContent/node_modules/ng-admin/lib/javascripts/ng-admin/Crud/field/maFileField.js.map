{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/field/maFileField.js"],"names":["maFileField","Upload","scope","restrict","link","pre","uploadInformation","field","hasOwnProperty","Error","multiple","accept","apifilename","files","value","split","file","post","element","name","v","validation","required","input","find","attributes","setAttribute","fileSelected","selectedFiles","length","uploadParams","angular","copy","upload","progress","evt","config","Math","min","parseInt","loaded","total","success","data","status","headers","apiNames","Object","keys","map","fileindex","join","error","selectFile","click","template","$inject"],"mappings":"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","file":"maFileField.js","sourcesContent":["/**\n * Edition field for a file - a file uploader.\n *\n * @example <ma-file-field field=\"field\"></ma-file-field>\n */\nexport default function maFileField(Upload) {\n    return {\n        scope: {\n            'field': '&',\n            'value': '='\n        },\n        restrict: 'E',\n        link: {\n            pre: function(scope) {\n                var uploadInformation = scope.field().uploadInformation();\n                if (!uploadInformation.hasOwnProperty('url')) {\n                    throw new Error('You must provide a URL property to allow the upload of files.');\n                }\n\n                scope.multiple = uploadInformation.hasOwnProperty('multiple') ? uploadInformation.multiple : false;\n                scope.accept = \"*\";\n                if (uploadInformation.hasOwnProperty('accept')) {\n                    scope.accept = uploadInformation.accept;\n                }\n                scope.apifilename = uploadInformation.hasOwnProperty('apifilename') ? uploadInformation.apifilename : false;\n\n                var files = scope.value ? scope.value.split(',') : [];\n                scope.files = {};\n                for (var file in files) {\n                    scope.files[files[file]] = {\n                        \"name\": files[file],\n                        \"progress\": 0\n                    };\n                }\n            },\n            post: function(scope, element) {\n                var field = scope.field();\n                scope.name = field.name();\n                scope.v = field.validation();\n                if (scope.value) {\n                    scope.v.required = false;\n                }\n                var input = element.find('input')[0];\n                var attributes = field.attributes();\n                for (var name in attributes) {\n                    input.setAttribute(name, attributes[name]);\n                }\n\n                scope.fileSelected = function(selectedFiles) {\n                    if (!selectedFiles || !selectedFiles.length) {\n                        return;\n                    }\n\n                    var uploadParams;\n\n                    scope.files = {};\n                    for (var file in selectedFiles) {\n                        uploadParams = angular.copy(scope.field().uploadInformation());\n                        uploadParams.file = selectedFiles[file];\n                        Upload\n                            .upload(uploadParams)\n                            .progress(function(evt) {\n                                scope.files[evt.config.file.name] = {\n                                    \"name\": evt.config.file.name,\n                                    \"progress\": Math.min(100, parseInt(100.0 * evt.loaded / evt.total))\n                                };\n                            })\n                            .success(function(data, status, headers, config) {\n                                scope.files[config.file.name] = {\n                                    \"name\": scope.apifilename ? data[scope.apifilename] : config.file.name,\n                                    \"progress\": 0\n                                };\n                                if (scope.apifilename) {\n                                    var apiNames = Object.keys(scope.files).map(function(fileindex) {\n                                        return scope.files[fileindex].name;\n                                    });\n                                    scope.value = apiNames.join(',');\n                                } else {\n                                    scope.value = Object.keys(scope.files).join(',');\n                                }\n                            })\n                            .error(function(data, status, headers, config) {\n                                delete scope.files[config.file.name];\n\n                                scope.value = Object.keys(scope.files).join(',');\n                            });\n                    }\n                };\n\n                scope.selectFile = function () {\n                    input.click();\n                };\n            }\n        },\n        template:\n`<div class=\"row\">\n    <div class=\"col-md-2\">\n        <a class=\"btn btn-default\" ng-click=\"selectFile()\">\n            <span translate=\"BROWSE\"></span>\n        </a>\n    </div>\n    <div class=\"col-md-10\">\n        <div class=\"row\" ng-repeat=\"file in files track by $index\">\n            <div class=\"col-md-3\" style=\"padding-top: 6px;\">\n                <div class=\"progress\" style=\"margin-bottom: 0;\" ng-if=\"file.progress\">\n                    <div class=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"{{ file.progress }}\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: {{ file.progress }}%;\">\n                        <span class=\"sr-only\" translate=\"N_COMPLETE\" translate-values=\"{ progress: file.progress }\"></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-9\" style=\"padding-top: 6px;\"><small><em>{{ file.name }}</em></small></div>\n        </div>\n    </div>\n</div>\n<input type=\"file\" ngf-multiple=\"multiple\" accept=\"{{ accept }}\" ngf-select=\"fileSelected($files)\"\n       id=\"{{ name }}\" name=\"{{ name }}\" ng-required=\"v.required\" style=\"display:none\" />`\n    };\n}\n\nmaFileField.$inject = ['Upload'];\n"]}