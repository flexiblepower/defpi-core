{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/list/ListLayoutController.js"],"names":["debounce","require","ListLayoutController","$scope","$stateParams","$state","$location","$timeout","view","dataStore","entity","getEntity","actions","batchActions","loadingPage","filters","search","getCurrentSearchParam","path","$watch","newval","oldval","enabledFilters","getEnabledFilters","newValues","oldValues","updateFilters","hasFilters","Object","keys","length","focusedFilterId","enableFilter","bind","removeFilter","selectionUpdater","selection","$on","destroy","filter","defaultValue","name","push","el","window","document","getElementById","focus","pinned","values","fieldName","field","i","type","getTransformedValue","page","go","f","undefined","location","baseSearch","JSON","parse","reduce","getMappedValue","$inject"],"mappings":"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","file":"ListLayoutController.js","sourcesContent":["const debounce = require('lodash.debounce');\n\nexport default class ListLayoutController {\n    constructor($scope, $stateParams, $state, $location, $timeout, view, dataStore) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$stateParams = $stateParams;\n        this.$timeout = $timeout;\n        this.view = view;\n        this.dataStore = dataStore;\n        this.entity = view.getEntity();\n        this.actions = view.actions();\n        this.batchActions = view.batchActions();\n        this.loadingPage = false;\n        this.filters = view.filters();\n        this.search = ListLayoutController.getCurrentSearchParam($location, this.filters);\n        this.path = $location.path();\n        // since search isn't a $stateParam of the listLayout state,\n        // the controller doesn't change when the search changes\n        // so we must update filter values manually when the location changes\n        $scope.$watch(\n            () => $location.search() && $location.search().search,\n            (newval, oldval) => {\n                if (newval === oldval) {\n                    return;\n                }\n                if ($location.path() !== this.path) {\n                    return; // already transitioned to another page\n                }\n                this.search = ListLayoutController.getCurrentSearchParam($location, this.filters);\n                this.enabledFilters = this.getEnabledFilters();\n            }\n        );\n        // apply filters when filter values change\n        $scope.$watch(\n            () => this.search,\n            debounce((newValues, oldValues) => {\n                if (newValues != oldValues) {\n                    this.updateFilters();\n                }\n            }, 500),\n            true\n        );\n        this.filters = view.filters();\n        this.enabledFilters = this.getEnabledFilters();\n        this.hasFilters = Object.keys(this.filters).length > 0;\n        this.focusedFilterId = null;\n        this.enableFilter = this.enableFilter.bind(this);\n        this.removeFilter = this.removeFilter.bind(this);\n        if (this.batchActions.length) {\n            // required in scope to communicate with listView\n            $scope.selectionUpdater = selection => $scope.selection = selection;\n            $scope.selection = [];\n        }\n\n        $scope.$on('$destroy', this.destroy.bind(this));\n    }\n\n    static getCurrentSearchParam(location, filters) {\n        const baseSearch = location.search().search ? JSON.parse(location.search().search) : {};\n\n        return filters\n        .reduce((search, filter) => {\n            if (typeof search[filter.name()] !== 'undefined') {\n                return {\n                    ...search,\n                    [filter.name()]: filter.getMappedValue(search[filter.name()])\n                }\n            }\n            if (filter.pinned() && !search[filter.name()] && filter.defaultValue()) {\n                return {\n                    ...search,\n                    [filter.name()]: filter.getMappedValue(filter.defaultValue())\n                };\n            }\n            return search;\n        }, baseSearch);\n    }\n\n    enableFilter(filter) {\n        let defaultValue = filter.defaultValue();\n        if (defaultValue !== null) {\n            this.search[filter.name()] = defaultValue;\n        }\n        this.enabledFilters.push(filter);\n        this.focusedFilterId = filter.name();\n        this.$timeout(() => {\n            let el = window.document.getElementById(this.focusedFilterId);\n            if (el && el.focus) {\n                el.focus();\n            }\n        }, 200, false);\n    }\n\n    getEnabledFilters() {\n        return this.filters.filter(filter => {\n            if (filter.pinned()) {\n                return true;\n            }\n            return this.search && (filter.name() in this.search);\n        });\n    }\n\n    updateFilters() {\n        var values = {},\n            filters = this.enabledFilters,\n            fieldName,\n            field,\n            i;\n        for (i in filters) {\n            field = filters[i];\n            fieldName = field.name();\n            if (this.search[fieldName] === '') {\n                delete this.search[fieldName];\n                continue;\n            }\n\n            if ((field.type() === 'boolean' && fieldName in this.search) || // for boolean false is the same as null\n                (field.type() !== 'boolean' && this.search[fieldName] !== null)) {\n                values[fieldName] = field.getTransformedValue(this.search[fieldName]);\n            }\n        }\n        this.$stateParams.search = values;\n        this.$stateParams.page = 1;\n        this.$state.go('list', this.$stateParams);\n    }\n\n    removeFilter(filter) {\n        delete this.search[filter.name()];\n        this.enabledFilters = this.enabledFilters.filter(f => f !== filter);\n    }\n\n    destroy() {\n        this.$scope = undefined;\n        this.$state = undefined;\n        this.$stateParams = undefined;\n        this.$timeout = undefined;\n        this.dataStore = undefined;\n    }\n}\n\nListLayoutController.$inject = ['$scope', '$stateParams', '$state', '$location', '$timeout', 'view', 'dataStore'];\n"]}