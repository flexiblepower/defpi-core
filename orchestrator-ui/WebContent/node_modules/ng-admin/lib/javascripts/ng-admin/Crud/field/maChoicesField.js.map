{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/field/maChoicesField.js"],"names":["maChoicesField","$compile","scope","restrict","compile","pre","element","field","attributes","placeholder","name","v","validation","refreshAttributes","itemsFilter","type","indexOf","remoteComplete","refreshDelay","remoteCompleteOptions","choices","onRemove","refresh","$search","$select","search","template","required","entry","html","select","children","setAttribute","contents","post","$on","e","data","$root","$$phase","$digest","$inject"],"mappings":";;;;;kBAKwBA,c;AALxB;;;;;AAKe,SAASA,cAAT,CAAwBC,QAAxB,EAAkC;AAC7C;;AAEA,WAAO;AACHC,eAAO;AACH,qBAAS,GADN;AAEH,qBAAS,GAFN;AAGH,qBAAU,IAHP;AAIH,yBAAa,IAJV;AAKH,uBAAW;AALR,SADJ;AAQHC,kBAAU,GARP;AASHC,iBAAS,mBAAW;AAChB,mBAAO;AACHC,qBAAK,aAASH,KAAT,EAAgBI,OAAhB,EAAyB;AAC1B,wBAAIC,QAAQL,MAAMK,KAAN,EAAZ;AACA,wBAAIC,aAAaD,MAAMC,UAAN,EAAjB;AACAN,0BAAMO,WAAN,GAAqBD,cAAcA,WAAWC,WAA1B,IAA0C,eAA9D;AACAP,0BAAMQ,IAAN,GAAaH,MAAMG,IAAN,EAAb;AACAR,0BAAMS,CAAN,GAAUJ,MAAMK,UAAN,EAAV;;AAEA,wBAAIC,oBAAoB,EAAxB;AACA,wBAAIC,cAAc,mCAAlB;AACA,wBAAIP,MAAMQ,IAAN,GAAaC,OAAb,CAAqB,WAArB,MAAsC,CAAtC,IAA2CT,MAAMU,cAAN,EAA/C,EAAuE;AACnEf,8BAAMgB,YAAN,GAAqBX,MAAMY,qBAAN,GAA8BD,YAAnD;AACAL,4CAAoB,6EAApB;AACAC,sCAAc,EAAd;AACH;;AAED,wBAAIM,UAAUb,MAAMa,OAAN,GAAgBb,MAAMa,OAAN,EAAhB,GAAkC,EAAhD;;AAEAlB,0BAAMmB,QAAN,GAAiB,YAAW;AACxBnB,8BAAMoB,OAAN,CAAc,EAAEC,SAAS,KAAKC,OAAL,CAAaC,MAAxB,EAAd;AACF,qBAFF;;AAIA,wBAAIC,sDACaxB,MAAMS,CAAN,CAAQgB,QAAR,GAAmB,oBAAnB,GAA0C,EADvD,yTAGyBd,iBAHzB,+CAGoFC,WAHpF,6JAAJ;;AAQAZ,0BAAMkB,OAAN,GAAgB,OAAOA,OAAP,KAAoB,UAApB,GAAiCA,QAAQlB,MAAM0B,KAAd,CAAjC,GAAwDR,OAAxE;AACAd,4BAAQuB,IAAR,CAAaH,QAAb;;AAEA,wBAAII,SAASxB,QAAQyB,QAAR,GAAmB,CAAnB,CAAb;;AAEA,yBAAK,IAAIrB,IAAT,IAAiBF,UAAjB,EAA6B;AACzBsB,+BAAOE,YAAP,CAAoBtB,IAApB,EAA0BF,WAAWE,IAAX,CAA1B;AACH;;AAEDT,6BAASK,QAAQ2B,QAAR,EAAT,EAA6B/B,KAA7B;AACH,iBAxCE;AAyCHgC,sBAAM,cAAShC,KAAT,EAAgB;AAClBA,0BAAMiC,GAAN,CAAU,gBAAV,EAA4B,UAASC,CAAT,EAAYC,IAAZ,EAAkB;AAC1CnC,8BAAMkB,OAAN,GAAgBiB,KAAKjB,OAArB;AACAlB,8BAAMoC,KAAN,CAAYC,OAAZ,IAAuBrC,MAAMsC,OAAN,EAAvB;AACH,qBAHD;AAIH;AA9CE,aAAP;AAgDH;AA1DE,KAAP;AA4DH;;AAEDxC,eAAeyC,OAAf,GAAyB,CAAC,UAAD,CAAzB","file":"maChoicesField.js","sourcesContent":["/**\n * Edition field for a selection of elements in a list - a multiple select.\n *\n * @example <ma-choices-field entry=\"entry\" field=\"field\" value=\"value\"></ma-choices-field>\n */\nexport default function maChoicesField($compile) {\n    'use strict';\n\n    return {\n        scope: {\n            'field': '&',\n            'value': '=',\n            'entry':  '=?',\n            'datastore': '&?',\n            'refresh': '&'\n        },\n        restrict: 'E',\n        compile: function() {\n            return {\n                pre: function(scope, element) {\n                    var field = scope.field();\n                    var attributes = field.attributes();\n                    scope.placeholder = (attributes && attributes.placeholder) || 'FILTER_VALUES';\n                    scope.name = field.name();\n                    scope.v = field.validation();\n\n                    var refreshAttributes = '';\n                    var itemsFilter = '| filter: {label: $select.search}';\n                    if (field.type().indexOf('reference') === 0 && field.remoteComplete()) {\n                        scope.refreshDelay = field.remoteCompleteOptions().refreshDelay;\n                        refreshAttributes = 'refresh-delay=\"refreshDelay\" refresh=\"refresh({ $search: $select.search })\"';\n                        itemsFilter = '';\n                    }\n\n                    var choices = field.choices ? field.choices() : [];\n\n                    scope.onRemove = function() {\n                        scope.refresh({ $search: this.$select.search })\n                     }\n\n                    var template = `\n                        <ui-select ${scope.v.required ? 'ui-select-required' : ''} multiple on-remove=\"onRemove()\" ng-model=\"$parent.value\" ng-required=\"v.required\" id=\"{{ name }}\" name=\"{{ name }}\">\n                            <ui-select-match placeholder=\"{{ placeholder | translate }}\">{{ $item.label | translate }}</ui-select-match>\n                            <ui-select-choices ${refreshAttributes} repeat=\"item.value as item in choices ${itemsFilter}\">\n                                {{ item.label | translate }}\n                            </ui-select-choices>\n                        </ui-select>`;\n\n                    scope.choices = typeof(choices) === 'function' ? choices(scope.entry) : choices;\n                    element.html(template);\n\n                    var select = element.children()[0];\n\n                    for (var name in attributes) {\n                        select.setAttribute(name, attributes[name]);\n                    }\n\n                    $compile(element.contents())(scope);\n                },\n                post: function(scope) {\n                    scope.$on('choices:update', function(e, data) {\n                        scope.choices = data.choices;\n                        scope.$root.$$phase || scope.$digest();\n                    });\n                }\n            };\n        }\n    };\n}\n\nmaChoicesField.$inject = ['$compile'];\n"]}