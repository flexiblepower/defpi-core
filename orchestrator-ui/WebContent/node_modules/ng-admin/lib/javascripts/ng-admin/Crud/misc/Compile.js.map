{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/misc/Compile.js"],"names":["Compile","$injector","$compile","get","transclude","link","scope","element","attrs","controller","transcludeFn","unbindWatcher","$watch","$eval","compile","value","clone","append","html","contents","compileOnce","$inject"],"mappings":";;;;;kBACwBA,O;AADxB;AACe,SAASA,OAAT,CAAiBC,SAAjB,EAA4B;AACvC,QAAIC,WAAWD,UAAUE,GAAV,CAAc,UAAd,CAAf;;AAEA,WAAO;AACHC,oBAAY,IADT;AAEHC,cAAM,cAAUC,KAAV,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiCC,UAAjC,EAA6CC,YAA7C,EAA2D;AAC7D,gBAAIC,gBAAgBL,MAAMM,MAAN,CAChB,UAAUN,KAAV,EAAiB;AACb;AACA,uBAAOA,MAAMO,KAAN,CAAYL,MAAMM,OAAlB,CAAP;AACH,aAJe,EAKhB,UAAUC,KAAV,EAAiB;AACb,oBAAI,UAAUA,KAAd,EAAqB;AACjB;AACAL,iCAAaJ,KAAb,EAAoB,UAASU,KAAT,EAAgB;AAChCT,gCAAQU,MAAR,CAAeD,KAAf;AACH,qBAFD;AAGA;AACH;AACD;AACAT,wBAAQW,IAAR,CAAaH,KAAb;;AAEA;AACAb,yBAASK,QAAQY,QAAR,EAAT,EAA6Bb,KAA7B;;AAEA,oBAAIE,MAAMY,WAAN,IAAqB,MAAzB,EAAiC;AAC7BT;AACH;AACJ,aAtBe,CAApB;AAwBH;AA3BE,KAAP;AA6BH;;AAEDX,QAAQqB,OAAR,GAAkB,CAAC,WAAD,CAAlB","file":"Compile.js","sourcesContent":["// @see https://docs.angularjs.org/api/ng/service/$compile\nexport default function Compile($injector) {\n    var $compile = $injector.get('$compile');\n\n    return {\n        transclude: true,\n        link: function (scope, element, attrs, controller, transcludeFn) {\n            var unbindWatcher = scope.$watch(\n                function (scope) {\n                    // watch the 'compile' expression for changes\n                    return scope.$eval(attrs.compile);\n                },\n                function (value) {\n                    if (false === value) {\n                        // use the default tag content\n                        transcludeFn(scope, function(clone) {\n                            element.append(clone);\n                        });\n                        return;\n                    }\n                    // when the 'compile' expression changes assign it into the current DOM\n                    element.html(value);\n\n                    // compile the new DOM and link it to the current scope.\n                    $compile(element.contents())(scope);\n\n                    if (attrs.compileOnce == 'true') {\n                        unbindWatcher();\n                    }\n                }\n            );\n        }\n    };\n}\n\nCompile.$inject = ['$injector'];\n"]}