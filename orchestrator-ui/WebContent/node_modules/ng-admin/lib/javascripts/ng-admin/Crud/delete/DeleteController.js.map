{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/delete/DeleteController.js"],"names":["DeleteController","$scope","$window","$state","$q","$translate","WriteQueries","Configuration","progression","notification","params","view","entry","config","entityLabel","entity","entityId","id","title","description","actions","getEntity","$on","destroy","bind","previousStateParametersDeferred","defer","event","to","toParams","from","fromParams","resolve","entityName","name","start","deleteOne","then","promise","previousStateParameters","go","get","angular","extend","back","log","text","addnCls","catch","errorMessage","getErrorMessageFor","error","done","status","details","data","JSON","stringify","identity","history","undefined","$inject"],"mappings":"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","file":"DeleteController.js","sourcesContent":["export default class DeleteController {\n    constructor($scope, $window, $state, $q, $translate, WriteQueries, Configuration, progression, notification, params, view, entry) {\n        this.$scope = $scope;\n        this.$window = $window;\n        this.$state = $state;\n        this.$translate = $translate;\n        this.WriteQueries = WriteQueries;\n        this.config = Configuration();\n        this.entityLabel = params.entity;\n        this.entityId = params.id;\n        this.view = view;\n        this.title = view.title();\n        this.description = view.description();\n        this.actions = view.actions();\n        this.entity = view.getEntity();\n        this.progression = progression;\n        this.notification = notification;\n        this.$scope.entry = entry;\n        this.$scope.view = view;\n\n        $scope.$on('$destroy', this.destroy.bind(this));\n\n        this.previousStateParametersDeferred = $q.defer();\n        $scope.$on('$stateChangeSuccess', (event, to, toParams, from, fromParams) => {\n            this.previousStateParametersDeferred.resolve(fromParams);\n        });\n    }\n\n    deleteOne() {\n        const entityName = this.entity.name();\n        const { $translate, notification, progression } = this;\n        progression.start();\n        return this.WriteQueries.deleteOne(this.view, this.entityId)\n            .then(() => this.previousStateParametersDeferred.promise)\n            .then(previousStateParameters => {\n                // if previous page was related to deleted entity, redirect to list\n                if (previousStateParameters.entity === entityName && previousStateParameters.id === this.entityId) {\n                    return this.$state.go(this.$state.get('list'), angular.extend({\n                        entity: entityName\n                    }, this.$state.params));\n                }\n                return this.back();\n            })\n            // no need to call progression.done() in case of success, as it's called by the view dislayed afterwards\n            .then(() => $translate('DELETE_SUCCESS'))\n            .then(text => notification.log(text, { addnCls: 'humane-flatty-success' }))\n            .catch(error => {\n                const errorMessage = this.config.getErrorMessageFor(this.view, error) || 'ERROR_MESSAGE';\n                progression.done();\n                $translate(errorMessage, {\n                    status: error && error.status,\n                    details: error && error.data && typeof error.data === 'object' ? JSON.stringify(error.data) : {}\n                })\n                    .catch(angular.identity) // See https://github.com/angular-translate/angular-translate/issues/1516\n                    .then(text => notification.log(text, { addnCls: 'humane-flatty-error' }));\n            });\n    }\n\n    back() {\n        this.$window.history.back();\n    }\n\n    destroy() {\n        this.$scope = undefined;\n        this.$window = undefined;\n        this.$state = undefined;\n        this.$translate = undefined;\n        this.WriteQueries = undefined;\n        this.view = undefined;\n        this.entity = undefined;\n        this.progression = undefined;\n        this.notification = undefined;\n    }\n}\n\nDeleteController.$inject = ['$scope', '$window', '$state', '$q', '$translate', 'WriteQueries', 'NgAdminConfiguration', 'progression', 'notification', 'params', 'view', 'entry'];\n"]}