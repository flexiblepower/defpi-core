{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/column/maColumn.js"],"names":["maColumn","$state","$anchorScroll","$compile","Configuration","FieldViewConfiguration","getDetailLinkRouteName","field","entity","isReadOnly","showView","enabled","detailLinkRoute","editionView","isDetailLink","type","relatedEntity","getEntity","targetEntity","name","restrict","scope","entry","datastore","link","element","value","values","customTemplate","getTemplateValue","templateIncludesLabel","append","getLinkWidget","getReadWidget","detailState","detailStateParams","params","entityName","id","identifierValue","contents","$inject"],"mappings":"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","file":"maColumn.js","sourcesContent":["export default function maColumn($state, $anchorScroll, $compile, Configuration, FieldViewConfiguration) {\n\n    function getDetailLinkRouteName(field, entity) {\n        if (entity.isReadOnly) {\n            return entity.showView().enabled ? 'show' : false;\n        }\n        if (field.detailLinkRoute() == 'edit' && entity.editionView().enabled) {\n            return 'edit';\n        }\n        return entity.showView().enabled ? 'show' : false;\n    }\n\n    function isDetailLink(field, entity) {\n        if (field.isDetailLink() === false) {\n            return false;\n        }\n        if (field.type() == 'reference' || field.type() == 'reference_many') {\n            var relatedEntity = Configuration().getEntity(field.targetEntity().name());\n            if (!relatedEntity) {\n                return false;\n            }\n            return getDetailLinkRouteName(field, relatedEntity) !== false;\n        }\n        return getDetailLinkRouteName(field, entity) !== false;\n    }\n\n    return {\n        restrict: 'E',\n        scope: {\n            field: '&',\n            entry: '&',\n            entity: '&',\n            datastore: '&'\n        },\n        link: function(scope, element) {\n            scope.datastore = scope.datastore();\n            scope.field = scope.field();\n            scope.entry = scope.entry();\n            scope.value = typeof scope.entry === 'undefined'\n                ? ''\n                : scope.entry.values[scope.field.name()];\n            scope.entity = scope.entity();\n            let customTemplate = scope.field.getTemplateValue(scope.entry);\n            if (customTemplate && !scope.field.templateIncludesLabel()) {\n                element.append(customTemplate);\n            } else {\n                let type = scope.field.type();\n                if (isDetailLink(scope.field, scope.entity)) {\n                    element.append(FieldViewConfiguration[type].getLinkWidget());\n                } else {\n                    element.append(FieldViewConfiguration[type].getReadWidget());\n                }\n            }\n            scope.detailState = false;\n            scope.detailStateParams = {};\n            if (typeof scope.entry !== 'undefined') {\n                scope.detailState = getDetailLinkRouteName(scope.field, scope.entity);\n                scope.detailStateParams = {\n                    ...$state.params,\n                    entity: scope.entry.entityName,\n                    id: scope.entry.identifierValue,\n                };\n            }\n            $compile(element.contents())(scope);\n        }\n    };\n}\n\nmaColumn.$inject = ['$state', '$anchorScroll', '$compile', 'NgAdminConfiguration', 'FieldViewConfiguration'];\n"]}