{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/field/maDateField.js"],"names":["maDateField","valueToRawValue","value","Date","scope","restrict","link","element","field","name","rawValue","$watch","newRawValue","undefined","newValue","parse","angular","equals","oldValue","format","type","v","validation","isOpen","input","find","eq","attributes","attr","toggleDatePicker","$event","preventDefault","stopPropagation","template","$inject"],"mappings":";;;;;kBAawBA,W;AAbxB,IAAMC,kBAAkB,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,QAAIA,iBAAiBC,IAArB,EAA2B;AACvB,eAAOD,KAAP;AACH;;AAED,WAAO,IAAIC,IAAJ,CAASD,KAAT,CAAP;AACH,CAND;;AAQA;;;;;AAKe,SAASF,WAAT,GAAuB;AAClC,WAAO;AACHI,eAAO;AACH,qBAAS,GADN;AAEH,qBAAS;AAFN,SADJ;AAKHC,kBAAU,GALP;AAMHC,cAAM,cAASF,KAAT,EAAgBG,OAAhB,EAAyB;AAC3B,gBAAIC,QAAQJ,MAAMI,KAAN,EAAZ;AACAJ,kBAAMK,IAAN,GAAaD,MAAMC,IAAN,EAAb;AACAL,kBAAMM,QAAN,GAAiBN,MAAMF,KAAN,IAAe,IAAf,GAAsB,IAAtB,GAA6BD,gBAAgBG,MAAMF,KAAtB,CAA9C;;AAEAE,kBAAMO,MAAN,CAAa,UAAb,EAAyB,UAASC,WAAT,EAAsB;AAC3C,oBAAGA,gBAAgBC,SAAnB,EAA6B;AACzB;AACA;AACA;AACH;AACD,oBAAMC,WAAWN,MAAMO,KAAN,GAAcH,WAAd,CAAjB;;AAEA,oBAAI,CAACI,QAAQC,MAAR,CAAeb,MAAMF,KAArB,EAA4BY,QAA5B,CAAL,EAA4C;AACxCV,0BAAMF,KAAN,GAAcY,QAAd;AACH;AACJ,aAXD;;AAaAV,kBAAMO,MAAN,CAAa,OAAb,EAAsB,UAACG,QAAD,EAAWI,QAAX,EAAwB;AAC1C,oBAAIF,QAAQC,MAAR,CAAeH,QAAf,EAAyBI,QAAzB,CAAJ,EAAwC;AACpC;AACH;;AAED,oBAAI,CAACJ,QAAL,EAAe;AACX,wBAAIV,MAAMM,QAAN,KAAmB,IAAvB,EAA6B;AACzBN,8BAAMM,QAAN,GAAiB,IAAjB;AACH;;AAED;AACH;;AAED,oBAAME,cAAcX,gBAAgBG,MAAMF,KAAtB,CAApB;;AAEA,oBAAI,CAACc,QAAQC,MAAR,CAAeb,MAAMM,QAArB,EAA+BE,WAA/B,CAAL,EAAkD;AAC9CR,0BAAMM,QAAN,GAAiBE,WAAjB;AACH;AACJ,aAlBD;;AAoBAR,kBAAMe,MAAN,GAAeX,MAAMW,MAAN,EAAf;AACA,gBAAI,CAACf,MAAMe,MAAX,EAAmB;AACff,sBAAMe,MAAN,GAAeX,MAAMY,IAAN,OAAiB,MAAjB,GAA0B,YAA1B,GAAyC,qBAAxD;AACH;;AAEDhB,kBAAMiB,CAAN,GAAUb,MAAMc,UAAN,EAAV;AACAlB,kBAAMmB,MAAN,GAAe,KAAf;AACA,gBAAIC,QAAQjB,QAAQkB,IAAR,CAAa,OAAb,EAAsBC,EAAtB,CAAyB,CAAzB,CAAZ;AACA,gBAAIC,aAAanB,MAAMmB,UAAN,EAAjB;AACA,iBAAK,IAAIlB,IAAT,IAAiBkB,UAAjB,EAA6B;AACzBH,sBAAMI,IAAN,CAAWnB,IAAX,EAAiBkB,WAAWlB,IAAX,CAAjB;AACH;AACDL,kBAAMyB,gBAAN,GAAyB,UAAUC,MAAV,EAAkB;AACvCA,uBAAOC,cAAP;AACAD,uBAAOE,eAAP;AACA5B,sBAAMmB,MAAN,GAAe,CAACnB,MAAMmB,MAAtB;AACH,aAJD;AAKH,SA7DE;AA8DHU;AA9DG,KAAP;AA2EH;;AAEDjC,YAAYkC,OAAZ,GAAsB,EAAtB","file":"maDateField.js","sourcesContent":["const valueToRawValue = (value) => {\n    if (value instanceof Date) {\n        return value;\n    }\n\n    return new Date(value);\n};\n\n/**\n * Edition field for a date - a text input with a datepicker.\n *\n * @example <ma-date-field field=\"field\" value=\"value\"></ma-date-field>\n */\nexport default function maDateField() {\n    return {\n        scope: {\n            'field': '&',\n            'value': '='\n        },\n        restrict: 'E',\n        link: function(scope, element) {\n            var field = scope.field();\n            scope.name = field.name();\n            scope.rawValue = scope.value == null ? null : valueToRawValue(scope.value);\n\n            scope.$watch('rawValue', function(newRawValue) {\n                if(newRawValue === undefined){\n                    // ui bootstrap datepicker set value to undefined\n                    // when the value is invalid and null if empty\n                    return;\n                }\n                const newValue = field.parse()(newRawValue);\n\n                if (!angular.equals(scope.value, newValue)) {\n                    scope.value = newValue;\n                }\n            });\n\n            scope.$watch('value', (newValue, oldValue) => {\n                if (angular.equals(newValue, oldValue)) {\n                    return;\n                }\n\n                if (!newValue) {\n                    if (scope.rawValue !== null) {\n                        scope.rawValue = null;\n                    }\n\n                    return;\n                }\n\n                const newRawValue = valueToRawValue(scope.value);\n\n                if (!angular.equals(scope.rawValue, newRawValue)) {\n                    scope.rawValue = newRawValue;\n                }\n            });\n\n            scope.format = field.format();\n            if (!scope.format) {\n                scope.format = field.type() === 'date' ? 'yyyy-MM-dd' : 'yyyy-MM-dd HH:mm:ss';\n            }\n\n            scope.v = field.validation();\n            scope.isOpen = false;\n            var input = element.find('input').eq(0);\n            var attributes = field.attributes();\n            for (var name in attributes) {\n                input.attr(name, attributes[name]);\n            }\n            scope.toggleDatePicker = function ($event) {\n                $event.preventDefault();\n                $event.stopPropagation();\n                scope.isOpen = !scope.isOpen;\n            };\n        },\n        template:\n`<div class=\"input-group datepicker\">\n    <input\n        type=\"text\" ng-model=\"rawValue\" id=\"{{ name }}\" name=\"{{ name }}\" class=\"form-control\"\n        uib-datepicker-popup=\"{{ format }}\" is-open=\"isOpen\" ng-required=\"v.required\"\n        close-text=\"{{ 'CLOSE' | translate }}\" clear-text=\"{{ 'CLEAR' | translate }}\" current-text=\"{{ 'CURRENT' | translate }}\"/>\n    <span class=\"input-group-btn\">\n        <button type=\"button\" class=\"btn btn-default\" ng-click=\"toggleDatePicker($event)\">\n            <i class=\"glyphicon glyphicon-calendar\"></i>\n        </button>\n    </span>\n</div>`\n    };\n}\n\nmaDateField.$inject = [];\n"]}