{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/list/ListController.js"],"names":["ListController","$scope","$stateParams","$location","$anchorScroll","ReadQueries","progression","view","dataStore","totalItems","entity","getEntity","loadingPage","search","fields","listActions","page","infinitePagination","entryCssClasses","getEntryCssClasses","bind","nextPageCallback","nextPage","setPageCallback","setPage","sortField","getSortFieldName","sortDir","queryPromises","selectionUpdater","selection","$watch","$on","destroy","start","references","getReferences","data","toAddToDatastore","queryPromise","getAll","then","response","getReferenceData","referenceData","done","name","createArrayFromRest","targetField","targetEntity","identifier","map","push","uniqueId","entry","Promise","all","$apply","args","addEntry","mapEntries","fillReferencesValuesFromEntry","number","undefined","$inject"],"mappings":"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","file":"ListController.js","sourcesContent":["import Entry from 'admin-config/lib/Entry';\n\nexport default class ListController {\n    constructor($scope, $stateParams, $location, $anchorScroll, ReadQueries, progression, view, dataStore, totalItems) {\n        this.$scope = $scope;\n        this.$stateParams = $stateParams;\n        this.$location = $location;\n        this.$anchorScroll = $anchorScroll;\n        this.ReadQueries = ReadQueries;\n        this.progression = progression;\n        this.view = view;\n        this.entity = view.getEntity();\n        this.loadingPage = false;\n        this.search = $stateParams.search;\n        this.dataStore = dataStore;\n        this.fields = view.fields();\n        this.listActions = view.listActions();\n        this.totalItems = totalItems;\n        this.page = $stateParams.page || 1;\n        this.infinitePagination = this.view.infinitePagination();\n        this.entryCssClasses = this.view.getEntryCssClasses.bind(this.view);\n        this.nextPageCallback = this.nextPage.bind(this);\n        this.setPageCallback = this.setPage.bind(this);\n        this.sortField = this.$stateParams.sortField || this.view.getSortFieldName();\n        this.sortDir = this.$stateParams.sortDir || this.view.sortDir();\n        this.queryPromises = [];\n\n        if ($scope.selectionUpdater) {\n            $scope.selection = $scope.selection || [];\n            $scope.$watch('selection', $scope.selectionUpdater);\n        } else {\n            $scope.selection = null;\n        }\n\n        $scope.$on('$destroy', this.destroy.bind(this));\n    }\n\n    nextPage(page) {\n        if (this.loadingPage) {\n            return;\n        }\n\n        let view = this.view,\n            dataStore = this.dataStore;\n\n        this.progression.start();\n\n        const references = view.getReferences();\n        let data;\n        const toAddToDatastore = [];\n\n        let queryPromise = this.ReadQueries\n            .getAll(view, page, this.search, this.sortField, this.sortDir)\n            .then(response => {\n                data = response.data;\n                return this.ReadQueries.getReferenceData(view.fields(), data);\n            })\n            .then((referenceData) => {\n                this.progression.done();\n\n                for (var name in referenceData) {\n                    Entry.createArrayFromRest(\n                        referenceData[name],\n                        [references[name].targetField()],\n                        references[name].targetEntity().name(),\n                        references[name].targetEntity().identifier().name()\n                    ).map(entry => {\n                        toAddToDatastore.push([\n                            references[name].targetEntity().uniqueId + '_values',\n                            entry\n                        ])\n                    });\n                }\n            });\n        this.queryPromises.push(queryPromise);\n        // make sure all preceding promises complete before loading data into store\n        Promise.all(this.queryPromises)\n            .then(() => {\n                this.$scope.$apply(() => {\n                    toAddToDatastore.map((args) => {\n                        this.dataStore.addEntry(...args);\n                    });\n\n                    view.mapEntries(data)\n                        .map(entry => {\n                            this.dataStore.fillReferencesValuesFromEntry(entry, references, true);\n                            this.dataStore.addEntry(this.entity.uniqueId, entry);\n                        });\n                    this.loadingPage = false;\n                });\n            });\n    }\n\n    setPage(number) {\n        this.$location.search('page', number);\n        this.$anchorScroll(0);\n    }\n\n    destroy() {\n        this.$scope = undefined;\n        this.$stateParams = undefined;\n        this.$location = undefined;\n        this.$anchorScroll = undefined;\n        this.dataStore = undefined;\n    }\n}\n\nListController.$inject = ['$scope', '$stateParams', '$location', '$anchorScroll', 'ReadQueries', 'progression', 'view', 'dataStore', 'totalItems'];\n"]}