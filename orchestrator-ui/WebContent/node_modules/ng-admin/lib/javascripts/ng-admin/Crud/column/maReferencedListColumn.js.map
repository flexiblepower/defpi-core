{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/column/maReferencedListColumn.js"],"names":["maReferencedListColumn","isSortFieldForMe","sortField","field","split","targetEntity","name","NgAdminConfiguration","$stateParams","scope","restrict","link","pre","entries","datastore","getEntries","uniqueId","entity","getEntity","getSortFieldName","sortDir","template","$inject"],"mappings":";;;;;kBAKwBA,sB;AALxB,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,KAArC,EAA4C;AACxC,QAAI,CAACD,SAAL,EAAgB,OAAO,KAAP;AAChB,WAAOA,UAAUE,KAAV,CAAgB,GAAhB,EAAqB,CAArB,KAA4BD,MAAME,YAAN,GAAqBC,IAArB,KAA8B,WAAjE;AACH;;AAEc,SAASN,sBAAT,CAAgCO,oBAAhC,EAAsDC,YAAtD,EAAoE;AAC/E,WAAO;AACHC,eAAO;AACH,qBAAS,GADN;AAEH,yBAAa;AAFV,SADJ;AAKHC,kBAAU,GALP;AAMHC,cAAM;AACFC,iBAAK,aAASH,KAAT,EAAgB;AACjBA,sBAAMN,KAAN,GAAcM,MAAMN,KAAN,EAAd;AACA,oBAAIE,eAAeI,MAAMN,KAAN,CAAYE,YAAZ,EAAnB;AACAI,sBAAMI,OAAN,GAAgBJ,MAAMK,SAAN,GAAkBC,UAAlB,CAA6BV,aAAaW,QAAb,GAAwB,OAArD,CAAhB;AACAP,sBAAMQ,MAAN,GAAeV,uBAAuBW,SAAvB,CAAiCb,aAAaC,IAAb,EAAjC,CAAf;AACAG,sBAAMP,SAAN,GAAkBD,iBAAiBO,aAAaN,SAA9B,EAAyCO,MAAMN,KAA/C,IACdK,aAAaN,SADC,GAEdO,MAAMN,KAAN,CAAYgB,gBAAZ,EAFJ;AAGAV,sBAAMW,OAAN,GAAgBZ,aAAaY,OAAb,IAAwBX,MAAMN,KAAN,CAAYiB,OAAZ,EAAxC;AACH;AAVC,SANH;AAkBHC;AAlBG,KAAP;AA8BH;;AAEDrB,uBAAuBsB,OAAvB,GAAiC,CAAC,sBAAD,EAAyB,cAAzB,CAAjC","file":"maReferencedListColumn.js","sourcesContent":["function isSortFieldForMe(sortField, field) {\n    if (!sortField) return false;\n    return sortField.split('.')[0] == (field.targetEntity().name() + '_ListView');\n}\n\nexport default function maReferencedListColumn(NgAdminConfiguration, $stateParams) {\n    return {\n        scope: {\n            'field': '&',\n            'datastore': '&'\n        },\n        restrict: 'E',\n        link: {\n            pre: function(scope) {\n                scope.field = scope.field();\n                var targetEntity = scope.field.targetEntity();\n                scope.entries = scope.datastore().getEntries(targetEntity.uniqueId + '_list');\n                scope.entity = NgAdminConfiguration().getEntity(targetEntity.name());\n                scope.sortField = isSortFieldForMe($stateParams.sortField, scope.field) ?\n                    $stateParams.sortField :\n                    scope.field.getSortFieldName();\n                scope.sortDir = $stateParams.sortDir || scope.field.sortDir();\n            }\n        },\n        template: `\n<ma-datagrid ng-if=\"::entries.length > 0\" name=\"{{ field.datagridName() }}\"\n    entries=\"::entries\"\n    fields=\"::field.targetFields()\"\n    list-actions=\"::field.listActions()\"\n    entity=\"::entity\"\n    sort-field=\"::sortField\"\n    sort-dir=\"::sortDir\"\n    datastore=\"::datastore()\"\n    entry-css-classes=\"::field.entryCssClasses()\">\n</ma-datagrid>`\n    };\n}\n\nmaReferencedListColumn.$inject = ['NgAdminConfiguration', '$stateParams'];\n"]}