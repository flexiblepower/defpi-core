{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/delete/BatchDeleteController.js"],"names":["BatchDeleteController","$scope","$state","$translate","WriteQueries","progression","notification","view","entity","getEntity","entityIds","params","ids","selection","title","description","actions","loadingPage","fields","$on","destroy","bind","entityName","name","start","batchDelete","then","go","get","angular","extend","log","text","addnCls","catch","errorMessage","config","getErrorMessageFor","error","done","status","details","data","JSON","stringify","identity","undefined","$inject"],"mappings":";;;;;;;;;;;;IAAqBA,qB;AACjB,mCAAYC,MAAZ,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,YAAxC,EAAsDC,WAAtD,EAAmEC,YAAnE,EAAiFC,IAAjF,EAAuF;AAAA;;AACnF,aAAKN,MAAL,GAAcA,MAAd;AACA,aAAKC,MAAL,GAAcA,MAAd;AACA,aAAKC,UAAL,GAAkBA,UAAlB;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,YAAL,GAAoBA,YAApB;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,MAAL,GAAcD,KAAKE,SAAL,EAAd;AACA,aAAKC,SAAL,GAAiBR,OAAOS,MAAP,CAAcC,GAA/B;AACA,aAAKC,SAAL,GAAiB,EAAjB,CAVmF,CAU9D;AACrB,aAAKC,KAAL,GAAaP,KAAKO,KAAL,EAAb;AACA,aAAKC,WAAL,GAAmBR,KAAKQ,WAAL,EAAnB;AACA,aAAKC,OAAL,GAAeT,KAAKS,OAAL,EAAf;AACA,aAAKC,WAAL,GAAmB,KAAnB;AACA,aAAKC,MAAL,GAAcX,KAAKW,MAAL,EAAd;;AAEAjB,eAAOkB,GAAP,CAAW,UAAX,EAAuB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAvB;AACH;;;;sCAEa;AAAA;;AACV,gBAAMC,aAAa,KAAKd,MAAL,CAAYe,IAAZ,EAAnB;AADU,gBAEFpB,UAFE,GAEgD,IAFhD,CAEFA,UAFE;AAAA,gBAEUD,MAFV,GAEgD,IAFhD,CAEUA,MAFV;AAAA,gBAEkBG,WAFlB,GAEgD,IAFhD,CAEkBA,WAFlB;AAAA,gBAE+BC,YAF/B,GAEgD,IAFhD,CAE+BA,YAF/B;;AAGVD,wBAAYmB,KAAZ;AACA,mBAAO,KAAKpB,YAAL,CAAkBqB,WAAlB,CAA8B,KAAKlB,IAAnC,EAAyC,KAAKG,SAA9C,EACFgB,IADE,CACG;AAAA,uBAAMxB,OAAOyB,EAAP,CAAUzB,OAAO0B,GAAP,CAAW,MAAX,CAAV,EAA8BC,QAAQC,MAAR,CAAe,EAAEtB,QAAQc,UAAV,EAAf,EAAuCpB,OAAOS,MAA9C,CAA9B,CAAN;AAAA,aADH;AAEH;AAFG,aAGFe,IAHE,CAGG;AAAA,uBAAMvB,WAAW,sBAAX,CAAN;AAAA,aAHH,EAIFuB,IAJE,CAIG;AAAA,uBAAQpB,aAAayB,GAAb,CAAiBC,IAAjB,EAAuB,EAAEC,SAAS,uBAAX,EAAvB,CAAR;AAAA,aAJH,EAKFC,KALE,CAKI,iBAAS;AACZ,oBAAMC,eAAe,MAAKC,MAAL,CAAYC,kBAAZ,CAA+B,MAAK9B,IAApC,EAA0C+B,KAA1C,KAAoD,eAAzE;AACAjC,4BAAYkC,IAAZ;;AAEApC,2BAAWgC,YAAX,EAAyB;AACrBK,4BAAQF,SAASA,MAAME,MADF;AAErBC,6BAASH,SAASA,MAAMI,IAAf,IAAuB,QAAOJ,MAAMI,IAAb,MAAsB,QAA7C,GAAwDC,KAAKC,SAAL,CAAeN,MAAMI,IAArB,CAAxD,GAAqF;AAFzE,iBAAzB,EAIKR,KAJL,CAIWL,QAAQgB,QAJnB,EAI6B;AAJ7B,iBAKKnB,IALL,CAKU;AAAA,2BAAQpB,aAAayB,GAAb,CAAiBC,IAAjB,EAAuB,EAAEC,SAAS,qBAAX,EAAvB,CAAR;AAAA,iBALV;AAMH,aAfE,CAAP;AAgBH;;;+BAEM;AACH,iBAAK/B,MAAL,CAAYyB,EAAZ,CAAe,KAAKzB,MAAL,CAAY0B,GAAZ,CAAgB,MAAhB,CAAf,EAAwCC,QAAQC,MAAR,CAAe;AACnDtB,wBAAQ,KAAKA,MAAL,CAAYe,IAAZ;AAD2C,aAAf,EAErC,KAAKrB,MAAL,CAAYS,MAFyB,CAAxC;AAGH;;;kCAES;AACN,iBAAKV,MAAL,GAAc6C,SAAd;AACA,iBAAK5C,MAAL,GAAc4C,SAAd;AACA,iBAAK3C,UAAL,GAAkB2C,SAAlB;AACA,iBAAK1C,YAAL,GAAoB0C,SAApB;AACA,iBAAKzC,WAAL,GAAmByC,SAAnB;AACA,iBAAKxC,YAAL,GAAoBwC,SAApB;AACH;;;;;;kBAxDgB9C,qB;;;AA2DrBA,sBAAsB+C,OAAtB,GAAgC,CAAC,QAAD,EAAW,QAAX,EAAqB,YAArB,EAAmC,cAAnC,EAAmD,aAAnD,EAAkE,cAAlE,EAAkF,MAAlF,CAAhC","file":"BatchDeleteController.js","sourcesContent":["export default class BatchDeleteController {\n    constructor($scope, $state, $translate, WriteQueries, progression, notification, view) {\n        this.$scope = $scope;\n        this.$state = $state;\n        this.$translate = $translate;\n        this.WriteQueries = WriteQueries;\n        this.progression = progression;\n        this.notification = notification;\n        this.view = view;\n        this.entity = view.getEntity();\n        this.entityIds = $state.params.ids;\n        this.selection = []; // fixme: query db to get selection\n        this.title = view.title();\n        this.description = view.description();\n        this.actions = view.actions();\n        this.loadingPage = false;\n        this.fields = view.fields();\n\n        $scope.$on('$destroy', this.destroy.bind(this));\n    }\n\n    batchDelete() {\n        const entityName = this.entity.name();\n        const { $translate, $state, progression, notification } = this;\n        progression.start();\n        return this.WriteQueries.batchDelete(this.view, this.entityIds)\n            .then(() => $state.go($state.get('list'), angular.extend({ entity: entityName }, $state.params)))\n            // no need to call progression.done() in case of success, as it's called by the view dislayed afterwards\n            .then(() => $translate('BATCH_DELETE_SUCCESS'))\n            .then(text => notification.log(text, { addnCls: 'humane-flatty-success' }))\n            .catch(error => {\n                const errorMessage = this.config.getErrorMessageFor(this.view, error) || 'ERROR_MESSAGE';\n                progression.done();\n\n                $translate(errorMessage, {\n                    status: error && error.status,\n                    details: error && error.data && typeof error.data === 'object' ? JSON.stringify(error.data) : {}\n                })\n                    .catch(angular.identity) // See https://github.com/angular-translate/angular-translate/issues/1516\n                    .then(text => notification.log(text, { addnCls: 'humane-flatty-error' }));\n            });\n    }\n\n    back() {\n        this.$state.go(this.$state.get('list'), angular.extend({\n            entity: this.entity.name()\n        }, this.$state.params));\n    }\n\n    destroy() {\n        this.$scope = undefined;\n        this.$state = undefined;\n        this.$translate = undefined;\n        this.WriteQueries = undefined;\n        this.progression = undefined;\n        this.notification = undefined;\n    }\n}\n\nBatchDeleteController.$inject = ['$scope', '$state', '$translate', 'WriteQueries', 'progression', 'notification', 'view'];\n"]}