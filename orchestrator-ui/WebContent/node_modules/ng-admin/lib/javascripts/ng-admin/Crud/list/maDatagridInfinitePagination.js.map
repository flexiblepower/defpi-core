{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/list/maDatagridInfinitePagination.js"],"names":["maDatagridInfinitePagination","isScrollingDown","wheelEvent","deltaY","$window","$document","body","restrict","scope","perPage","totalItems","nextPage","options","link","offset","processing","parseInt","nbPages","Math","ceil","loadedPages","page","loadNextPage","debounce","push","maxWait","isNearBottom","offsetHeight","innerHeight","scrollY","shouldLoadNextPage","shouldPreloadNextPage","list","document","getElementsByClassName","length","getBoundingClientRect","bottom","handler","shouldPreloadInterval","setInterval","clearInterval","addEventListener","$on","removeEventListener","$inject"],"mappings":"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","file":"maDatagridInfinitePagination.js","sourcesContent":["import angular from 'angular';\nimport lodash from 'lodash';\n\nconst isScrollingDown = wheelEvent => {\n    if (!wheelEvent) return true;\n\n    return wheelEvent.deltaY > 0;\n};\n\nexport default function maDatagridInfinitePagination($window, $document) {\n    const body = $document[0].body;\n\n    return {\n        restrict: 'E',\n        scope: {\n            perPage: '@',\n            totalItems: '@',\n            nextPage: '&',\n            options: '=',\n        },\n        link(scope) {\n            let offset = 400;\n            if(scope.options && scope.options.offset){\n                offset = scope.options.offset\n            }\n            scope.processing = false;\n            const perPage = parseInt(scope.perPage, 10) || 1;\n            const totalItems = parseInt(scope.totalItems, 10);\n            const nbPages = Math.ceil(totalItems / perPage) || 1;\n            const loadedPages = [];\n            let page = 1;\n\n            const loadNextPage = lodash.debounce(() => {\n                if (page >= nbPages) {\n                    return;\n                }\n\n                page++;\n\n                if (page in loadedPages) {\n                    return;\n                }\n\n                scope.processing = true;\n\n                loadedPages.push(page);\n                scope.nextPage()(page);\n                scope.processing = false;\n            }, 500, { maxWait: 1000 });\n\n            const isNearBottom = () =>\n                body.offsetHeight - $window.innerHeight - $window.scrollY < offset;\n\n            const shouldLoadNextPage = (wheelEvent) =>\n                isScrollingDown(wheelEvent) &&\n                !scope.processing &&\n                isNearBottom()\n            ;\n\n            const shouldPreloadNextPage = () => {\n                if (page >= nbPages) {\n                    return false;\n                }\n\n                const list = document.getElementsByClassName(\"list-view\");\n                if(!list.length){\n                    return false;\n                }\n\n                const { bottom } = list[0].getBoundingClientRect();\n                return bottom < $window.innerHeight;\n            };\n\n            const handler = (wheelEvent) => {\n                if(!shouldLoadNextPage(wheelEvent)){\n                    return;\n                }\n                loadNextPage();\n            };\n\n            // Trigger the load only if necessary (as many times as needed)\n            // Necessary = the bottom of the table doesn't reach the end of the page\n            const shouldPreloadInterval = setInterval(() => {\n                if(shouldPreloadNextPage()){\n                    loadNextPage();\n                    return;\n                }\n                clearInterval(shouldPreloadInterval);\n            }, 100);\n\n            $window.addEventListener('wheel', handler);\n            scope.$on('$destroy', () => {\n                $window.removeEventListener('wheel', handler);\n                if(shouldPreloadInterval){\n                    clearInterval(shouldPreloadInterval);\n                }\n            });\n        }\n    };\n}\n\nmaDatagridInfinitePagination.$inject = ['$window', '$document'];\n"]}