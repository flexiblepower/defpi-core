{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/list/maDatagridInfinitePagination.js"],"names":["maDatagridInfinitePagination","isScrollingDown","wheelEvent","deltaY","$window","$document","offset","body","restrict","scope","perPage","totalItems","nextPage","link","processing","parseInt","nbPages","Math","ceil","loadedPages","page","interval","handler","setInterval","offsetHeight","innerHeight","scrollY","push","clearInterval","addEventListener","$on","removeEventListener","$inject"],"mappings":";;;;;kBAQwBA,4B;;AARxB;;;;;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,aAAc;AAClC,QAAI,CAACC,UAAL,EAAiB,OAAO,IAAP;;AAEjB,WAAOA,WAAWC,MAAX,GAAoB,CAA3B;AACH,CAJD;;AAMe,SAASH,4BAAT,CAAsCI,OAAtC,EAA+CC,SAA/C,EAA0D;AACrE,QAAMC,SAAS,GAAf;AACA,QAAMC,OAAOF,UAAU,CAAV,EAAaE,IAA1B;;AAEA,WAAO;AACHC,kBAAU,GADP;AAEHC,eAAO;AACHC,qBAAS,GADN;AAEHC,wBAAY,GAFT;AAGHC,sBAAU;AAHP,SAFJ;AAOHC,YAPG,gBAOEJ,KAPF,EAOS;AACRA,kBAAMK,UAAN,GAAmB,KAAnB;AACA,gBAAMJ,UAAUK,SAASN,MAAMC,OAAf,EAAwB,EAAxB,KAA+B,CAA/C;AACA,gBAAMC,aAAaI,SAASN,MAAME,UAAf,EAA2B,EAA3B,CAAnB;AACA,gBAAMK,UAAUC,KAAKC,IAAL,CAAUP,aAAaD,OAAvB,KAAmC,CAAnD;AACA,gBAAMS,cAAc,EAApB;AACA,gBAAIC,OAAO,CAAX;AACA,gBAAIC,iBAAJ;;AAEA,gBAAMC,UAAU,SAAVA,OAAU,CAACpB,UAAD,EAAgB;AAC5B,oBAAI,CAACD,gBAAgBC,UAAhB,CAAD,IAAgCO,MAAMK,UAAtC,IAAoD,CAAC,CAACO,QAA1D,EAAoE;AAChE;AACH;;AAEDZ,sBAAMK,UAAN,GAAmB,IAAnB;;AAEAO,2BAAWE,YAAY,YAAM;AACzB,wBAAIhB,KAAKiB,YAAL,GAAoBpB,QAAQqB,WAA5B,GAA0CrB,QAAQsB,OAAlD,GAA4DpB,MAAhE,EAAwE;AACpE,4BAAIc,QAAQJ,OAAZ,EAAqB;AACjB;AACH;;AAEDI;;AAEA,4BAAIA,QAAQD,WAAZ,EAAyB;AACrB;AACH;;AAEDA,oCAAYQ,IAAZ,CAAiBP,IAAjB;AACAX,8BAAMG,QAAN,GAAiBQ,IAAjB;AACH,qBAbD,MAaO;AACHX,8BAAMK,UAAN,GAAmB,KAAnB;;AAEA,4BAAIO,QAAJ,EAAc;AACVO,0CAAcP,QAAd;AACAA,uCAAW,IAAX;AACH;AACJ;AACJ,iBAtBU,EAsBR,GAtBQ,CAAX;AAuBH,aA9BD;;AAgCA;AACA;AACA;AACAC;;AAEAlB,oBAAQyB,gBAAR,CAAyB,OAAzB,EAAkCP,OAAlC;AACAb,kBAAMqB,GAAN,CAAU,UAAV,EAAsB,YAAM;AACxB1B,wBAAQ2B,mBAAR,CAA4B,OAA5B,EAAqCT,OAArC;;AAEA,oBAAID,QAAJ,EAAc;AACVO,kCAAcP,QAAd;AACH;AACJ,aAND;AAOH;AA7DE,KAAP;AA+DH;;AAEDrB,6BAA6BgC,OAA7B,GAAuC,CAAC,SAAD,EAAY,WAAZ,CAAvC","file":"maDatagridInfinitePagination.js","sourcesContent":["import angular from 'angular';\n\nconst isScrollingDown = wheelEvent => {\n    if (!wheelEvent) return true;\n\n    return wheelEvent.deltaY > 0;\n};\n\nexport default function maDatagridInfinitePagination($window, $document) {\n    const offset = 100;\n    const body = $document[0].body;\n\n    return {\n        restrict: 'E',\n        scope: {\n            perPage: '@',\n            totalItems: '@',\n            nextPage: '&'\n        },\n        link(scope) {\n            scope.processing = false;\n            const perPage = parseInt(scope.perPage, 10) || 1;\n            const totalItems = parseInt(scope.totalItems, 10);\n            const nbPages = Math.ceil(totalItems / perPage) || 1;\n            const loadedPages = [];\n            let page = 1;\n            let interval;\n\n            const handler = (wheelEvent) => {\n                if (!isScrollingDown(wheelEvent) || scope.processing || !!interval) {\n                    return;\n                }\n\n                scope.processing = true;\n\n                interval = setInterval(() => {\n                    if (body.offsetHeight - $window.innerHeight - $window.scrollY < offset) {\n                        if (page >= nbPages) {\n                            return;\n                        }\n\n                        page++;\n\n                        if (page in loadedPages) {\n                            return;\n                        }\n\n                        loadedPages.push(page);\n                        scope.nextPage()(page);\n                    } else {\n                        scope.processing = false;\n\n                        if (interval) {\n                            clearInterval(interval);\n                            interval = null;\n                        }\n                    }\n                }, 100);\n            };\n\n            // Trigger the scroll at least once\n            // This way, it loads at least one screen of data to enable further scrolling\n            // @see https://github.com/marmelab/ng-admin/issues/681\n            handler();\n\n            $window.addEventListener('wheel', handler);\n            scope.$on('$destroy', () => {\n                $window.removeEventListener('wheel', handler);\n\n                if (interval) {\n                    clearInterval(interval);\n                }\n            });\n        }\n    };\n}\n\nmaDatagridInfinitePagination.$inject = ['$window', '$document'];\n"]}