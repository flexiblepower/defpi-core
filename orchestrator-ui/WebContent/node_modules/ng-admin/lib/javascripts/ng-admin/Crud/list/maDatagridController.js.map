{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/list/maDatagridController.js"],"names":["DatagridController","$scope","$location","$stateParams","$anchorScroll","entity","datastore","filters","shouldDisplayActions","listActions","length","getEntryCssClasses","bind","toggleSelect","toggleSelectAll","sortField","sortDir","sortCallback","sort","field","getSortName","index","dir","fieldName","search","name","entry","entryCssClasses","values","selection","slice","indexOf","concat","splice","entries","$inject"],"mappings":"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","file":"maDatagridController.js","sourcesContent":["export default class DatagridController {\n    constructor($scope, $location, $stateParams, $anchorScroll) {\n        $scope.entity = $scope.entity();\n        this.$scope = $scope;\n        this.$location = $location;\n        this.$anchorScroll = $anchorScroll;\n        this.datastore = this.$scope.datastore();\n        this.filters = {};\n        this.shouldDisplayActions = this.$scope.listActions() && this.$scope.listActions().length > 0;\n        $scope.getEntryCssClasses = this.getEntryCssClasses.bind(this);\n        $scope.toggleSelect = this.toggleSelect.bind(this);\n        $scope.toggleSelectAll = this.toggleSelectAll.bind(this);\n        this.sortField = $scope.sortField();\n        this.sortDir = $scope.sortDir();\n        this.sortCallback = $scope.sort() ? $scope.sort() : this.sort.bind(this);\n    }\n\n    /**\n     * Return true if a column is being sorted\n     *\n     * @param {Field} field\n     *\n     * @returns {Boolean}\n     */\n    isSorting(field) {\n        return this.$scope.sortField() === this.getSortName(field);\n    }\n\n    /**\n     * Return 'even'|'odd' based on the index parameter\n     *\n     * @param {Number} index\n     * @returns {string}\n     */\n    itemClass(index) {\n        return (index % 2 === 0) ? 'even' : 'odd';\n    }\n\n    /**\n     *\n     * @param {Field} field\n     */\n    sort(field) {\n        var dir = 'ASC',\n            fieldName = this.getSortName(field);\n\n        if (this.sortField === fieldName) {\n            dir = this.sortDir === 'ASC' ? 'DESC' : 'ASC';\n        }\n\n        this.$location.search('sortField', fieldName);\n        this.$location.search('sortDir', dir);\n    }\n\n    /**\n     * Return fieldName like (view.fieldName) to sort\n     *\n     * @param {Field} field\n     *\n     * @returns {String}\n     */\n    getSortName(field) {\n        return this.$scope.name ? this.$scope.name + '.' + field.name() : field.name();\n    }\n\n    getEntryCssClasses(entry) {\n        var entryCssClasses = this.$scope.entryCssClasses;\n        if (typeof entryCssClasses !== 'function') {\n            return;\n        }\n        var getEntryCssClasses = entryCssClasses();\n        if (typeof getEntryCssClasses !== 'function') {\n            return;\n        }\n        return getEntryCssClasses(entry.values);\n    }\n\n    toggleSelect(entry) {\n        var selection = this.$scope.selection.slice();\n\n        var index = selection.indexOf(entry);\n\n        if (index === -1) {\n            this.$scope.selection = selection.concat(entry);\n            return;\n        }\n        selection.splice(index, 1);\n        this.$scope.selection = selection;\n    }\n\n    toggleSelectAll() {\n\n        if (this.$scope.selection.length < this.$scope.entries.length) {\n            this.$scope.selection = this.$scope.entries;\n            return;\n        }\n\n        this.$scope.selection = [];\n    }\n}\n\nDatagridController.$inject = ['$scope', '$location', '$stateParams', '$anchorScroll'];\n"]}