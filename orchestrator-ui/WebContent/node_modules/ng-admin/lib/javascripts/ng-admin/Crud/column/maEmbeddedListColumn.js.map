{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/column/maEmbeddedListColumn.js"],"names":["maEmbeddedListColumn","sorter","sortField","sortDir","entry1","entry2","sortFactor","values","NgAdminConfiguration","application","scope","restrict","link","pre","field","targetEntity","targetEntityName","name","targetFields","filterFunc","permanentFilters","filters","filterKeys","Object","keys","entry","reduce","isFiltered","key","entries","createArrayFromRest","value","identifier","sort","filter","index","map","e","_identifierValue","entity","getEntity","template","$inject"],"mappings":"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","file":"maEmbeddedListColumn.js","sourcesContent":["import Entry from 'admin-config/lib/Entry';\n\nfunction sorter(sortField, sortDir) {\n    return (entry1, entry2) => {\n        // use < and > instead of substraction to sort strings properly\n        const sortFactor = sortDir === 'DESC' ? -1 : 1;\n        if (entry1.values[sortField] > entry2.values[sortField]) {\n            return sortFactor;\n        }\n        if (entry1.values[sortField] < entry2.values[sortField]) {\n            return -1 * sortFactor;\n        }\n        return 0;\n    };\n}\n\nexport default function maEmbeddedListColumn(NgAdminConfiguration) {\n    const application = NgAdminConfiguration(); // jshint ignore:line\n    return {\n        scope: {\n            'field': '&',\n            'value': '&',\n            'datastore': '&'\n        },\n        restrict: 'E',\n        link: {\n            pre: function(scope) {\n                const field = scope.field();\n                const targetEntity = field.targetEntity();\n                const targetEntityName = targetEntity.name();\n                const targetFields = field.targetFields();\n                const sortField = field.sortField();\n                const sortDir = field.sortDir();\n                var filterFunc;\n                if (field.permanentFilters()) {\n                    const filters = field.permanentFilters();\n                    const filterKeys = Object.keys(filters);\n                    filterFunc = (entry) => filterKeys.reduce((isFiltered, key) => isFiltered && entry.values[key] === filters[key], true);\n                } else {\n                    filterFunc = () => true;\n                }\n                let entries = Entry\n                    .createArrayFromRest(scope.value() || [], targetFields, targetEntityName, targetEntity.identifier().name())\n                    .sort(sorter(sortField, sortDir))\n                    .filter(filterFunc);\n                if (!targetEntityName) {\n                    let index = 0;\n                    entries = entries.map(e => {\n                        e._identifierValue = index++;\n                        return e;\n                    });\n                }\n                scope.field = field;\n                scope.targetFields = targetFields;\n                scope.entries = entries;\n                scope.entity = targetEntityName ? application.getEntity(targetEntityName) : targetEntity;\n                scope.sortField = sortField;\n                scope.sortDir = sortDir;\n                scope.sort = field => {\n                    let sortDir = 'ASC';\n                    const sortField = field.name();\n                    if (scope.sortField === sortField) {\n                        // inverse sort dir\n                        sortDir = scope.sortDir === 'ASC' ? 'DESC' : 'ASC';\n                    }\n                    scope.entries = scope.entries.sort(sorter(sortField, sortDir));\n                    scope.sortField = sortField;\n                    scope.sortDir = sortDir;\n                };\n            }\n        },\n        template: `\n<ma-datagrid ng-if=\"::entries.length > 0\"\n    entries=\"entries\"\n    fields=\"::targetFields\"\n    list-actions=\"::field.listActions()\"\n    entity=\"::entity\"\n    datastore=\"::datastore()\"\n    sort-field=\"sortField\"\n    sort-dir=\"sortDir\"\n    sort=\"::sort\">\n</ma-datagrid>`\n    };\n}\n\nmaEmbeddedListColumn.$inject = ['NgAdminConfiguration'];\n"]}