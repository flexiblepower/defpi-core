{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/field/maJsonField.js"],"names":["maJsonField","codemirror","require","global","jsonlint","defineOption","CodeMirror","scope","restrict","link","element","field","name","v","validation","jsonValue","value","angular","toJson","input","children","attributes","setAttribute","$watch","fromJson","e","template","$inject"],"mappings":";;;;;kBA2BwBA,W;AA3BxB,IAAIC,aAAaC,QAAQ,YAAR,CAAjB;;AAEAC,OAAOC,QAAP,GAAkBF,QAAQ,0BAAR,CAAlB;;AAEAA,QAAQ,qCAAR;AACAA,QAAQ,qCAAR;AACAA,QAAQ,4BAAR;AACAA,QAAQ,iCAAR;AACAA,QAAQ,wCAAR;AACAA,QAAQ,uCAAR;;AAEAD,WAAWI,YAAX,CAAwB,eAAxB,EAAyC,IAAzC;AACAJ,WAAWI,YAAX,CAAwB,mBAAxB,EAA6C,IAA7C;AACAJ,WAAWI,YAAX,CAAwB,cAAxB,EAAwC,IAAxC;AACAJ,WAAWI,YAAX,CAAwB,SAAxB,EAAmC,CAAnC;AACAJ,WAAWI,YAAX,CAAwB,MAAxB,EAAgC,kBAAhC;AACAJ,WAAWI,YAAX,CAAwB,SAAxB,EAAmC,CAAC,yBAAD,CAAnC;AACAJ,WAAWI,YAAX,CAAwB,MAAxB,EAAgC,IAAhC;AACAJ,WAAWI,YAAX,CAAwB,iBAAxB,EAA2C,IAA3C;;AAEAF,OAAOG,UAAP,GAAoBL,UAApB;;AAEA;;;;;AAKe,SAASD,WAAT,GAAuB;AAClC,WAAO;AACHO,eAAO;AACH,qBAAS,GADN;AAEH,qBAAS;AAFN,SADJ;AAKHC,kBAAU,GALP;AAMHC,cAAM,cAASF,KAAT,EAAgBG,OAAhB,EAAyB;AAC3B,gBAAIC,QAAQJ,MAAMI,KAAN,EAAZ;AACAJ,kBAAMK,IAAN,GAAaD,MAAMC,IAAN,EAAb;AACAL,kBAAMM,CAAN,GAAUF,MAAMG,UAAN,EAAV;AACAP,kBAAMQ,SAAN,GAAkBR,MAAMS,KAAN,KAAgB,IAAhB,GAAuB,EAAvB,GAA4BC,QAAQC,MAAR,CAAeX,MAAMS,KAArB,EAA4B,IAA5B,CAA9C;AACA,gBAAIG,QAAQT,QAAQU,QAAR,GAAmB,CAAnB,CAAZ;AACA,gBAAIC,aAAaV,MAAMU,UAAN,EAAjB;AACA,iBAAK,IAAIT,IAAT,IAAiBS,UAAjB,EAA6B;AACzBF,sBAAMG,YAAN,CAAmBV,IAAnB,EAAyBS,WAAWT,IAAX,CAAzB;AACH;AACDL,kBAAMgB,MAAN,CAAa,WAAb,EAA0B,UAASR,SAAT,EAAoB;AAC1C,oBAAIA,aAAa,EAAb,IAAmB,OAAOA,SAAP,KAAqB,WAA5C,EAAyD;AACrDR,0BAAMS,KAAN,GAAc,IAAd;;AAEA;AACH;AACD,oBAAI;AACA,wBAAIA,QAAQC,QAAQO,QAAR,CAAiBT,SAAjB,CAAZ;AACAR,0BAAMS,KAAN,GAAcA,KAAd;AACH,iBAHD,CAGE,OAAOS,CAAP,EAAU;AACR;AACH;AACJ,aAZD;AAaH,SA7BE;AA8BHC,kBACR,+HACA;AAhCW,KAAP;AAkCH;;AAED1B,YAAY2B,OAAZ,GAAsB,EAAtB","file":"maJsonField.js","sourcesContent":["var codemirror = require('codemirror');\n\nglobal.jsonlint = require('jsonlint/web/jsonlint.js');\n\nrequire('codemirror/addon/edit/closebrackets');\nrequire('codemirror/addon/edit/matchbrackets');\nrequire('codemirror/addon/lint/lint');\nrequire('codemirror/addon/lint/json-lint');\nrequire('codemirror/addon/selection/active-line');\nrequire('codemirror/mode/javascript/javascript');\n\ncodemirror.defineOption(\"matchBrackets\", true);\ncodemirror.defineOption(\"autoCloseBrackets\", true);\ncodemirror.defineOption(\"lineWrapping\", true);\ncodemirror.defineOption(\"tabSize\", 2);\ncodemirror.defineOption(\"mode\", \"application/json\");\ncodemirror.defineOption(\"gutters\", [\"CodeMirror-lint-markers\"]);\ncodemirror.defineOption(\"lint\", true);\ncodemirror.defineOption(\"styleActiveLine\", true);\n\nglobal.CodeMirror = codemirror;\n\n/**\n * Edition field for a JSON string in a textarea.\n *\n * @example <ma-json-field field=\"field\" value=\"value\"></ma-json-field>\n */\nexport default function maJsonField() {\n    return {\n        scope: {\n            'field': '&',\n            'value': '='\n        },\n        restrict: 'E',\n        link: function(scope, element) {\n            var field = scope.field();\n            scope.name = field.name();\n            scope.v = field.validation();\n            scope.jsonValue = scope.value === null ? '' : angular.toJson(scope.value, true);\n            var input = element.children()[0];\n            var attributes = field.attributes();\n            for (var name in attributes) {\n                input.setAttribute(name, attributes[name]);\n            }\n            scope.$watch('jsonValue', function(jsonValue) {\n                if (jsonValue == '' || typeof jsonValue === 'undefined') {\n                    scope.value = null;\n\n                    return;\n                }\n                try {\n                    var value = angular.fromJson(jsonValue);\n                    scope.value = value;\n                } catch (e) {\n                    // incorrect JSON, do not convert back to value\n                }\n            });\n        },\n        template:\n'<textarea ui-codemirror ng-model=\"jsonValue\" id=\"{{ name }}\" name=\"{{ name }}\" ng-required=\"v.required\" ma-json-validator>' +\n'</textarea>'\n    };\n}\n\nmaJsonField.$inject = [];\n"]}