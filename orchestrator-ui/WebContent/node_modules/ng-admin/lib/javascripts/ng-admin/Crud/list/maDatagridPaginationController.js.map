{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/list/maDatagridPaginationController.js"],"names":["DatagridPaginationController","$scope","perPage","parseInt","totalItems","page","Math","max","nbPages","ceil","min","offsetEnd","offsetBegin","displayPagination","$on","destroy","bind","input","push","number","setPage","undefined","$inject"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,4B;AACjB,0CAAYC,MAAZ,EAAoB;AAAA;;AAChB,aAAKA,MAAL,GAAcA,MAAd;AACA,YAAIC,UAAUC,SAAS,KAAKF,MAAL,CAAYC,OAArB,EAA8B,EAA9B,KAAqC,CAAnD;AAAA,YACIE,aAAaD,SAAS,KAAKF,MAAL,CAAYG,UAArB,EAAiC,EAAjC,CADjB;AAAA,YAEIC,OAAOC,KAAKC,GAAL,CAASJ,SAAS,KAAKF,MAAL,CAAYI,IAArB,EAA2B,EAA3B,CAAT,EAAyC,CAAzC,CAFX;;AAIA,aAAKG,OAAL,GAAeF,KAAKG,IAAL,CAAUL,aAAaF,OAAvB,KAAmC,CAAlD;AACA,aAAKG,IAAL,GAAYC,KAAKI,GAAL,CAAS,KAAKF,OAAd,EAAuBH,IAAvB,CAAZ;AACA,aAAKM,SAAL,GAAiBL,KAAKI,GAAL,CAAS,KAAKL,IAAL,GAAYH,OAArB,EAA8BE,UAA9B,CAAjB;AACA,aAAKQ,WAAL,GAAmBN,KAAKI,GAAL,CAAS,CAAC,KAAKL,IAAL,GAAY,CAAb,IAAkBH,OAAlB,GAA4B,CAArC,EAAwC,KAAKS,SAA7C,CAAnB;AACA,aAAKP,UAAL,GAAkBA,UAAlB;AACA,aAAKS,iBAAL,GAAyBX,UAAUE,UAAnC;;AAEAH,eAAOa,GAAP,CAAW,UAAX,EAAuB,KAAKC,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAvB;AACH;;AAED;;;;;;;;;;;8BAOMX,I,EAAM;AACR,gBAAIY,QAAQ,EAAZ;AAAA,gBACIT,UAAU,KAAKA,OADnB;;AAGA;AACA,gBAAIH,OAAO,CAAX,EAAc;AACVY,sBAAMC,IAAN,CAAW,GAAX;AACH;AACD,gBAAIb,QAAQ,CAAZ,EAAe;AACXY,sBAAMC,IAAN,CAAW,GAAX;AACH;AACD,gBAAIb,OAAO,CAAX,EAAc;AACVY,sBAAMC,IAAN,CAAW,GAAX;AACH;AACD,gBAAIb,OAAO,CAAX,EAAc;AACVY,sBAAMC,IAAN,CAAWb,OAAO,CAAlB;AACH;AACDY,kBAAMC,IAAN,CAAWb,IAAX;AACA,gBAAIA,OAAOG,OAAX,EAAoB;AAChBS,sBAAMC,IAAN,CAAWb,OAAO,CAAlB;AACH;AACD,gBAAIA,QAASG,UAAU,CAAvB,EAA2B;AACvBS,sBAAMC,IAAN,CAAWV,UAAU,CAArB;AACH;AACD,gBAAIH,OAAQG,UAAU,CAAtB,EAA0B;AACtBS,sBAAMC,IAAN,CAAW,GAAX;AACH;AACD,gBAAIb,OAAQG,UAAU,CAAtB,EAA0B;AACtBS,sBAAMC,IAAN,CAAWV,OAAX;AACH;;AAED,mBAAOS,KAAP;AACH;;AAED;;;;;;;;gCAKQE,M,EAAQ;AACZ,gBAAIA,UAAU,CAAV,IAAeA,SAAS,KAAKX,OAAjC,EAA0C;AACtC;AACH;AACD,iBAAKP,MAAL,CAAYmB,OAAZ,GAAsBD,MAAtB;AACH;;;kCAES;AACN,iBAAKlB,MAAL,GAAcoB,SAAd;AACH;;;;;;kBAxEgBrB,4B;;;AA2ErBA,6BAA6BsB,OAA7B,GAAuC,CAAC,QAAD,CAAvC","file":"maDatagridPaginationController.js","sourcesContent":["import angular from 'angular';\n\nexport default class DatagridPaginationController {\n    constructor($scope) {\n        this.$scope = $scope;\n        var perPage = parseInt(this.$scope.perPage, 10) || 1,\n            totalItems = parseInt(this.$scope.totalItems, 10),\n            page = Math.max(parseInt(this.$scope.page, 10), 1);\n\n        this.nbPages = Math.ceil(totalItems / perPage) || 1;\n        this.page = Math.min(this.nbPages, page);\n        this.offsetEnd = Math.min(this.page * perPage, totalItems);\n        this.offsetBegin = Math.min((this.page - 1) * perPage + 1, this.offsetEnd);\n        this.totalItems = totalItems;\n        this.displayPagination = perPage < totalItems;\n\n        $scope.$on('$destroy', this.destroy.bind(this));\n    }\n\n    /**\n     * Return an array with the range between min & max, useful for pagination\n     *\n     * @param {int} min\n     * @param {int} max\n     * @returns {Array}\n     */\n    range(page) {\n        var input = [],\n            nbPages = this.nbPages;\n\n        // display page links around the current page\n        if (page > 2) {\n            input.push('1');\n        }\n        if (page == 4) {\n            input.push('2');\n        }\n        if (page > 4) {\n            input.push('.');\n        }\n        if (page > 1) {\n            input.push(page - 1);\n        }\n        input.push(page);\n        if (page < nbPages) {\n            input.push(page + 1);\n        }\n        if (page == (nbPages - 3)) {\n            input.push(nbPages - 1);\n        }\n        if (page < (nbPages - 3)) {\n            input.push('.');\n        }\n        if (page < (nbPages - 1)) {\n            input.push(nbPages);\n        }\n\n        return input;\n    }\n\n    /**\n     * Link to page number of the list\n     *\n     * @param {int} number\n     */\n    setPage(number) {\n        if (number <= 0 || number > this.nbPages) {\n            return;\n        }\n        this.$scope.setPage()(number);\n    }\n\n    destroy() {\n        this.$scope = undefined;\n    }\n}\n\nDatagridPaginationController.$inject = ['$scope'];\n"]}