{"version":3,"sources":["../../src/Field/ReferenceField.js"],"names":[],"mappings":"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","file":"ReferenceField.js","sourcesContent":["import Field from \"./Field\";\n\nclass ReferenceField extends Field {\n    constructor(name) {\n        super(name);\n        this._type = 'reference';\n        this._targetEntity = null;\n        this._targetField = null;\n        this._perPage = 30;\n        this._permanentFilters = null;\n        this._sortField = null;\n        this._sortDir = null;\n        this._singleApiCall = false;\n        this._detailLink = true;\n        this._remoteComplete = false;\n        this._remoteCompleteOptions= {\n            refreshDelay: 500\n        };\n    }\n\n    perPage(perPage) {\n        if (!arguments.length) return this._perPage;\n        this._perPage = perPage;\n        return this;\n    }\n\n    datagridName() {\n        return this._targetEntity.name() + '_ListView';\n    }\n\n    targetEntity(entity) {\n        if (!arguments.length) {\n            return this._targetEntity;\n        }\n        this._targetEntity = entity;\n\n        return this;\n    }\n\n    targetField(field) {\n        if (!arguments.length) return this._targetField;\n        this._targetField = field;\n\n        return this;\n    }\n\n    /**\n     * Define permanent filters to be added to the REST API calls\n     *\n     *     nga.field('post_id', 'reference').permanentFilters({\n     *        published: true\n     *     });\n     *     // related API call will be /posts/:id?published=true\n     *\n     * @param {Object} filters list of filters to apply to the call\n     */\n    permanentFilters(filters) {\n        if (!arguments.length) {\n            return this._permanentFilters;\n        }\n\n        this._permanentFilters = filters;\n\n        return this;\n    }\n\n    /**\n     * @deprecated use permanentFilters() instead\n     */\n    filters(filters) {\n        console.warn('ReferenceField.filters() is deprecated, please use ReferenceField.permanentFilters() instead');\n        return this.permanentFilters(filters);\n    }\n\n    sortField() {\n        if (arguments.length) {\n            this._sortField = arguments[0];\n            return this;\n        }\n\n        return this._sortField;\n    }\n\n    sortDir() {\n        if (arguments.length) {\n            this._sortDir = arguments[0];\n            return this;\n        }\n\n        return this._sortDir;\n    }\n\n    singleApiCall(singleApiCall) {\n        if (!arguments.length) return this._singleApiCall;\n        this._singleApiCall = singleApiCall;\n        return this;\n    }\n\n    hasSingleApiCall() {\n        return typeof this._singleApiCall === 'function';\n    }\n\n    getSingleApiCall(identifiers) {\n        return this.hasSingleApiCall() ? this._singleApiCall(identifiers) : this._singleApiCall;\n    }\n\n    getIdentifierValues(rawValues) {\n        let results = {};\n        let identifierName = this._name;\n        for (let i = 0, l = rawValues.length ; i < l ; i++) {\n            let identifier = rawValues[i][identifierName];\n            if (identifier == null) {\n                continue;\n            }\n\n            if (identifier instanceof Array) {\n                for (let j in identifier) {\n                    results[identifier[j]] = true;\n                }\n                continue;\n            }\n\n            results[identifier] = true;\n        }\n\n        return Object.keys(results);\n    }\n\n    getSortFieldName() {\n        if (!this.sortField()) {\n            return null;\n        }\n\n        return this._targetEntity.name() + '_ListView.' + this.sortField();\n    }\n\n    /**\n     * Enable autocompletion using REST API for choices.\n     *\n     * Available options are:\n     *\n     * * `refreshDelay`: minimal delay between two API calls in milliseconds. By default: 500.\n     * * `searchQuery`: a function returning the parameters to add to the query string basd on the input string.\n     *\n     *       new ReferenceField('authors')\n     *           .targetEntity(author)\n     *           .targetField(new Field('name'))\n     *           .remoteComplete(true, {\n     *               refreshDelay: 300,\n     *               // populate choices from the response of GET /tags?q=XXX\n     *               searchQuery: function(search) { return { q: search }; }\n     *           })\n     *           .perPage(10) // limit the number of results to 10\n     *\n     * @param {Boolean} remoteComplete true to enable remote complete. False by default\n     * @param {Object} options Remote completion options (optional)\n     */\n    remoteComplete(remoteComplete, options) {\n        if (!arguments.length) return this._remoteComplete;\n        this._remoteComplete = remoteComplete;\n        if (options) {\n            this.remoteCompleteOptions(options);\n        }\n        return this;\n    }\n\n    remoteCompleteOptions(options) {\n        if (!arguments.length) return this._remoteCompleteOptions;\n        this._remoteCompleteOptions = options;\n        return this;\n    }\n}\n\nexport default ReferenceField;\n"]}