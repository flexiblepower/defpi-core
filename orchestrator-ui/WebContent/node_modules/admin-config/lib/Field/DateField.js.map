{"version":3,"sources":["../../src/Field/DateField.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;sBAAkB,SAAS;;;;IAErB,SAAS;AACA,aADT,SAAS,CACC,IAAI,EAAE;8BADhB,SAAS;;AAEP,mCAFF,SAAS,6CAED,IAAI,EAAE;;AAEZ,YAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,YAAI,CAAC,MAAM,GAAG,UAAS,IAAI,EAAE;AACzB,gBAAI,IAAI,YAAY,IAAI,EAAE;;;;AAItB,oBAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;;AAE9D,oBAAI,UAAU,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAC/B,uBAAO,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAC,EAAE,CAAC,GAAG,IAAI,CAAC;aACtD;AACD,mBAAO,IAAI,CAAC;SACf,CAAC;AACF,YAAI,CAAC,KAAK,GAAG,MAAM,CAAC;KACvB;;cAlBC,SAAS;;iBAAT,SAAS;;eAoBL,gBAAC,KAAK,EAAE;AACV,gBAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC;AAC3C,gBAAI,CAAC,OAAO,GAAG,KAAK,CAAC;AACrB,mBAAO,IAAI,CAAC;SACf;;;eAEI,eAAC,KAAK,EAAE;AACT,gBAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC;AAC1C,gBAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACpB,mBAAO,IAAI,CAAC;SACf;;;WA9BC,SAAS;;;qBAiCA,SAAS","file":"DateField.js","sourcesContent":["import Field from \"./Field\";\n\nclass DateField extends Field {\n    constructor(name) {\n        super(name);\n        \n        this._format = null;\n        this._parse = function(date) {\n            if (date instanceof Date) {\n                // the datepicker returns a JS Date object, with hours, minutes and timezone\n                // in order to convert it back to date, we must remove the timezone, then\n                // remove hours and minutes\n                date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n\n                let dateString = date.toJSON();\n                return dateString ? dateString.substr(0,10) : null;\n            }\n            return date;\n        };\n        this._type = \"date\";\n    }\n\n    format(value) {\n        if (!arguments.length) return this._format;\n        this._format = value;\n        return this;\n    }\n\n    parse(value) {\n        if (!arguments.length) return this._parse;\n        this._parse = value;\n        return this;\n    }\n}\n\nexport default DateField;\n"]}