{"version":3,"sources":["../src/Factory.js"],"names":[],"mappings":"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","file":"Factory.js","sourcesContent":["import Application from \"./Application\";\nimport Entity from \"./Entity/Entity\";\nimport DataStore from \"./DataStore/DataStore\";\nimport PromisesResolver from \"./Utils/PromisesResolver\";\n\nimport ReadQueries from \"./Queries/ReadQueries\";\nimport WriteQueries from \"./Queries/WriteQueries\";\n\nimport Field from \"./Field/Field\";\nimport BooleanField from \"./Field/BooleanField\";\nimport ChoiceField from \"./Field/ChoiceField\";\nimport ChoicesField from \"./Field/ChoicesField\";\nimport DateField from \"./Field/DateField\";\nimport DateTimeField from \"./Field/DateTimeField\";\nimport EmailField from \"./Field/EmailField\";\nimport EmbeddedListField from \"./Field/EmbeddedListField\";\nimport FloatField from \"./Field/FloatField.js\";\nimport FileField from \"./Field/FileField\";\nimport JsonField from \"./Field/JsonField\";\nimport NumberField from \"./Field/NumberField\";\nimport PasswordField from \"./Field/PasswordField\";\nimport ReferenceField from \"./Field/ReferenceField\";\nimport ReferencedListField from \"./Field/ReferencedListField\";\nimport ReferenceManyField from \"./Field/ReferenceManyField\";\nimport TemplateField from \"./Field/TemplateField\";\nimport TextField from \"./Field/TextField\";\nimport WysiwygField from \"./Field/WysiwygField\";\n\nimport Menu from './Menu/Menu';\nimport Collection from './Collection';\nimport Dashboard from './Dashboard';\nimport Entry from './Entry';\n\nclass Factory {\n    constructor() {\n        this._fieldTypes = [];\n        this._init();\n    }\n\n    application(name, debug) {\n        return new Application(name, debug);\n    }\n\n    entity(name) {\n        return new Entity(name);\n    }\n\n    field(name, type) {\n        type = type || 'string';\n\n        if (!(type in this._fieldTypes)) {\n            throw new Error(`Unknown field type \"${type}\".`);\n        }\n\n        return new this._fieldTypes[type](name);\n    }\n\n    registerFieldType(name, constructor) {\n        this._fieldTypes[name] = constructor;\n    }\n\n    getFieldConstructor(name) {\n        return this._fieldTypes[name];\n    }\n\n    menu(entity) {\n        let menu = new Menu();\n        if (entity) {\n            menu.populateFromEntity(entity);\n        }\n        return menu;\n    }\n\n    dashboard() {\n        return new Dashboard();\n    }\n\n    collection(entity) {\n        let collection = new Collection();\n        if (entity) {\n            collection.setEntity(entity);\n        }\n        return collection;\n    }\n\n    getEntryConstructor() {\n        return Entry;\n    }\n\n    getDataStore() {\n        return new DataStore();\n    }\n\n    getReadQueries(RestWrapper, PromisesResolver, Application) {\n        return new ReadQueries(RestWrapper, PromisesResolver, Application);\n    }\n\n    getWriteQueries(RestWrapper, PromisesResolver, Application) {\n        return new WriteQueries(RestWrapper, PromisesResolver, Application);\n    }\n\n    getPromisesResolver() {\n        return PromisesResolver;\n    }\n\n    _init() {\n        this.registerFieldType('boolean', BooleanField);\n        this.registerFieldType('choice', ChoiceField);\n        this.registerFieldType('choices', ChoicesField);\n        this.registerFieldType('date', DateField);\n        this.registerFieldType('datetime', DateTimeField);\n        this.registerFieldType('email', EmailField);\n        this.registerFieldType('embedded_list', EmbeddedListField);\n        this.registerFieldType('float', FloatField);\n        this.registerFieldType('string', Field);\n        this.registerFieldType('file', FileField);\n        this.registerFieldType('json', JsonField);\n        this.registerFieldType('number', NumberField);\n        this.registerFieldType('password', PasswordField);\n        this.registerFieldType('reference', ReferenceField);\n        this.registerFieldType('reference_many', ReferenceManyField);\n        this.registerFieldType('referenced_list', ReferencedListField);\n        this.registerFieldType('template', TemplateField);\n        this.registerFieldType('text', TextField);\n        this.registerFieldType('wysiwyg', WysiwygField);\n    }\n}\n\nexport default Factory;\n"]}