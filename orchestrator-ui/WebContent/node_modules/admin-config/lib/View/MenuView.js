'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _View2 = require('./View');

var _View3 = _interopRequireDefault(_View2);

var MenuView = (function (_View) {
    function MenuView(name) {
        _classCallCheck(this, MenuView);

        _get(Object.getPrototypeOf(MenuView.prototype), 'constructor', this).call(this, name);
        this._type = 'MenuView';
        this._icon = null;
    }

    _inherits(MenuView, _View);

    _createClass(MenuView, [{
        key: 'icon',
        value: function icon() {
            if (arguments.length) {
                console.warn('entity.menuView() is deprecated. Please use the Menu class instead');
                this._icon = arguments[0];
                return this;
            }

            if (this._icon === null) {
                return '<span class="glyphicon glyphicon-list"></span>';
            }

            return this._icon;
        }
    }, {
        key: 'enabled',
        get: function () {
            return this._enabled === null ? this.entity._views['ListView'].enabled : this._enabled;
        }
    }]);

    return MenuView;
})(_View3['default']);

exports['default'] = MenuView;
module.exports = exports['default'];
//# sourceMappingURL=MenuView.js.map