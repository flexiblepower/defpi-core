package org.flexiblepower.defpi.dashboard.observation_publisher;

import javax.annotation.Generated;

import org.flexiblepower.defpi.dashboard.Dashboard;
import org.flexiblepower.defpi.dashboard.observation_publisher._1.ObservationPublisher_1ConnectionHandler;
import org.flexiblepower.defpi.dashboard.observation_publisher._1.ObservationPublisher_1ConnectionHandlerImpl;
import org.flexiblepower.service.Connection;

/**
 * Implementation of the connection manager for the ObservationPublisherConnectionManager interface.
 * Creates connection handlers for the supported versions of the interface.
 *
 * File generated by org.flexiblepower.create-service-maven-plugin. 
 * NOTE: This file is generated as a stub, and has to be implemented by the user. Re-running the codegen plugin will
 * 		 not change the contents of this file.
 * Template by FAN, 2017
 * 
 * @author nutmajs
 */
@Generated(value = "org.flexiblepower.plugin.servicegen", date = "Feb 13, 2018 2:37:47 PM")
public class ObservationPublisherConnectionManagerImpl implements ObservationPublisherConnectionManager {
    /**
     * Instance of the Dashboard belonging to this connection manager.
     */
	private final Dashboard service;
	
	/**
	 * Auto-generated constructor building the factory for ConnectionHandlers of the provided service
	 *
	 * @param service The service that will be used as argument to instantiate the ConnectionHandlers
	 */
	public ObservationPublisherConnectionManagerImpl(Dashboard service) {
		this.service = service;
	}

	@Override
	public ObservationPublisher_1ConnectionHandler build1(Connection connection) {
		return new ObservationPublisher_1ConnectionHandlerImpl(connection, this.service);
	}

}

