package org.flexiblepower.defpi.dashboard;

import java.io.Serializable;

import javax.annotation.Generated;

import org.flexiblepower.service.DefPiParameters;
import org.flexiblepower.service.Service;

/**
 * Dashboard provides an implementation of the Dashboard service
 *
 * File generated by org.flexiblepower.create-service-maven-plugin. NOTE: This
 * file is generated as a stub, and has to be implemented by the user.
 * Re-running the codegen plugin will not change the contents of this file.
 * Template by TNO, 2017
 * 
 * @author wilco
 */
@Generated(value = "org.flexiblepower.plugin.servicegen", date = "Oct 26, 2017 12:58:33 PM")
public class Dashboard implements Service<DashboardConfiguration> {

	private HttpRouter requestRouter;
	private FullWidgetManager fullWidgetManager = new FullWidgetManager();
	private DashboardFullWidget dashboardFullWidget;

	@Override
	public void resumeFrom(Serializable state) {
		// TODO Auto-generated method stub

	}

	@Override
	public void init(DashboardConfiguration config, DefPiParameters parameters) {
		requestRouter = new HttpRouter(fullWidgetManager);
		dashboardFullWidget = new DashboardFullWidget();
		fullWidgetManager.registerFullWidget(dashboardFullWidget);
	}

	@Override
	public void modify(DashboardConfiguration config) {
		// TODO Auto-generated method stub
	}

	@Override
	public Serializable suspend() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void terminate() {
		// TODO Auto-generated method stub
	}

	public void registerWidget(Widget widget) {
		switch (widget.getType()) {
		case FULL:
			fullWidgetManager.registerFullWidget(widget);
			break;
		case SMALL:
			dashboardFullWidget.registerSmallWidget(widget);
			break;
		default:
			break;
		}
	}

	public void unregisterWidget(Widget widget) {
		switch (widget.getType()) {
		case FULL:
			fullWidgetManager.unregisterFullWidget(widget);
			break;
		case SMALL:
			dashboardFullWidget.unregisterSmallWidget(widget);
			break;
		default:
			break;
		}
	}

	public HttpRouter getRequestRouter() {
		return requestRouter;
	}

}
