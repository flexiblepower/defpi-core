# Gitlab CI definition for def-pi
#
# This file is based on the official docker maven template
#
# author: C.J. van Leeuwen
# since: 2-6-2017

variables:
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -Dmaven.repo.local=/cache/maven.repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

image: maven:3.5.0-jdk-8

stages:
  - build
  - test
  - integrate
  - predeploy
  - deploy

cache:
  paths:
    - /cache/maven.repository

      # *** BUILD JOBS *** #

# Validate java code using JDK8; for master this is a sanity check
java-compile:
  stage: build
  script:
    - 'mvn $MAVEN_CLI_OPTS -f master/pom.xml clean test-compile'

ui-compile:
  image: docker:17.03.2-ce-git
  stage: build
  script:
    - 'docker build orchestrator-ui'

      # *** TEST JOBS *** #

# Run Junit tests with maven; not on master where we will deploy
# Going to install will ensure the creation of the docker images, and entering artifacts in cache
java-test:
  stage: test
  except:
    - master
  script:
    - 'mvn $MAVEN_CLI_OPTS -f master/pom.xml install'

# Plugin template, how test the plugins with the code generator; on master we deploy
.plugin_template: &plugin
  stage: test
  except:
    - master
  before_script:
    - 'mvn $MAVEN_CLI_OPTS -f master/pom.xml install -pl ../maven-plugin -am -DskipTests'
  script:
    - 'mvn $MAVEN_CLI_OPTS -f $TEST_PROJ/pom.xml defpi:generate'

# Test plugin on xsd
plugin-test:proto:
  variables:
    TEST_PROJ: skeleton_proto
  <<: *plugin

# Test plugin on xsd
plugin-test:xsd:
  variables:
    TEST_PROJ: skeleton_xsd
  <<: *plugin

# Test to see if the orchestrator ui does what it is supposed to
ui-test:
  image: docker:17.03.2-ce-git
  tags:
    - defpi2
  stage: test
  except:
    - master
  before_script:
    - 'docker build orchestrator-ui -t orchestrator-ui:test'
    - 'docker run --rm --name ui-test -d -p 8756:80 orchestrator-ui:test'
    - 'apk add --no-cache curl'
    - 'sleep 20'
  script:
    - 'curl -s def-pi2.sensorlab.tno.nl:8756/login.html | grep "Orchestrator"'
  after_script:
    #- 'docker stop ui-test'

      # *** INTEGRATION JOBS *** #

# Deploy the complete project with modules to artifactory and the orchestrator to registry
java-integrate:
  only:
    - master
    - defpici
  stage: integrate
  script:
    - 'mvn $MAVEN_CLI_OPTS -f master/pom.xml deploy'

# Deploy UI to registry
ui-integrate:
  image: docker:17.03.2-ce-git
  only:
    - master
    - defpici
  stage: integrate
  before_script:  
    - 'docker build orchestrator-ui -t def-pi1.sensorlab.tno.nl:5000/defpi/orchestrator-ui'
  script:
    - 'docker push def-pi1.sensorlab.tno.nl:5000/defpi/orchestrator-ui'

      # *** PRE-DEPLOYMENT JOBS *** #

# How to deploy the (test)services to the registry
.integrate_template: &integrate_service
  only:
    - master
    - defpici
  stage: predeploy
  before_script:
    # In this stage the plugin should be available from artifactory
    - 'mvn $MAVEN_CLI_OPTS -f $TEST_PROJ/pom.xml defpi:generate'
  script:
    - 'mvn $MAVEN_CLI_OPTS -f $TEST_PROJ/pom.xml clean deploy'

# Deploy the proto skeleton
integrate:skeleton_proto:
  variables:
    TEST_PROJ: skeleton_proto
  <<: *integrate_service 

# Deploy the XSD skeleton    
integrate:xsd_proto:
  variables:
    TEST_PROJ: skeleton_xsd
  <<: *integrate_service

# Test the deployment first
test-deploy:
  image: tmaier/docker-compose:17.06
  tags:
    - defpi2
  only:
    - master
    - defpici
  stage: predeploy
  before_script:
    - 'docker-compose -p test -f orchestrator/docker-compose.test.yml pull'
    - 'docker-compose -p test -f orchestrator/docker-compose.test.yml up -d'
    - 'apk add --no-cache curl'
    - 'sleep 20'
  script:
    - 'nc -zv def-pi2.sensorlab.tno.nl:9999'
    - 'curl -s def-pi2.sensorlab.tno.nl:84/login.html | grep "Orchestrator"'
    - 'curl -s def-pi2.sensorlab.tno.nl:8484/swagger.json | grep "dEF-Pi API"'
  after_script:
    - 'docker-compose -p test -f orchestrator/docker-compose.test.yml down'

      # *** FINAL DEPLOY JOBS *** #

# And finally run the orchestrator on def-pi1 using docker-compose
deploy:
  image: tmaier/docker-compose:17.06
  tags:
    - defpi1
  only:
    - master
  stage: deploy
  before_script:
    - 'docker-compose -f orchestrator/docker-compose.yml pull'
  script:
    - 'docker-compose -f orchestrator/docker-compose.yml up -d'
