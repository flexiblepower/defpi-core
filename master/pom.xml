<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.flexiblepower</groupId>
	<artifactId>service-parent</artifactId>
	<version>0.1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<protobuf.classifier>linux-x86_64</protobuf.classifier>

		<mainClass>${project.groupId}.${project.artifactId}.ServiceImpl</mainClass>
		<registry>hub.servicelab.org/dsefpi</registry>
		<name>${project.artifactId}</name>
		<imageName>${registry}/services/${name}:${project.version}</imageName>
		<resources>${project.basedir}/src/main/resources</resources>

		<!-- protobuf paths -->
		<protobuf.input.directory>${resources}/protobuf</protobuf.input.directory>
		<protobuf.output.directory>${project.basedir}/src/main/java</protobuf.output.directory>

		<!-- XSD paths -->
		<xsd.input.directory>${resources}/xsd</xsd.input.directory>
		<xsd.output.package>${project.groupId}.${project.artifactId}.xml</xsd.output.package>
		<xsd.output.directory>${project.basedir}/src/main/java</xsd.output.directory>

		<!-- library versions -->
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<os-maven-plugin.version>1.4.1.Final</os-maven-plugin.version>
		<protobuf.version>3.0.0-beta-1</protobuf.version>
		<docker-maven.version>0.4.13</docker-maven.version>
		<jaxb2.version>2.2</jaxb2.version>
	</properties>

	<distributionManagement>
		<repository>
			<id>def-pi-artifactory</id>
			<name>def-pi release repository</name>
			<url>http://def-pi1.sensorlab.tno.nl:8081/artifactory/libs-release-local</url>
		</repository>
		<snapshotRepository>
			<id>def-pi-artifactory</id>
			<name>def-pi snapshot repository</name>
			<url>http://def-pi1.sensorlab.tno.nl:8081/artifactory/libs-snapshot-local</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<groupId>org.flexiblepower</groupId>
			<artifactId>service</artifactId>
			<version>1.2.0-SNAPSHOT</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>def-pi-release</id>
			<name>def-pi release repository</name>
			<url>http://def-pi1.sensorlab.tno.nl:8081/artifactory/libs-release-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>def-pi-snapshot</id>
			<name>def-pi snapshot repository</name>
			<url>http://def-pi1.sensorlab.tno.nl:8081/artifactory/libs-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.3.2</version>
						<configuration>
							<source>1.7</source>
							<target>1.7</target>
							<compilerArgument></compilerArgument>
						</configuration>
					</plugin>

					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<archive>
								<manifest>
									<mainClass>${mainClass}</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<finalName>packaged</finalName>
							<fileSets>
								<fileSet>
									<directory>src/main/resources</directory>
								</fileSet>
							</fileSets>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker-maven.version}</version>
						<configuration>
							<dockerHost>unix:///var/run/docker.sock</dockerHost>
							<!-- dockerHost>tcp://192.168.137.15:2376</dockerHost -->
							<!-- dockerHost>https://192.168.137.15:2376</dockerHost -->
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>packaged-jar-with-dependencies.jar</include>
								</resource>
							</resources>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<dockerDirectory>docker</dockerDirectory>
									<imageName>${imageName}</imageName>
								</configuration>
							</execution>
							<execution>
								<id>push-image</id>
								<phase>package</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<dockerDirectory>docker</dockerDirectory>
									<imageName>${imageName}</imageName>
								</configuration>
							</execution>
							<execution>
								<id>build-image-arm</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<dockerDirectory>docker-arm</dockerDirectory>
									<imageName>${imageName}-arm</imageName>
								</configuration>
							</execution>
							<execution>
								<id>push-image-arm</id>
								<phase>package</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<dockerDirectory>docker2</dockerDirectory>
									<imageName>${imageName}-arm</imageName>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>codegen</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.flexiblepower</groupId>
						<artifactId>create-service-maven-plugin</artifactId>
						<version>0.1.0-SNAPSHOT</version>
						<executions>
							<execution>
								<id>generate</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>create</goal>
								</goals>
								<configuration>
									<skip>true</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${maven-dependency-plugin.version}</version>
						<executions>
							<execution>
								<id>copy-protoc</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>com.google.protobuf</groupId>
											<artifactId>protoc</artifactId>
											<version>${protobuf.version}</version>
											<classifier>${protobuf.classifier}</classifier>
											<type>exe</type>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- compile proto buffer files using copied protoc binary -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<executions>
							<execution>
								<id>exec-protoc</id>
								<phase>generate-sources</phase>
								<configuration>
									<target>
										<property name="protoc.filename"
											value="protoc-${protobuf.version}-${protobuf.classifier}.exe" />
										<property name="protoc.filepath"
											value="${project.build.directory}/${protoc.filename}" />
										<chmod file="${protoc.filepath}" perm="ugo+rx" />
										<mkdir dir="${protobuf.output.directory}" />
										<path id="protobuf.input.filepaths.path">
											<fileset dir="${protobuf.input.directory}">
												<include name="**/*.proto" />
											</fileset>
										</path>
										<pathconvert pathsep=" " property="protobuf.input.filepaths"
											refid="protobuf.input.filepaths.path" />
										<exec executable="${protoc.filepath}" failonerror="true">
											<arg value="-I" />
											<arg value="${protobuf.input.directory}" />
											<arg value="--java_out" />
											<arg value="${protobuf.output.directory}" />
											<arg line="${protobuf.input.filepaths}" />
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>jaxb2-maven-plugin</artifactId>
						<version>${jaxb2.version}</version>
						<executions>
							<execution>
								<id>xjc</id>
								<goals>
									<goal>xjc</goal>
								</goals>
								<phase>generate-sources</phase>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>net.java.dev.jaxb2-commons</groupId>
								<artifactId>jaxb-fluent-api</artifactId>
								<version>2.1.8</version>
								<exclusions>
									<exclusion>
										<groupId>com.sun.xml</groupId>
										<artifactId>jaxb-xjc</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.jvnet.jaxb2_commons</groupId>
								<artifactId>jaxb2-basics</artifactId>
								<version>0.6.4</version>
								<exclusions>
									<exclusion>
										<groupId>com.sun.xml</groupId>
										<artifactId>jaxb-xjc</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
						</dependencies>
						<configuration>
							<!-- The package of your generated sources -->
							<packageName>${xsd.output.package}</packageName>
							<outputDirectory>${xsd.output.directory}</outputDirectory>
							<clearOutputDir>false</clearOutputDir>
							<generateEpisode>false</generateEpisode>
							<sources>
								<source>${xsd.input.directory}</source>
							</sources>
							<failOnNoSchemas>false</failOnNoSchemas>
							<extension>true</extension>
							<arguments>-Xfluent-api</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
